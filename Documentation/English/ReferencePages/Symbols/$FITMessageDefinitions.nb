(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   CellGroupData[
    {
     Cell[
      "$FITMessageDefinitions",
      "ObjectName",
      CellID -> 164466796
     ],
     Cell[
      TextData[
       {
        Cell["   ", "ModInfo"],
        Cell[
         BoxData[
          ButtonBox[
           "$FITMessageDefinitions",
           BaseStyle -> "Link",
           ButtonData -> "paclet:RH/ComputationalFitness/ref/$FITMessageDefinitions"
          ]
         ],
         "InlineFormula"
        ],
        " \[LineSeparator]gives information about how to interpret raw FIT message fields"
       }
      ],
      "Usage",
      CellID -> 32163786
     ],
     Cell["XXXX", "Notes", CellID -> 178451688]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Tech Notes",
        Cell[
         BoxData[
          TemplateBox[
           {
            "TechNotes",
            Cell[
             BoxData[
              FrameBox[
               Cell["Insert links to related tech notes.", "MoreInfoText"],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "TechNotesSection",
      CellID -> 22206135
     ],
     Cell["XXXX", "Tutorials", CellID -> 44947522]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Related Links",
        Cell[
         BoxData[
          TemplateBox[
           {
            "RelatedLinks",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Insert links to any related page, including web pages.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "RelatedLinksSection",
      CellID -> 559368017
     ],
     Cell["XXXX", "RelatedLinks", CellID -> 36090513]
    },
    Open
   ]
  ],
  Cell[
   TextData[
    {
     "See Also",
     Cell[
      BoxData[
       TemplateBox[
        {
         "SeeAlso",
         Cell[
          BoxData[
           FrameBox[
            Cell[
             "Insert links to any related reference (function) pages.",
             "MoreInfoText"
            ],
            BaseStyle -> "IFrameBox"
           ]
          ],
          "MoreInfoTextOuter"
         ]
        },
        "MoreInfoOpenerButtonTemplate"
       ]
      ]
     ]
    }
   ],
   "SeeAlsoSection",
   CellID -> 267832718
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      "Related Guides",
      "MoreAboutSection",
      CellID -> 296486151
     ],
     Cell["XXXX", "MoreAbout", CellID -> 151541920]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "Examples Initialization",
        Cell[
         BoxData[
          TemplateBox[
           {
            "ExamplesInitialization",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Input that is to be evaluated before any examples are run, e.g. Needs[\[Ellipsis]].",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExamplesInitializationSection",
      CellID -> 47480316
     ],
     Cell[
      BoxData[
       RowBox[{"Needs", "[", "\"RH`ComputationalFitness`\"", "]"}]
      ],
      "ExampleInitialization",
      CellID -> 278212573
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[
       InterpretationBox[
        GridBox[
         {
          {
           StyleBox[
            RowBox[{"Basic", " ", "Examples"}],
            "PrimaryExamplesSection"
           ],
           ButtonBox[
            RowBox[
             {
              RowBox[{"More", " ", "Examples"}],
              " ",
              "\[RightTriangle]"
             }
            ],
            BaseStyle -> "ExtendedExamplesLink",
            ButtonData :> "ExtendedExamples"
           ]
          }
         }
        ],
        $Line = 0;
       ]
      ],
      "PrimaryExamplesSection",
      CellID -> 265144756
     ],
     Cell[
      "Get information about FIT message types:",
      "ExampleText",
      CellID -> 33038674
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData["$FITMessageDefinitions"],
         "Input",
         CellLabel -> "In[1]:=",
         CellID -> 590817660
        ],
        Cell[
         BoxData[
          TemplateBox[
           <|
            "shortenedBoxes" ->
             TagBox[
              RowBox[
               {
                "\[LeftAssociation]",
                RowBox[
                 {
                  RowBox[
                   {
                    "\"AccelerometerData\"",
                    "\[Rule]",
                    RowBox[
                     {
                      "\[LeftAssociation]",
                      RowBox[
                       {
                        RowBox[
                         {"\"MessageName\"", "\[Rule]", "\"AccelerometerData\""}
                        ],
                        ",",
                        TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"],
                        ",",
                        TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"],
                        ",",
                        RowBox[
                         {
                          "\"Fields\"",
                          "\[Rule]",
                          RowBox[
                           {
                            "\[LeftAssociation]",
                            RowBox[
                             {
                              RowBox[
                               {
                                "\"AccelerationX\"",
                                "\[Rule]",
                                RowBox[
                                 {
                                  "\[LeftAssociation]",
                                  RowBox[
                                   {
                                    RowBox[
                                     {
                                      "\"Comment\"",
                                      "\[Rule]",
                                      "\"1 * counts + 0, These are the raw ADC reading. Maximum number of samples is 30 in each message. The samples may span across seconds. A conversion will need to be done on this data once read.\""
                                     }
                                    ],
                                    ",",
                                    TemplateBox[{"8"}, "OutputSizeLimit`Skeleton"]
                                   }
                                  ],
                                  "\[RightAssociation]"
                                 }
                                ]
                               }
                              ],
                              ",",
                              TemplateBox[{"10"}, "OutputSizeLimit`Skeleton"],
                              ",",
                              RowBox[
                               {
                                RowBox[{"\"\"", "\[Ellipsis]", "\"\""}],
                                "\[Rule]",
                                TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]
                               }
                              ]
                             }
                            ],
                            "\[RightAssociation]"
                           }
                          ]
                         }
                        ]
                       }
                      ],
                      "\[RightAssociation]"
                     }
                    ]
                   }
                  ],
                  ",",
                  TemplateBox[{"86"}, "OutputSizeLimit`Skeleton"],
                  ",",
                  TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]
                 }
                ],
                "\[RightAssociation]"
               }
              ],
              Short[#1, 8] &
             ],
            "line" -> 1,
            "sessionID" -> 34161966168405134796,
            "byteCount" -> 2239320,
            "size" -> 8,
            "stored" -> False,
            "expr" -> Missing["NotStored"],
            "wrap" -> OutputSizeLimit`Defer,
            "version" -> 1
           |>,
           "OutputSizeLimitTemplate"
          ]
         ],
         "Output",
         CellLabel -> "Out[1]=",
         CellID -> 563550733
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["\t", "ExampleDelimiter"],
           $Line = 0;
          ]
         ],
         "ExampleDelimiter",
         CellID -> 45244717
        ],
        Cell[
         "Get the unprocessed message data from a FIT file:",
         "ExampleText",
         CellID -> 20117698
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "data",
               "=",
               RowBox[
                {
                 "FITImport",
                 "[",
                 RowBox[
                  {
                   "\"RH/ComputationalFitness/ExampleData/BikeRide.fit\"",
                   ",",
                   "\"RawData\""
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 17627183
           ],
           Cell[
            BoxData[
             TemplateBox[
              <|
               "shortenedBoxes" ->
                TagBox[
                 RowBox[
                  {
                   "{",
                   RowBox[
                    {
                     RowBox[
                      {
                       "{",
                       RowBox[
                        {
                         "0",
                         ",",
                         "3412586167",
                         ",",
                         "3876117940",
                         ",",
                         "1",
                         ",",
                         "3122",
                         ",",
                         "65535",
                         ",",
                         "4",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "1685024357",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0",
                         ",",
                         "0"
                        }
                       ],
                       "}"
                      }
                     ],
                     ",",
                     TemplateBox[{"23152"}, "OutputSizeLimit`Skeleton"]
                    }
                   ],
                   "}"
                  }
                 ],
                 Short[#1, 8] &
                ],
               "line" -> 1,
               "sessionID" -> 34161966168405134796,
               "byteCount" -> 31858736,
               "size" -> 8,
               "stored" -> False,
               "expr" -> Missing["NotStored"],
               "wrap" -> OutputSizeLimit`Defer,
               "version" -> 1
              |>,
              "OutputSizeLimitTemplate"
             ]
            ],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 108317273
           ]
          },
          Open
         ]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[{"SeedRandom", "[", "2", "]"}],
            ";",
            RowBox[{"$Line", "=", "1"}],
            ";"
           }
          ]
         ],
         "Input",
         "FutureExample",
         CellDingbat ->
          Cell[
           BoxData[
            TooltipBox[
             Cell["rhennigan      ", "TentativeID"],
             "2022-12-19"
            ]
           ],
           "TentativeWrapper"
          ],
         CellLabel -> "In[17]:=",
         CellID -> 458732826
        ],
        Cell[
         "Choose a random message:",
         "ExampleText",
         CellID -> 132147959
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "message",
               "=",
               RowBox[{"RandomChoice", "[", "data", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 56565630
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 "20",
                 ",",
                 "3876123703",
                 ",",
                 "512501988",
                 ",",
                 RowBox[{"-", "855513351"}],
                 ",",
                 "3965232",
                 ",",
                 "2147483647",
                 ",",
                 "4294967295",
                 ",",
                 "1161584",
                 ",",
                 "4294967295",
                 ",",
                 "4294967295",
                 ",",
                 "4294967295",
                 ",",
                 "4294967295",
                 ",",
                 "4294967295",
                 ",",
                 "4294967295",
                 ",",
                 "4294967295",
                 ",",
                 "4294967295",
                 ",",
                 RowBox[{"-", "9223372036854775808"}],
                 ",",
                 RowBox[{"-", "9223372036854775808"}],
                 ",",
                 "3327",
                 ",",
                 "10777",
                 ",",
                 "195",
                 ",",
                 "32767",
                 ",",
                 "65535",
                 ",",
                 "32767",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "65535",
                 ",",
                 "182",
                 ",",
                 "75",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "18",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "175",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "0",
                 ",",
                 "255",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "250",
                 ",",
                 "138",
                 ",",
                 "37",
                 ",",
                 "78",
                 ",",
                 "247",
                 ",",
                 "146",
                 ",",
                 "42",
                 ",",
                 "84",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "255",
                 ",",
                 "1685024357",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0",
                 ",",
                 "0"
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 98137498
           ]
          },
          Open
         ]
        ],
        Cell[
         "The first number corresponds to the message type:",
         "ExampleText",
         CellID -> 1561028
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "definition",
               "=",
               RowBox[
                {
                 "Dataset",
                 "[",
                 RowBox[
                  {
                   "FirstCase",
                   "[",
                   RowBox[
                    {
                     "$FITMessageDefinitions",
                     ",",
                     RowBox[
                      {
                       "KeyValuePattern",
                       "[",
                       RowBox[
                        {
                         "\"MessageNumber\"",
                         "->",
                         RowBox[{"First", "[", "message", "]"}]
                        }
                       ],
                       "]"
                      }
                     ]
                    }
                   ],
                   "]"
                  }
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[3]:=",
            CellID -> 163869577
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> <|
                   "MessageName" -> "Record",
                   "MessageNumber" -> 20,
                   "Size" -> 85,
                   "Fields" -> <|
                    "AbsolutePressure" -> <|
                     "Comment" -> "1 * Pa + 0, Includes atmospheric pressure",
                     "Dimensions" -> { },
                     "FieldName" -> "AbsolutePressure",
                     "Index" -> 11,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Pascals", 1, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "absolute_pressure",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "AccumulatedPower" -> <|
                     "Comment" -> "1 * watts + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "AccumulatedPower",
                     "Index" -> 8,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Watts", 1, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "accumulated_power",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "ActivityType" -> <|
                     "Dimensions" -> { },
                     "FieldName" -> "ActivityType",
                     "Index" -> 60,
                     "Interpreter" -> {"fitEnum", "ActivityType"},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "activity_type",
                     "NativeType" -> "FIT_ACTIVITY_TYPE",
                     "Type" -> "ActivityType"
                    |>,
                    "Altitude" -> <|
                     "Comment" -> "5 * m + 500",
                     "Dimensions" -> { },
                     "FieldName" -> "Altitude",
                     "Index" -> 19,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 5, 500},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "altitude",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "BallSpeed" -> <|
                     "Comment" -> "100 * m/s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "BallSpeed",
                     "Index" -> 29,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "MetersPerSecond", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "ball_speed",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "BatteryStateOfCharge" -> <|
                     "Comment" -> "2 * percent + 0, lev battery state of charge",
                     "Dimensions" -> { },
                     "FieldName" -> "BatteryStateOfCharge",
                     "Index" -> 81,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "battery_soc",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "Cadence" -> <|
                     "Comment" -> "1 * rpm + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Cadence",
                     "Index" -> 45,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "RevolutionsPerMinute", 1, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "cadence",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "Cadence256" -> <|
                     "Comment" -> "256 * rpm + 0, Log cadence and fractional cadence for backwards compatability",
                     "Dimensions" -> { },
                     "FieldName" -> "Cadence256",
                     "Index" -> 30,
                     "Interpreter" -> {
                      "fitQuantity",
                      "fitUINT16",
                      "RevolutionsPerMinute",
                      256,
                      0
                     },
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "cadence256",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "Calories" -> <|
                     "Comment" -> "1 * kcal + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Calories",
                     "Index" -> 25,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "DietaryCalories", 1, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "calories",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "CentralNervousSystemLoading" -> <|
                     "Comment" -> "1 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "CentralNervousSystemLoading",
                     "Index" -> 82,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 1, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "cns_load",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "CombinedPedalSmoothness" -> <|
                     "Comment" -> "2 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "CombinedPedalSmoothness",
                     "Index" -> 65,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "combined_pedal_smoothness",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "CompressedAccumulatedPower" -> <|
                     "Comment" -> "1 * watts + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "CompressedAccumulatedPower",
                     "Index" -> 23,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "compressed_accumulated_power",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "CompressedSpeedDistance" -> <|
                     "Dimensions" -> {3},
                     "FieldName" -> "CompressedSpeedDistance",
                     "Index" -> Span[46, 48],
                     "Interpreter" -> "fitByteA",
                     "Invalid" -> 255,
                     "NativeFieldName" -> "compressed_speed_distance",
                     "NativeType" -> "FIT_BYTE",
                     "Type" -> "Byte"
                    |>,
                    "CoreTemperature" -> <|
                     "Comment" -> "100 * C + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "CoreTemperature",
                     "Index" -> 43,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "DegreesCelsius", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "core_temperature",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "CycleLength" -> <|
                     "Comment" -> "100 * m + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "CycleLength",
                     "Index" -> 50,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Meters", 100, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "cycle_length",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "Cycles" -> <|
                     "Comment" -> "1 * cycles + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Cycles",
                     "Index" -> 57,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Cycles", 1, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "cycles",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "Depth" -> <|
                     "Comment" -> "1000 * m + 0, 0 if above water",
                     "Dimensions" -> { },
                     "FieldName" -> "Depth",
                     "Index" -> 12,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 1000, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "depth",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "DeviceIndex" -> <|
                     "Dimensions" -> { },
                     "FieldName" -> "DeviceIndex",
                     "Index" -> 70,
                     "Interpreter" -> {"fitEnum", "DeviceIndex"},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "device_index",
                     "NativeType" -> "FIT_DEVICE_INDEX",
                     "Type" -> "DeviceIndex"
                    |>,
                    "Distance" -> <|
                     "Comment" -> "100 * m + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Distance",
                     "Index" -> 5,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 100, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "distance",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "ElectricBikeAssistLevelPercent" -> <|
                     "Comment" -> "1 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "ElectricBikeAssistLevelPercent",
                     "Index" -> 85,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 1, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "ebike_assist_level_percent",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "ElectricBikeAssistMode" -> <|
                     "Comment" -> "1 * depends on sensor + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "ElectricBikeAssistMode",
                     "Index" -> 84,
                     "Interpreter" -> "fitUINT8",
                     "Invalid" -> 255,
                     "NativeFieldName" -> "ebike_assist_mode",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "ElectricBikeBatteryLevel" -> <|
                     "Comment" -> "1 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "ElectricBikeBatteryLevel",
                     "Index" -> 83,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 1, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "ebike_battery_level",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "ElectricBikeTravelRange" -> <|
                     "Comment" -> "1 * km + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "ElectricBikeTravelRange",
                     "Index" -> 42,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 0.001, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "ebike_travel_range",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "EnhancedAltitude" -> <|
                     "Comment" -> "5 * m + 500",
                     "Dimensions" -> { },
                     "FieldName" -> "EnhancedAltitude",
                     "Index" -> 10,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 5, 500},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "enhanced_altitude",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "EnhancedSpeed" -> <|
                     "Comment" -> "1000 * m/s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "EnhancedSpeed",
                     "Index" -> 9,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "MetersPerSecond", 1000, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "enhanced_speed",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "Flow" -> <|
                     "Comment" -> "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.",
                     "Dimensions" -> { },
                     "FieldName" -> "Flow",
                     "Index" -> 18,
                     "Interpreter" -> "fitFloat32",
                     "Invalid" -> -9223372036854775808,
                     "NativeFieldName" -> "flow",
                     "NativeType" -> "FIT_FLOAT32",
                     "Type" -> "Real32"
                    |>,
                    "FractionalCadence" -> <|
                     "Comment" -> "128 * rpm + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "FractionalCadence",
                     "Index" -> 69,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "RevolutionsPerMinute", 128, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "fractional_cadence",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "GPSAccuracy" -> <|
                     "Comment" -> "1 * m + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "GPSAccuracy",
                     "Index" -> 59,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Meters", 1, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "gps_accuracy",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "Grade" -> <|
                     "Comment" -> "100 * % + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Grade",
                     "Index" -> 22,
                     "Interpreter" -> {"fitQuantity", "fitSINT16", "Percent", 100, 0},
                     "Invalid" -> 32767,
                     "NativeFieldName" -> "grade",
                     "NativeType" -> "FIT_SINT16",
                     "Type" -> "SignedInteger16"
                    |>,
                    "Grit" -> <|
                     "Comment" -> "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.",
                     "Dimensions" -> { },
                     "FieldName" -> "Grit",
                     "Index" -> 17,
                     "Interpreter" -> "fitFloat32",
                     "Invalid" -> -9223372036854775808,
                     "NativeFieldName" -> "grit",
                     "NativeType" -> "FIT_FLOAT32",
                     "Type" -> "Real32"
                    |>,
                    "HeartRate" -> <|
                     "Comment" -> "1 * bpm + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "HeartRate",
                     "Index" -> 44,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Beats"/"Minutes", 1, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "heart_rate",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "LeftPedalSmoothness" -> <|
                     "Comment" -> "2 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "LeftPedalSmoothness",
                     "Index" -> 63,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "left_pedal_smoothness",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "LeftPlatformCenterOffset" -> <|
                     "Comment" -> "1 * mm + 0, Left platform center offset",
                     "Dimensions" -> { },
                     "FieldName" -> "LeftPlatformCenterOffset",
                     "Index" -> 71,
                     "Interpreter" -> {"fitQuantity", "fitSINT8", "Meters", 1000, 0},
                     "Invalid" -> 127,
                     "NativeFieldName" -> "left_pco",
                     "NativeType" -> "FIT_SINT8",
                     "Type" -> "SignedInteger8"
                    |>,
                    "LeftPowerPhase" -> <|
                     "Comment" -> "0.7111111 * degrees + 0, Left power phase angles. Data value indexes defined by power_phase_type.",
                     "Dimensions" -> {2},
                     "FieldName" -> "LeftPowerPhase",
                     "Index" -> Span[73, 74],
                     "Interpreter" -> {
                      "fitQuantity",
                      "fitUINT8A",
                      "AngularDegrees",
                      0.7111111,
                      0
                     },
                     "Invalid" -> 255,
                     "NativeFieldName" -> "left_power_phase",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "LeftPowerPhasePeak" -> <|
                     "Comment" -> "0.7111111 * degrees + 0, Left power phase peak angles. Data value indexes defined by power_phase_type.",
                     "Dimensions" -> {2},
                     "FieldName" -> "LeftPowerPhasePeak",
                     "Index" -> Span[75, 76],
                     "Interpreter" -> {
                      "fitQuantity",
                      "fitUINT8A",
                      "AngularDegrees",
                      0.7111111,
                      0
                     },
                     "Invalid" -> 255,
                     "NativeFieldName" -> "left_power_phase_peak",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "LeftRightBalance" -> <|
                     "Dimensions" -> { },
                     "FieldName" -> "LeftRightBalance",
                     "Index" -> 58,
                     "Interpreter" -> {"fitEnum", "LeftRightBalance"},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "left_right_balance",
                     "NativeType" -> "FIT_LEFT_RIGHT_BALANCE",
                     "Type" -> "LeftRightBalance"
                    |>,
                    "LeftTorqueEffectiveness" -> <|
                     "Comment" -> "2 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "LeftTorqueEffectiveness",
                     "Index" -> 61,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "left_torque_effectiveness",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "MotorPower" -> <|
                     "Comment" -> "1 * watts + 0, lev motor power",
                     "Dimensions" -> { },
                     "FieldName" -> "MotorPower",
                     "Index" -> 37,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "motor_power",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "N2Load" -> <|
                     "Comment" -> "1 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "N2Load",
                     "Index" -> 41,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 1, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "n2_load",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "NextStopDepth" -> <|
                     "Comment" -> "1000 * m + 0, 0 if above water",
                     "Dimensions" -> { },
                     "FieldName" -> "NextStopDepth",
                     "Index" -> 13,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 1000, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "next_stop_depth",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "NextStopTime" -> <|
                     "Comment" -> "1 * s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "NextStopTime",
                     "Index" -> 14,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Seconds", 1, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "next_stop_time",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "NoDecompressionLimitTime" -> <|
                     "Comment" -> "1 * s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "NoDecompressionLimitTime",
                     "Index" -> 16,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Seconds", 1, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "ndl_time",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "PositionLatitude" -> <|
                     "Comment" -> "1 * semicircles + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "PositionLatitude",
                     "Index" -> 3,
                     "Interpreter" -> {
                      "fitQuantity",
                      "fitSINT32",
                      "AngularDegrees",
                      1.19304647*^7,
                      0
                     },
                     "Invalid" -> 2147483647,
                     "NativeFieldName" -> "position_lat",
                     "NativeType" -> "FIT_SINT32",
                     "Type" -> "SignedInteger32"
                    |>,
                    "PositionLongitude" -> <|
                     "Comment" -> "1 * semicircles + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "PositionLongitude",
                     "Index" -> 4,
                     "Interpreter" -> {
                      "fitQuantity",
                      "fitSINT32",
                      "AngularDegrees",
                      1.19304647*^7,
                      0
                     },
                     "Invalid" -> 2147483647,
                     "NativeFieldName" -> "position_long",
                     "NativeType" -> "FIT_SINT32",
                     "Type" -> "SignedInteger32"
                    |>,
                    "Power" -> <|
                     "Comment" -> "1 * watts + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Power",
                     "Index" -> 21,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "power",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "Resistance" -> <|
                     "Comment" -> "Relative. 0 is none 254 is Max.",
                     "Dimensions" -> { },
                     "FieldName" -> "Resistance",
                     "Index" -> 49,
                     "Interpreter" -> "fitUINT8",
                     "Invalid" -> 255,
                     "NativeFieldName" -> "resistance",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "RightPedalSmoothness" -> <|
                     "Comment" -> "2 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "RightPedalSmoothness",
                     "Index" -> 64,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "right_pedal_smoothness",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "RightPlatformCenterOffset" -> <|
                     "Comment" -> "1 * mm + 0, Right platform center offset",
                     "Dimensions" -> { },
                     "FieldName" -> "RightPlatformCenterOffset",
                     "Index" -> 72,
                     "Interpreter" -> {"fitQuantity", "fitSINT8", "Meters", 1000, 0},
                     "Invalid" -> 127,
                     "NativeFieldName" -> "right_pco",
                     "NativeType" -> "FIT_SINT8",
                     "Type" -> "SignedInteger8"
                    |>,
                    "RightPowerPhase" -> <|
                     "Comment" -> "0.7111111 * degrees + 0, Right power phase angles. Data value indexes defined by power_phase_type.",
                     "Dimensions" -> {2},
                     "FieldName" -> "RightPowerPhase",
                     "Index" -> Span[77, 78],
                     "Interpreter" -> {
                      "fitQuantity",
                      "fitUINT8A",
                      "AngularDegrees",
                      0.7111111,
                      0
                     },
                     "Invalid" -> 255,
                     "NativeFieldName" -> "right_power_phase",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "RightPowerPhasePeak" -> <|
                     "Comment" -> "0.7111111 * degrees + 0, Right power phase peak angles. Data value indexes defined by power_phase_type.",
                     "Dimensions" -> {2},
                     "FieldName" -> "RightPowerPhasePeak",
                     "Index" -> Span[79, 80],
                     "Interpreter" -> {
                      "fitQuantity",
                      "fitUINT8A",
                      "AngularDegrees",
                      0.7111111,
                      0
                     },
                     "Invalid" -> 255,
                     "NativeFieldName" -> "right_power_phase_peak",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "RightTorqueEffectiveness" -> <|
                     "Comment" -> "2 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "RightTorqueEffectiveness",
                     "Index" -> 62,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "right_torque_effectiveness",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "SaturatedHemoglobinPercent" -> <|
                     "Comment" -> "10 * % + 0, Percentage of hemoglobin saturated with oxygen",
                     "Dimensions" -> { },
                     "FieldName" -> "SaturatedHemoglobinPercent",
                     "Index" -> 34,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 10, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "saturated_hemoglobin_percent",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "SaturatedHemoglobinPercentMaximum" -> <|
                     "Comment" -> "10 * % + 0, Max percentage of hemoglobin saturated with oxygen",
                     "Dimensions" -> { },
                     "FieldName" -> "SaturatedHemoglobinPercentMaximum",
                     "Index" -> 36,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 10, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "saturated_hemoglobin_percent_max",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "SaturatedHemoglobinPercentMinimum" -> <|
                     "Comment" -> "10 * % + 0, Min percentage of hemoglobin saturated with oxygen",
                     "Dimensions" -> { },
                     "FieldName" -> "SaturatedHemoglobinPercentMinimum",
                     "Index" -> 35,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 10, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "saturated_hemoglobin_percent_min",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "Speed" -> <|
                     "Comment" -> "1000 * m/s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Speed",
                     "Index" -> 20,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "MetersPerSecond", 1000, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "speed",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "Speed1S" -> <|
                     "Comment" -> "16 * m/s + 0, Speed at 1s intervals. Timestamp field indicates time of last array element.",
                     "Dimensions" -> {5},
                     "FieldName" -> "Speed1S",
                     "Index" -> Span[52, 56],
                     "Interpreter" -> {"fitQuantity", "fitUINT8A", "MetersPerSecond", 16, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "speed_1s",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "StanceTime" -> <|
                     "Comment" -> "10 * ms + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "StanceTime",
                     "Index" -> 28,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Seconds", 10000, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "stance_time",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "StanceTimeBalance" -> <|
                     "Comment" -> "100 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "StanceTimeBalance",
                     "Index" -> 39,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "stance_time_balance",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "StanceTimePercent" -> <|
                     "Comment" -> "100 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "StanceTimePercent",
                     "Index" -> 27,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "stance_time_percent",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "StepLength" -> <|
                     "Comment" -> "10 * mm + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "StepLength",
                     "Index" -> 40,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "step_length",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "StrokeType" -> <|
                     "Dimensions" -> { },
                     "FieldName" -> "StrokeType",
                     "Index" -> 67,
                     "Interpreter" -> {"fitEnum", "StrokeType"},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "stroke_type",
                     "NativeType" -> "FIT_STROKE_TYPE",
                     "Type" -> "StrokeType"
                    |>,
                    "Temperature" -> <|
                     "Comment" -> "1 * C + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Temperature",
                     "Index" -> 51,
                     "Interpreter" -> {"fitQuantity", "fitSINT8", "DegreesCelsius", 1, 0},
                     "Invalid" -> 127,
                     "NativeFieldName" -> "temperature",
                     "NativeType" -> "FIT_SINT8",
                     "Type" -> "SignedInteger8"
                    |>,
                    "Time128" -> <|
                     "Comment" -> "128 * s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Time128",
                     "Index" -> 66,
                     "Interpreter" -> {"fitQuantity", "fitUINT8", "Seconds", 128, 0},
                     "Invalid" -> 255,
                     "NativeFieldName" -> "time128",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>,
                    "TimeFromCourse" -> <|
                     "Comment" -> "1000 * s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "TimeFromCourse",
                     "Index" -> 6,
                     "Interpreter" -> {"fitQuantity", "fitSINT32", "Seconds", 1000, 0},
                     "Invalid" -> 2147483647,
                     "NativeFieldName" -> "time_from_course",
                     "NativeType" -> "FIT_SINT32",
                     "Type" -> "SignedInteger32"
                    |>,
                    "Timestamp" -> <|
                     "Comment" -> "1 * s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "Timestamp",
                     "Index" -> 2,
                     "Interpreter" -> "fitDateTime",
                     "Invalid" -> 7135003695,
                     "NativeFieldName" -> "timestamp",
                     "NativeType" -> "FIT_DATE_TIME",
                     "Type" -> "DateTime"
                    |>,
                    "TimeToSurface" -> <|
                     "Comment" -> "1 * s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "TimeToSurface",
                     "Index" -> 15,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Seconds", 1, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "time_to_surface",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "TotalCycles" -> <|
                     "Comment" -> "1 * cycles + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "TotalCycles",
                     "Index" -> 7,
                     "Interpreter" -> {"fitQuantity", "fitUINT32", "Cycles", 1, 0},
                     "Invalid" -> 4294967295,
                     "NativeFieldName" -> "total_cycles",
                     "NativeType" -> "FIT_UINT32",
                     "Type" -> "UnsignedInteger32"
                    |>,
                    "TotalHemoglobinConcentration" -> <|
                     "Comment" -> "100 * g/dL + 0, Total saturated and unsaturated hemoglobin",
                     "Dimensions" -> { },
                     "FieldName" -> "TotalHemoglobinConcentration",
                     "Index" -> 31,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Grams"/"Deciliters", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "total_hemoglobin_conc",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "TotalHemoglobinConcentrationMaximum" -> <|
                     "Comment" -> "100 * g/dL + 0, Max saturated and unsaturated hemoglobin",
                     "Dimensions" -> { },
                     "FieldName" -> "TotalHemoglobinConcentrationMaximum",
                     "Index" -> 33,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Grams"/"Deciliters", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "total_hemoglobin_conc_max",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "TotalHemoglobinConcentrationMinimum" -> <|
                     "Comment" -> "100 * g/dL + 0, Min saturated and unsaturated hemoglobin",
                     "Dimensions" -> { },
                     "FieldName" -> "TotalHemoglobinConcentrationMinimum",
                     "Index" -> 32,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Grams"/"Deciliters", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "total_hemoglobin_conc_min",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "VerticalOscillation" -> <|
                     "Comment" -> "10 * mm + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "VerticalOscillation",
                     "Index" -> 26,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "vertical_oscillation",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "VerticalRatio" -> <|
                     "Comment" -> "100 * percent + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "VerticalRatio",
                     "Index" -> 38,
                     "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 100, 0},
                     "Invalid" -> 65535,
                     "NativeFieldName" -> "vertical_ratio",
                     "NativeType" -> "FIT_UINT16",
                     "Type" -> "UnsignedInteger16"
                    |>,
                    "VerticalSpeed" -> <|
                     "Comment" -> "1000 * m/s + 0",
                     "Dimensions" -> { },
                     "FieldName" -> "VerticalSpeed",
                     "Index" -> 24,
                     "Interpreter" -> {"fitQuantity", "fitSINT16", "MetersPerSecond", 1000, 0},
                     "Invalid" -> 32767,
                     "NativeFieldName" -> "vertical_speed",
                     "NativeType" -> "FIT_SINT16",
                     "Type" -> "SignedInteger16"
                    |>,
                    "Zone" -> <|
                     "Dimensions" -> { },
                     "FieldName" -> "Zone",
                     "Index" -> 68,
                     "Interpreter" -> "fitUINT8",
                     "Invalid" -> 255,
                     "NativeFieldName" -> "zone",
                     "NativeType" -> "FIT_UINT8",
                     "Type" -> "UnsignedInteger8"
                    |>
                   |>
                  |>,
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`DocumentShape[
                    <|
                     {"MessageName"} -> TypeSystem`PackageScope`AtomShape[67.2],
                     {"MessageNumber"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"Size"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"Fields"} -> TypeSystem`PackageScope`ElidedShape[1]
                    |>,
                    1
                   ],
                  "InitialType" ->
                   TypeSystem`Struct[
                    {"MessageName", "MessageNumber", "Size", "Fields"},
                    {
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Assoc[
                      TypeSystem`Atom[String],
                      TypeSystem`Struct[
                       {
                        "Comment",
                        "Dimensions",
                        "FieldName",
                        "Index",
                        "Interpreter",
                        "Invalid",
                        "NativeFieldName",
                        "NativeType",
                        "Type"
                       },
                       {
                        TypeSystem`Atom[String],
                        TypeSystem`Vector[
                         TypeSystem`Atom[Integer],
                         TypeSystem`AnyLength
                        ],
                        TypeSystem`Atom[String],
                        TypeSystem`AnyType,
                        TypeSystem`AnyType,
                        TypeSystem`Atom[Integer],
                        TypeSystem`Atom[String],
                        TypeSystem`Atom[String],
                        TypeSystem`Atom[String]
                       }
                      ],
                      74
                     ]
                    }
                   ],
                  "Meta" -> <| |>,
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`DocumentShape[
                    <|
                     {"MessageName"} -> TypeSystem`PackageScope`AtomShape[67.2],
                     {"MessageNumber"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"Size"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"Fields"} -> TypeSystem`PackageScope`ElidedShape[1]
                    |>,
                    1
                   ],
                  "Type" ->
                   TypeSystem`Struct[
                    {"MessageName", "MessageNumber", "Size", "Fields"},
                    {
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Assoc[
                      TypeSystem`Atom[String],
                      TypeSystem`Struct[
                       {
                        "Comment",
                        "Dimensions",
                        "FieldName",
                        "Index",
                        "Interpreter",
                        "Invalid",
                        "NativeFieldName",
                        "NativeType",
                        "Type"
                       },
                       {
                        TypeSystem`Atom[String],
                        TypeSystem`Vector[
                         TypeSystem`Atom[Integer],
                         TypeSystem`AnyLength
                        ],
                        TypeSystem`Atom[String],
                        TypeSystem`AnyType,
                        TypeSystem`AnyType,
                        TypeSystem`Atom[Integer],
                        TypeSystem`Atom[String],
                        TypeSystem`Atom[String],
                        TypeSystem`Atom[String]
                       }
                      ],
                      74
                     ]
                    }
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 20,
                  "DisplayedColumnCount" -> 10,
                  "DataRowCount" -> 4,
                  "DataColumnCount" -> 1,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> Null,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "MessageName",
                                Style[
                                 "MessageName",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["MessageName"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["MessageName"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "Record",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["MessageName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{67.2, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "MessageNumber",
                                Style[
                                 "MessageNumber",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["MessageNumber"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["MessageNumber"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["20"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["MessageNumber"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Size",
                                Style[
                                 "Size",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Size"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Size"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["85"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Size"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Fields",
                                Style[
                                 "Fields",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Fields"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Fields"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[
                                 Row[
                                  {
                                   "\[LeftAssociation] ",
                                   Subscript["\[Ellipsis]", 74],
                                   "\[RightAssociation]"
                                  }
                                 ],
                                 GrayLevel[0.5]
                                ],
                                Style[
                                 Style[
                                  Row[
                                   {
                                    "\[LeftAssociation] ",
                                    Subscript["\[Ellipsis]", 74],
                                    "\[RightAssociation]"
                                   }
                                  ],
                                  GrayLevel[0.5]
                                 ],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Fields"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Fields"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           BaseStyle -> {GrayLevel[0.5]}
                          ]
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.7490196078431373],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {183., {59.8544921875, 65.1455078125}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {183., {59.8544921875, 65.1455078125}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[3]=",
            CellID -> 330723342
           ]
          },
          Open
         ]
        ],
        Cell[
         "Get field definitions for the given message type:",
         "ExampleText",
         CellID -> 284063906
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "fields",
               "=",
               RowBox[{"definition", "[", "\"Fields\"", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[4]:=",
            CellID -> 238082807
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> <|
                   "AbsolutePressure" -> <|
                    "Comment" -> "1 * Pa + 0, Includes atmospheric pressure",
                    "Dimensions" -> { },
                    "FieldName" -> "AbsolutePressure",
                    "Index" -> 11,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Pascals", 1, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "absolute_pressure",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "AccumulatedPower" -> <|
                    "Comment" -> "1 * watts + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "AccumulatedPower",
                    "Index" -> 8,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Watts", 1, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "accumulated_power",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "ActivityType" -> <|
                    "Dimensions" -> { },
                    "FieldName" -> "ActivityType",
                    "Index" -> 60,
                    "Interpreter" -> {"fitEnum", "ActivityType"},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "activity_type",
                    "NativeType" -> "FIT_ACTIVITY_TYPE",
                    "Type" -> "ActivityType"
                   |>,
                   "Altitude" -> <|
                    "Comment" -> "5 * m + 500",
                    "Dimensions" -> { },
                    "FieldName" -> "Altitude",
                    "Index" -> 19,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 5, 500},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "altitude",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "BallSpeed" -> <|
                    "Comment" -> "100 * m/s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "BallSpeed",
                    "Index" -> 29,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "MetersPerSecond", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "ball_speed",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "BatteryStateOfCharge" -> <|
                    "Comment" -> "2 * percent + 0, lev battery state of charge",
                    "Dimensions" -> { },
                    "FieldName" -> "BatteryStateOfCharge",
                    "Index" -> 81,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "battery_soc",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "Cadence" -> <|
                    "Comment" -> "1 * rpm + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Cadence",
                    "Index" -> 45,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "RevolutionsPerMinute", 1, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "cadence",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "Cadence256" -> <|
                    "Comment" -> "256 * rpm + 0, Log cadence and fractional cadence for backwards compatability",
                    "Dimensions" -> { },
                    "FieldName" -> "Cadence256",
                    "Index" -> 30,
                    "Interpreter" -> {
                     "fitQuantity",
                     "fitUINT16",
                     "RevolutionsPerMinute",
                     256,
                     0
                    },
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "cadence256",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "Calories" -> <|
                    "Comment" -> "1 * kcal + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Calories",
                    "Index" -> 25,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "DietaryCalories", 1, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "calories",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "CentralNervousSystemLoading" -> <|
                    "Comment" -> "1 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "CentralNervousSystemLoading",
                    "Index" -> 82,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 1, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "cns_load",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "CombinedPedalSmoothness" -> <|
                    "Comment" -> "2 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "CombinedPedalSmoothness",
                    "Index" -> 65,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "combined_pedal_smoothness",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "CompressedAccumulatedPower" -> <|
                    "Comment" -> "1 * watts + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "CompressedAccumulatedPower",
                    "Index" -> 23,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "compressed_accumulated_power",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "CompressedSpeedDistance" -> <|
                    "Dimensions" -> {3},
                    "FieldName" -> "CompressedSpeedDistance",
                    "Index" -> Span[46, 48],
                    "Interpreter" -> "fitByteA",
                    "Invalid" -> 255,
                    "NativeFieldName" -> "compressed_speed_distance",
                    "NativeType" -> "FIT_BYTE",
                    "Type" -> "Byte"
                   |>,
                   "CoreTemperature" -> <|
                    "Comment" -> "100 * C + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "CoreTemperature",
                    "Index" -> 43,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "DegreesCelsius", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "core_temperature",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "CycleLength" -> <|
                    "Comment" -> "100 * m + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "CycleLength",
                    "Index" -> 50,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Meters", 100, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "cycle_length",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "Cycles" -> <|
                    "Comment" -> "1 * cycles + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Cycles",
                    "Index" -> 57,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Cycles", 1, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "cycles",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "Depth" -> <|
                    "Comment" -> "1000 * m + 0, 0 if above water",
                    "Dimensions" -> { },
                    "FieldName" -> "Depth",
                    "Index" -> 12,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 1000, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "depth",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "DeviceIndex" -> <|
                    "Dimensions" -> { },
                    "FieldName" -> "DeviceIndex",
                    "Index" -> 70,
                    "Interpreter" -> {"fitEnum", "DeviceIndex"},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "device_index",
                    "NativeType" -> "FIT_DEVICE_INDEX",
                    "Type" -> "DeviceIndex"
                   |>,
                   "Distance" -> <|
                    "Comment" -> "100 * m + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Distance",
                    "Index" -> 5,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 100, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "distance",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "ElectricBikeAssistLevelPercent" -> <|
                    "Comment" -> "1 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "ElectricBikeAssistLevelPercent",
                    "Index" -> 85,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 1, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "ebike_assist_level_percent",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "ElectricBikeAssistMode" -> <|
                    "Comment" -> "1 * depends on sensor + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "ElectricBikeAssistMode",
                    "Index" -> 84,
                    "Interpreter" -> "fitUINT8",
                    "Invalid" -> 255,
                    "NativeFieldName" -> "ebike_assist_mode",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "ElectricBikeBatteryLevel" -> <|
                    "Comment" -> "1 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "ElectricBikeBatteryLevel",
                    "Index" -> 83,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 1, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "ebike_battery_level",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "ElectricBikeTravelRange" -> <|
                    "Comment" -> "1 * km + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "ElectricBikeTravelRange",
                    "Index" -> 42,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 0.001, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "ebike_travel_range",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "EnhancedAltitude" -> <|
                    "Comment" -> "5 * m + 500",
                    "Dimensions" -> { },
                    "FieldName" -> "EnhancedAltitude",
                    "Index" -> 10,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 5, 500},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "enhanced_altitude",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "EnhancedSpeed" -> <|
                    "Comment" -> "1000 * m/s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "EnhancedSpeed",
                    "Index" -> 9,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "MetersPerSecond", 1000, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "enhanced_speed",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "Flow" -> <|
                    "Comment" -> "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.",
                    "Dimensions" -> { },
                    "FieldName" -> "Flow",
                    "Index" -> 18,
                    "Interpreter" -> "fitFloat32",
                    "Invalid" -> -9223372036854775808,
                    "NativeFieldName" -> "flow",
                    "NativeType" -> "FIT_FLOAT32",
                    "Type" -> "Real32"
                   |>,
                   "FractionalCadence" -> <|
                    "Comment" -> "128 * rpm + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "FractionalCadence",
                    "Index" -> 69,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "RevolutionsPerMinute", 128, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "fractional_cadence",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "GPSAccuracy" -> <|
                    "Comment" -> "1 * m + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "GPSAccuracy",
                    "Index" -> 59,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Meters", 1, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "gps_accuracy",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "Grade" -> <|
                    "Comment" -> "100 * % + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Grade",
                    "Index" -> 22,
                    "Interpreter" -> {"fitQuantity", "fitSINT16", "Percent", 100, 0},
                    "Invalid" -> 32767,
                    "NativeFieldName" -> "grade",
                    "NativeType" -> "FIT_SINT16",
                    "Type" -> "SignedInteger16"
                   |>,
                   "Grit" -> <|
                    "Comment" -> "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.",
                    "Dimensions" -> { },
                    "FieldName" -> "Grit",
                    "Index" -> 17,
                    "Interpreter" -> "fitFloat32",
                    "Invalid" -> -9223372036854775808,
                    "NativeFieldName" -> "grit",
                    "NativeType" -> "FIT_FLOAT32",
                    "Type" -> "Real32"
                   |>,
                   "HeartRate" -> <|
                    "Comment" -> "1 * bpm + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "HeartRate",
                    "Index" -> 44,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Beats"/"Minutes", 1, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "heart_rate",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "LeftPedalSmoothness" -> <|
                    "Comment" -> "2 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "LeftPedalSmoothness",
                    "Index" -> 63,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "left_pedal_smoothness",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "LeftPlatformCenterOffset" -> <|
                    "Comment" -> "1 * mm + 0, Left platform center offset",
                    "Dimensions" -> { },
                    "FieldName" -> "LeftPlatformCenterOffset",
                    "Index" -> 71,
                    "Interpreter" -> {"fitQuantity", "fitSINT8", "Meters", 1000, 0},
                    "Invalid" -> 127,
                    "NativeFieldName" -> "left_pco",
                    "NativeType" -> "FIT_SINT8",
                    "Type" -> "SignedInteger8"
                   |>,
                   "LeftPowerPhase" -> <|
                    "Comment" -> "0.7111111 * degrees + 0, Left power phase angles. Data value indexes defined by power_phase_type.",
                    "Dimensions" -> {2},
                    "FieldName" -> "LeftPowerPhase",
                    "Index" -> Span[73, 74],
                    "Interpreter" -> {
                     "fitQuantity",
                     "fitUINT8A",
                     "AngularDegrees",
                     0.7111111,
                     0
                    },
                    "Invalid" -> 255,
                    "NativeFieldName" -> "left_power_phase",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "LeftPowerPhasePeak" -> <|
                    "Comment" -> "0.7111111 * degrees + 0, Left power phase peak angles. Data value indexes defined by power_phase_type.",
                    "Dimensions" -> {2},
                    "FieldName" -> "LeftPowerPhasePeak",
                    "Index" -> Span[75, 76],
                    "Interpreter" -> {
                     "fitQuantity",
                     "fitUINT8A",
                     "AngularDegrees",
                     0.7111111,
                     0
                    },
                    "Invalid" -> 255,
                    "NativeFieldName" -> "left_power_phase_peak",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "LeftRightBalance" -> <|
                    "Dimensions" -> { },
                    "FieldName" -> "LeftRightBalance",
                    "Index" -> 58,
                    "Interpreter" -> {"fitEnum", "LeftRightBalance"},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "left_right_balance",
                    "NativeType" -> "FIT_LEFT_RIGHT_BALANCE",
                    "Type" -> "LeftRightBalance"
                   |>,
                   "LeftTorqueEffectiveness" -> <|
                    "Comment" -> "2 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "LeftTorqueEffectiveness",
                    "Index" -> 61,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "left_torque_effectiveness",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "MotorPower" -> <|
                    "Comment" -> "1 * watts + 0, lev motor power",
                    "Dimensions" -> { },
                    "FieldName" -> "MotorPower",
                    "Index" -> 37,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "motor_power",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "N2Load" -> <|
                    "Comment" -> "1 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "N2Load",
                    "Index" -> 41,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 1, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "n2_load",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "NextStopDepth" -> <|
                    "Comment" -> "1000 * m + 0, 0 if above water",
                    "Dimensions" -> { },
                    "FieldName" -> "NextStopDepth",
                    "Index" -> 13,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Meters", 1000, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "next_stop_depth",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "NextStopTime" -> <|
                    "Comment" -> "1 * s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "NextStopTime",
                    "Index" -> 14,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Seconds", 1, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "next_stop_time",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "NoDecompressionLimitTime" -> <|
                    "Comment" -> "1 * s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "NoDecompressionLimitTime",
                    "Index" -> 16,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Seconds", 1, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "ndl_time",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "PositionLatitude" -> <|
                    "Comment" -> "1 * semicircles + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "PositionLatitude",
                    "Index" -> 3,
                    "Interpreter" -> {
                     "fitQuantity",
                     "fitSINT32",
                     "AngularDegrees",
                     1.19304647*^7,
                     0
                    },
                    "Invalid" -> 2147483647,
                    "NativeFieldName" -> "position_lat",
                    "NativeType" -> "FIT_SINT32",
                    "Type" -> "SignedInteger32"
                   |>,
                   "PositionLongitude" -> <|
                    "Comment" -> "1 * semicircles + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "PositionLongitude",
                    "Index" -> 4,
                    "Interpreter" -> {
                     "fitQuantity",
                     "fitSINT32",
                     "AngularDegrees",
                     1.19304647*^7,
                     0
                    },
                    "Invalid" -> 2147483647,
                    "NativeFieldName" -> "position_long",
                    "NativeType" -> "FIT_SINT32",
                    "Type" -> "SignedInteger32"
                   |>,
                   "Power" -> <|
                    "Comment" -> "1 * watts + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Power",
                    "Index" -> 21,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "power",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "Resistance" -> <|
                    "Comment" -> "Relative. 0 is none 254 is Max.",
                    "Dimensions" -> { },
                    "FieldName" -> "Resistance",
                    "Index" -> 49,
                    "Interpreter" -> "fitUINT8",
                    "Invalid" -> 255,
                    "NativeFieldName" -> "resistance",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "RightPedalSmoothness" -> <|
                    "Comment" -> "2 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "RightPedalSmoothness",
                    "Index" -> 64,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "right_pedal_smoothness",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "RightPlatformCenterOffset" -> <|
                    "Comment" -> "1 * mm + 0, Right platform center offset",
                    "Dimensions" -> { },
                    "FieldName" -> "RightPlatformCenterOffset",
                    "Index" -> 72,
                    "Interpreter" -> {"fitQuantity", "fitSINT8", "Meters", 1000, 0},
                    "Invalid" -> 127,
                    "NativeFieldName" -> "right_pco",
                    "NativeType" -> "FIT_SINT8",
                    "Type" -> "SignedInteger8"
                   |>,
                   "RightPowerPhase" -> <|
                    "Comment" -> "0.7111111 * degrees + 0, Right power phase angles. Data value indexes defined by power_phase_type.",
                    "Dimensions" -> {2},
                    "FieldName" -> "RightPowerPhase",
                    "Index" -> Span[77, 78],
                    "Interpreter" -> {
                     "fitQuantity",
                     "fitUINT8A",
                     "AngularDegrees",
                     0.7111111,
                     0
                    },
                    "Invalid" -> 255,
                    "NativeFieldName" -> "right_power_phase",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "RightPowerPhasePeak" -> <|
                    "Comment" -> "0.7111111 * degrees + 0, Right power phase peak angles. Data value indexes defined by power_phase_type.",
                    "Dimensions" -> {2},
                    "FieldName" -> "RightPowerPhasePeak",
                    "Index" -> Span[79, 80],
                    "Interpreter" -> {
                     "fitQuantity",
                     "fitUINT8A",
                     "AngularDegrees",
                     0.7111111,
                     0
                    },
                    "Invalid" -> 255,
                    "NativeFieldName" -> "right_power_phase_peak",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "RightTorqueEffectiveness" -> <|
                    "Comment" -> "2 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "RightTorqueEffectiveness",
                    "Index" -> 62,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Percent", 2, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "right_torque_effectiveness",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "SaturatedHemoglobinPercent" -> <|
                    "Comment" -> "10 * % + 0, Percentage of hemoglobin saturated with oxygen",
                    "Dimensions" -> { },
                    "FieldName" -> "SaturatedHemoglobinPercent",
                    "Index" -> 34,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 10, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "saturated_hemoglobin_percent",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "SaturatedHemoglobinPercentMaximum" -> <|
                    "Comment" -> "10 * % + 0, Max percentage of hemoglobin saturated with oxygen",
                    "Dimensions" -> { },
                    "FieldName" -> "SaturatedHemoglobinPercentMaximum",
                    "Index" -> 36,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 10, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "saturated_hemoglobin_percent_max",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "SaturatedHemoglobinPercentMinimum" -> <|
                    "Comment" -> "10 * % + 0, Min percentage of hemoglobin saturated with oxygen",
                    "Dimensions" -> { },
                    "FieldName" -> "SaturatedHemoglobinPercentMinimum",
                    "Index" -> 35,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 10, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "saturated_hemoglobin_percent_min",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "Speed" -> <|
                    "Comment" -> "1000 * m/s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Speed",
                    "Index" -> 20,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "MetersPerSecond", 1000, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "speed",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "Speed1S" -> <|
                    "Comment" -> "16 * m/s + 0, Speed at 1s intervals. Timestamp field indicates time of last array element.",
                    "Dimensions" -> {5},
                    "FieldName" -> "Speed1S",
                    "Index" -> Span[52, 56],
                    "Interpreter" -> {"fitQuantity", "fitUINT8A", "MetersPerSecond", 16, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "speed_1s",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "StanceTime" -> <|
                    "Comment" -> "10 * ms + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "StanceTime",
                    "Index" -> 28,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Seconds", 10000, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "stance_time",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "StanceTimeBalance" -> <|
                    "Comment" -> "100 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "StanceTimeBalance",
                    "Index" -> 39,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "stance_time_balance",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "StanceTimePercent" -> <|
                    "Comment" -> "100 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "StanceTimePercent",
                    "Index" -> 27,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "stance_time_percent",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "StepLength" -> <|
                    "Comment" -> "10 * mm + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "StepLength",
                    "Index" -> 40,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "step_length",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "StrokeType" -> <|
                    "Dimensions" -> { },
                    "FieldName" -> "StrokeType",
                    "Index" -> 67,
                    "Interpreter" -> {"fitEnum", "StrokeType"},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "stroke_type",
                    "NativeType" -> "FIT_STROKE_TYPE",
                    "Type" -> "StrokeType"
                   |>,
                   "Temperature" -> <|
                    "Comment" -> "1 * C + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Temperature",
                    "Index" -> 51,
                    "Interpreter" -> {"fitQuantity", "fitSINT8", "DegreesCelsius", 1, 0},
                    "Invalid" -> 127,
                    "NativeFieldName" -> "temperature",
                    "NativeType" -> "FIT_SINT8",
                    "Type" -> "SignedInteger8"
                   |>,
                   "Time128" -> <|
                    "Comment" -> "128 * s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Time128",
                    "Index" -> 66,
                    "Interpreter" -> {"fitQuantity", "fitUINT8", "Seconds", 128, 0},
                    "Invalid" -> 255,
                    "NativeFieldName" -> "time128",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>,
                   "TimeFromCourse" -> <|
                    "Comment" -> "1000 * s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "TimeFromCourse",
                    "Index" -> 6,
                    "Interpreter" -> {"fitQuantity", "fitSINT32", "Seconds", 1000, 0},
                    "Invalid" -> 2147483647,
                    "NativeFieldName" -> "time_from_course",
                    "NativeType" -> "FIT_SINT32",
                    "Type" -> "SignedInteger32"
                   |>,
                   "Timestamp" -> <|
                    "Comment" -> "1 * s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "Timestamp",
                    "Index" -> 2,
                    "Interpreter" -> "fitDateTime",
                    "Invalid" -> 7135003695,
                    "NativeFieldName" -> "timestamp",
                    "NativeType" -> "FIT_DATE_TIME",
                    "Type" -> "DateTime"
                   |>,
                   "TimeToSurface" -> <|
                    "Comment" -> "1 * s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "TimeToSurface",
                    "Index" -> 15,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Seconds", 1, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "time_to_surface",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "TotalCycles" -> <|
                    "Comment" -> "1 * cycles + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "TotalCycles",
                    "Index" -> 7,
                    "Interpreter" -> {"fitQuantity", "fitUINT32", "Cycles", 1, 0},
                    "Invalid" -> 4294967295,
                    "NativeFieldName" -> "total_cycles",
                    "NativeType" -> "FIT_UINT32",
                    "Type" -> "UnsignedInteger32"
                   |>,
                   "TotalHemoglobinConcentration" -> <|
                    "Comment" -> "100 * g/dL + 0, Total saturated and unsaturated hemoglobin",
                    "Dimensions" -> { },
                    "FieldName" -> "TotalHemoglobinConcentration",
                    "Index" -> 31,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Grams"/"Deciliters", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "total_hemoglobin_conc",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "TotalHemoglobinConcentrationMaximum" -> <|
                    "Comment" -> "100 * g/dL + 0, Max saturated and unsaturated hemoglobin",
                    "Dimensions" -> { },
                    "FieldName" -> "TotalHemoglobinConcentrationMaximum",
                    "Index" -> 33,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Grams"/"Deciliters", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "total_hemoglobin_conc_max",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "TotalHemoglobinConcentrationMinimum" -> <|
                    "Comment" -> "100 * g/dL + 0, Min saturated and unsaturated hemoglobin",
                    "Dimensions" -> { },
                    "FieldName" -> "TotalHemoglobinConcentrationMinimum",
                    "Index" -> 32,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Grams"/"Deciliters", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "total_hemoglobin_conc_min",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "VerticalOscillation" -> <|
                    "Comment" -> "10 * mm + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "VerticalOscillation",
                    "Index" -> 26,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Meters", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "vertical_oscillation",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "VerticalRatio" -> <|
                    "Comment" -> "100 * percent + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "VerticalRatio",
                    "Index" -> 38,
                    "Interpreter" -> {"fitQuantity", "fitUINT16", "Percent", 100, 0},
                    "Invalid" -> 65535,
                    "NativeFieldName" -> "vertical_ratio",
                    "NativeType" -> "FIT_UINT16",
                    "Type" -> "UnsignedInteger16"
                   |>,
                   "VerticalSpeed" -> <|
                    "Comment" -> "1000 * m/s + 0",
                    "Dimensions" -> { },
                    "FieldName" -> "VerticalSpeed",
                    "Index" -> 24,
                    "Interpreter" -> {"fitQuantity", "fitSINT16", "MetersPerSecond", 1000, 0},
                    "Invalid" -> 32767,
                    "NativeFieldName" -> "vertical_speed",
                    "NativeType" -> "FIT_SINT16",
                    "Type" -> "SignedInteger16"
                   |>,
                   "Zone" -> <|
                    "Dimensions" -> { },
                    "FieldName" -> "Zone",
                    "Index" -> 68,
                    "Interpreter" -> "fitUINT8",
                    "Invalid" -> 255,
                    "NativeFieldName" -> "zone",
                    "NativeType" -> "FIT_UINT8",
                    "Type" -> "UnsignedInteger8"
                   |>
                  |>,
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, TypeSystem`PackageScope`KeyDummy[17]} -> 1,
                     {All, "Comment"} -> 1,
                     {All, "Dimensions"} -> 1,
                     {All, "FieldName"} -> 1,
                     {All, "Index"} -> 1,
                     {All, "Interpreter"} -> 1,
                     {All, "Invalid"} -> 1,
                     {All, "NativeFieldName"} -> 1,
                     {All, "NativeType"} -> 1,
                     {All, "Type"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`KeyValueShape[
                       TypeSystem`PackageScope`AtomShape[392.00000000000006],
                       TypeSystem`PackageScope`Limited[
                        TypeSystem`PackageScope`RowShape[
                         <|
                          "Comment" -> TypeSystem`PackageScope`AtomShape[560.],
                          "Dimensions" -> TypeSystem`PackageScope`UnknownShape[False],
                          "FieldName" ->
                           TypeSystem`PackageScope`AtomShape[392.00000000000006],
                          "Index" -> TypeSystem`PackageScope`UnknownShape[False],
                          "Interpreter" ->
                           TypeSystem`PackageScope`UnknownShape[False],
                          "Invalid" -> TypeSystem`PackageScope`AtomShape[34],
                          "NativeFieldName" ->
                           TypeSystem`PackageScope`AtomShape[280.],
                          "NativeType" ->
                           TypeSystem`PackageScope`AtomShape[123.20000000000002],
                          "Type" -> TypeSystem`PackageScope`AtomShape[190.4]
                         |>
                        ],
                        Infinity,
                        5,
                        {All}
                       ]
                      ]
                     ],
                     5,
                     Infinity,
                     { }
                    ]
                   ],
                  "InitialType" ->
                   TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Struct[
                     {
                      "Comment",
                      "Dimensions",
                      "FieldName",
                      "Index",
                      "Interpreter",
                      "Invalid",
                      "NativeFieldName",
                      "NativeType",
                      "Type"
                     },
                     {
                      TypeSystem`Atom[String],
                      TypeSystem`Vector[
                       TypeSystem`Atom[Integer],
                       TypeSystem`AnyLength
                      ],
                      TypeSystem`Atom[String],
                      TypeSystem`AnyType,
                      TypeSystem`AnyType,
                      TypeSystem`Atom[Integer],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String]
                     }
                    ],
                    74
                   ],
                  "Meta" -> <| |>,
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`HeaderShape[
                    <|
                     {All, TypeSystem`PackageScope`KeyDummy[17]} -> 1,
                     {All, "Comment"} -> 1,
                     {All, "Dimensions"} -> 1,
                     {All, "FieldName"} -> 1,
                     {All, "Index"} -> 1,
                     {All, "Interpreter"} -> 1,
                     {All, "Invalid"} -> 1,
                     {All, "NativeFieldName"} -> 1,
                     {All, "NativeType"} -> 1,
                     {All, "Type"} -> 1
                    |>,
                    TypeSystem`PackageScope`Limited[
                     TypeSystem`PackageScope`ColumnShape[
                      TypeSystem`PackageScope`KeyValueShape[
                       TypeSystem`PackageScope`AtomShape[392.00000000000006],
                       TypeSystem`PackageScope`Limited[
                        TypeSystem`PackageScope`RowShape[
                         <|
                          "Comment" -> TypeSystem`PackageScope`AtomShape[560.],
                          "Dimensions" -> TypeSystem`PackageScope`UnknownShape[False],
                          "FieldName" ->
                           TypeSystem`PackageScope`AtomShape[392.00000000000006],
                          "Index" -> TypeSystem`PackageScope`UnknownShape[False],
                          "Interpreter" ->
                           TypeSystem`PackageScope`UnknownShape[False],
                          "Invalid" -> TypeSystem`PackageScope`AtomShape[34],
                          "NativeFieldName" ->
                           TypeSystem`PackageScope`AtomShape[280.],
                          "NativeType" ->
                           TypeSystem`PackageScope`AtomShape[123.20000000000002],
                          "Type" -> TypeSystem`PackageScope`AtomShape[190.4]
                         |>
                        ],
                        Infinity,
                        5,
                        {All}
                       ]
                      ]
                     ],
                     5,
                     Infinity,
                     { }
                    ]
                   ],
                  "Type" ->
                   TypeSystem`Assoc[
                    TypeSystem`Atom[String],
                    TypeSystem`Struct[
                     {
                      "Comment",
                      "Dimensions",
                      "FieldName",
                      "Index",
                      "Interpreter",
                      "Invalid",
                      "NativeFieldName",
                      "NativeType",
                      "Type"
                     },
                     {
                      TypeSystem`Atom[String],
                      TypeSystem`Vector[
                       TypeSystem`Atom[Integer],
                       TypeSystem`AnyLength
                      ],
                      TypeSystem`Atom[String],
                      TypeSystem`AnyType,
                      TypeSystem`AnyType,
                      TypeSystem`Atom[Integer],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String],
                      TypeSystem`Atom[String]
                     }
                    ],
                    74
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 5,
                  "DisplayedColumnCount" -> 5,
                  "DataRowCount" -> 74,
                  "DataColumnCount" -> 9,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> Null,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             Mouseover[
                              Graphics[
                               { },
                               ImageSize -> 6,
                               BaselinePosition -> Scaled[-0.15]
                              ],
                              Graphics[
                               {
                                GrayLevel[0.6],
                                Polygon[
                                 {
                                  {1/Sqrt[2], -(1/Sqrt[2])},
                                  {1/Sqrt[2], 1/Sqrt[2]},
                                  {-(1/Sqrt[2]), 1/Sqrt[2]},
                                  {-(1/Sqrt[2]), -(1/Sqrt[2])}
                                 }
                                ]
                               },
                               ImageSize -> 6,
                               BaselinePosition -> Scaled[-0.15]
                              ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, Keys},
                              "KeyDummy",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Comment",
                                Style[
                                 "Comment",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Comment"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Comment"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Dimensions",
                                Style[
                                 "Dimensions",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Dimensions"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Dimensions"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "FieldName",
                                Style[
                                 "FieldName",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "FieldName"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "FieldName"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Index",
                                Style[
                                 "Index",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Index"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Index"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Interpreter",
                                Style[
                                 "Interpreter",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {All, "Interpreter"},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {All, "Interpreter"},
                              "ColumnHeader",
                              True
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "AbsolutePressure",
                                Style[
                                 "AbsolutePressure",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["AbsolutePressure"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AbsolutePressure"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "1 * Pa + 0, Includes atmospheric pressure",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AbsolutePressure"], Key["Comment"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560., Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]],
                          Item[
                           Pane[
                            Annotation[
                             "AbsolutePressure",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AbsolutePressure"], Key["FieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["11"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AbsolutePressure"], Key["Index"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[
                                 {"fitQuantity", "fitUINT32", "Pascals", 1, 0},
                                 ShowStringCharacters -> False
                                ],
                                Style[
                                 Style[
                                  {"fitQuantity", "fitUINT32", "Pascals", 1, 0},
                                  ShowStringCharacters -> False
                                 ],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["AbsolutePressure"], Key["Interpreter"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AbsolutePressure"], Key["Interpreter"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ]
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "AccumulatedPower",
                                Style[
                                 "AccumulatedPower",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["AccumulatedPower"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AccumulatedPower"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "1 * watts + 0",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AccumulatedPower"], Key["Comment"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560., Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]],
                          Item[
                           Pane[
                            Annotation[
                             "AccumulatedPower",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AccumulatedPower"], Key["FieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["8"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AccumulatedPower"], Key["Index"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[
                                 {"fitQuantity", "fitUINT32", "Watts", 1, 0},
                                 ShowStringCharacters -> False
                                ],
                                Style[
                                 Style[
                                  {"fitQuantity", "fitUINT32", "Watts", 1, 0},
                                  ShowStringCharacters -> False
                                 ],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["AccumulatedPower"], Key["Interpreter"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["AccumulatedPower"], Key["Interpreter"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ]
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "ActivityType",
                                Style[
                                 "ActivityType",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["ActivityType"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["ActivityType"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Style["\[LongDash]", GrayLevel[0.75]],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Alignment -> {Left, Baseline}
                          ],
                          SpanFromLeft,
                          SpanFromLeft,
                          SpanFromLeft,
                          SpanFromLeft
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Altitude",
                                Style[
                                 "Altitude",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Altitude"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Altitude"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "5 * m + 500",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Altitude"], Key["Comment"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560., Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]],
                          Item[
                           Pane[
                            Annotation[
                             "Altitude",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Altitude"], Key["FieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["19"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Altitude"], Key["Index"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[
                                 {"fitQuantity", "fitUINT16", "Meters", 5, 500},
                                 ShowStringCharacters -> False
                                ],
                                Style[
                                 Style[
                                  {"fitQuantity", "fitUINT16", "Meters", 5, 500},
                                  ShowStringCharacters -> False
                                 ],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Altitude"], Key["Interpreter"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Altitude"], Key["Interpreter"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ]
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "BallSpeed",
                                Style[
                                 "BallSpeed",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["BallSpeed"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["BallSpeed"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "100 * m/s + 0",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["BallSpeed"], Key["Comment"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560., Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]],
                          Item[
                           Pane[
                            Annotation[
                             "BallSpeed",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["BallSpeed"], Key["FieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{392.00000000000006, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["29"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["BallSpeed"], Key["Index"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[
                                 {"fitQuantity", "fitUINT16", "MetersPerSecond", 100, 0},
                                 ShowStringCharacters -> False
                                ],
                                Style[
                                 Style[
                                  {"fitQuantity", "fitUINT16", "MetersPerSecond", 100, 0},
                                  ShowStringCharacters -> False
                                 ],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["BallSpeed"], Key["Interpreter"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["BallSpeed"], Key["Interpreter"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ]
                          ]
                         },
                         {
                          Item[
                           Deploy[
                            Pane[
                             Row[
                              {
                               Spacer[2],
                               Style[
                                Row[
                                 {
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        0,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        0,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       (-5) * If[ True, 74, 1 ]
                                      ],
                                      {1, 74 - -5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ],
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {CapForm[Round], Line[{{0, 0}, {4, 5}, {8, 0}}]},
                                         {5, 6.5}
                                        ],
                                        0,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        0,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       (-5) * If[ False, 74, 1 ]
                                      ],
                                      {1, 74 - -5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ],
                                  " ",
                                  Style[
                                   Mouseover[
                                    Style[
                                     Row[
                                      {
                                       "rows ",
                                       1,
                                       "\[Dash]",
                                       5,
                                       " of ",
                                       Style[74, FontWeight -> Bold]
                                      }
                                     ],
                                     FontSize -> 9.333333333333332,
                                     FontColor ->
                                      RGBColor[
                                       0.5098039215686274,
                                       0.5098039215686274,
                                       0.5098039215686274
                                      ]
                                    ],
                                    Style[
                                     Row[
                                      {
                                       "rows ",
                                       1,
                                       "\[Dash]",
                                       5,
                                       " of ",
                                       Style[74, FontWeight -> Bold]
                                      }
                                     ],
                                     FontSize -> 9.333333333333332,
                                     FontColor ->
                                      RGBColor[
                                       0.5098039215686274,
                                       0.5098039215686274,
                                       0.5098039215686274
                                      ]
                                    ]
                                   ],
                                   ContextMenu -> {
                                    MenuItem[
                                     "Hide",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Rows",
                                       1,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show up to 10 Rows",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Rows",
                                       10,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show up to 30 Rows",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Rows",
                                       30,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show up to 100 Rows",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Rows",
                                       100,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show All",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Rows",
                                       100000000,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ]
                                   }
                                  ],
                                  " ",
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {CapForm[Round], Line[{{0, 0}, {4, 5}, {8, 0}}]},
                                         {5, 6.5}
                                        ],
                                        180 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        180 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       5 * If[ False, 74, 1 ]
                                      ],
                                      {1, 74 - 5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ],
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        180 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        180 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                       5 * If[ True, 74, 1 ]
                                      ],
                                      {1, 74 - 5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ]
                                 }
                                ],
                                ContextMenu -> { }
                               ],
                               Graphics[
                                {
                                 RGBColor[
                                  0.8196078431372549,
                                  0.8196078431372549,
                                  0.8196078431372549
                                 ],
                                 Line[{{0, 0}, {0, 19}}]
                                },
                                ImageSize -> 1 -> 1,
                                ImagePadding -> {{0, 0}, {0, 0}},
                                BaselinePosition -> Scaled[0.35]
                               ],
                               Spacer[2],
                               Style[
                                Row[
                                 {
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        90 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        90 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                       (-5) * If[ True, 9, 1 ]
                                      ],
                                      {1, 9 - -5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ],
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {CapForm[Round], Line[{{0, 0}, {4, 5}, {8, 0}}]},
                                         {5, 6.5}
                                        ],
                                        90 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        90 * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                       (-5) * If[ False, 9, 1 ]
                                      ],
                                      {1, 9 - -5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ],
                                  " ",
                                  Style[
                                   Mouseover[
                                    Style[
                                     Row[
                                      {
                                       "columns ",
                                       1,
                                       "\[Dash]",
                                       5,
                                       " of ",
                                       Style[9, FontWeight -> Bold]
                                      }
                                     ],
                                     FontSize -> 9.333333333333332,
                                     FontColor ->
                                      RGBColor[
                                       0.5098039215686274,
                                       0.5098039215686274,
                                       0.5098039215686274
                                      ]
                                    ],
                                    Style[
                                     Row[
                                      {
                                       "columns ",
                                       1,
                                       "\[Dash]",
                                       5,
                                       " of ",
                                       Style[9, FontWeight -> Bold]
                                      }
                                     ],
                                     FontSize -> 9.333333333333332,
                                     FontColor ->
                                      RGBColor[
                                       0.5098039215686274,
                                       0.5098039215686274,
                                       0.5098039215686274
                                      ]
                                    ]
                                   ],
                                   ContextMenu -> {
                                    MenuItem[
                                     "Hide",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Columns",
                                       1,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show up to 2 Columns",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Columns",
                                       2,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show up to 5 Columns",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Columns",
                                       5,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show up to 10 Columns",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Columns",
                                       10,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ],
                                    MenuItem[
                                     "Show All",
                                     KernelExecute[
                                      TypeSystem`NestedGrid`PackagePrivate`adjustLimits[
                                       {
                                        TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$path$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                        TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                                        TypeSystem`NestedGrid`PackagePrivate`localHold[
                                         TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                                        ]
                                       },
                                       "Columns",
                                       100000000,
                                       { }
                                      ]
                                     ],
                                     MenuEvaluator -> Automatic
                                    ]
                                   }
                                  ],
                                  " ",
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {CapForm[Round], Line[{{0, 0}, {4, 5}, {8, 0}}]},
                                         {5, 6.5}
                                        ],
                                        (-90) * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        (-90) * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                       5 * If[ False, 9, 1 ]
                                      ],
                                      {1, 9 - 5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ],
                                  Button[
                                   MouseAppearance[
                                    Mouseover[
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[None],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        (-90) * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35],
                                      BaseStyle ->
                                       RGBColor[
                                        0.5372549019607843,
                                        0.5372549019607843,
                                        0.5372549019607843
                                       ]
                                     ],
                                     Graphics[
                                      {
                                       {
                                        EdgeForm[
                                         RGBColor[
                                          0.27450980392156865,
                                          0.5411764705882353,
                                          0.796078431372549
                                         ]
                                        ],
                                        FaceForm[None],
                                        Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]
                                       },
                                       Rotate[
                                        Translate[
                                         {
                                          CapForm[Round],
                                          RGBColor[
                                           0.27450980392156865,
                                           0.5411764705882353,
                                           0.796078431372549
                                          ],
                                          Line[{{0, 0}, {4, 5}, {8, 0}}],
                                          Line[{{0, 5}, {8, 5}}]
                                         },
                                         {5, 6.5}
                                        ],
                                        (-90) * Degree,
                                        {9, 9}
                                       ]
                                      },
                                      ImageSize -> 1 -> 1,
                                      ImagePadding -> {{0, 1}, {1, 0}},
                                      BaselinePosition -> Scaled[0.35]
                                     ]
                                    ],
                                    "LinkHand"
                                   ],
                                   If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$
                                    ],
                                    
                                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                                     Clip[
                                      Plus[
                                       TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                                       5 * If[ True, 9, 1 ]
                                      ],
                                      {1, 9 - 5 + 1}
                                     ];

                                    TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                                     TypeSystem`NestedGrid`PackagePrivate`$path$$
                                    ]
                                   ],
                                   Appearance -> None
                                  ]
                                 }
                                ],
                                ContextMenu -> { }
                               ]
                              }
                             ],
                             ImageMargins -> {{0, -1}, {-1, 1}}
                            ]
                           ],
                           Background ->
                            RGBColor[
                             0.9764705882352941,
                             0.9764705882352941,
                             0.9764705882352941
                            ],
                           Alignment -> {Left, Top}
                          ],
                          SpanFromLeft,
                          SpanFromLeft,
                          SpanFromLeft,
                          SpanFromLeft,
                          SpanFromLeft
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.7490196078431373],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {1799., {106.8544921875, 112.1455078125}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {1799., {106.8544921875, 112.1455078125}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[4]=",
            CellID -> 58417921
           ]
          },
          Open
         ]
        ],
        Cell[
         "Get a specific field definition:",
         "ExampleText",
         CellID -> 487495936
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {"power", "=", RowBox[{"fields", "[", "\"Power\"", "]"}]}
             ]
            ],
            "Input",
            CellLabel -> "In[5]:=",
            CellID -> 658913251
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> <|
                   "Comment" -> "1 * watts + 0",
                   "Dimensions" -> { },
                   "FieldName" -> "Power",
                   "Index" -> 21,
                   "Interpreter" -> {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                   "Invalid" -> 65535,
                   "NativeFieldName" -> "power",
                   "NativeType" -> "FIT_UINT16",
                   "Type" -> "UnsignedInteger16"
                  |>,
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`DocumentShape[
                    <|
                     {"Comment"} ->
                      TypeSystem`PackageScope`AtomShape[145.60000000000002],
                     {"Dimensions"} ->
                      TypeSystem`PackageScope`Limited[
                       TypeSystem`PackageScope`ColumnShape[
                        TypeSystem`PackageScope`UnknownShape[False]
                       ],
                       5,
                       Infinity,
                       {
                        TypeSystem`NestedGrid`PackagePrivate`$docPath["Dimensions"]
                       }
                      ],
                     {"FieldName"} ->
                      TypeSystem`PackageScope`AtomShape[56.00000000000001],
                     {"Index"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"Interpreter"} -> TypeSystem`PackageScope`ElidedShape[1],
                     {"Invalid"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"NativeFieldName"} ->
                      TypeSystem`PackageScope`AtomShape[56.00000000000001],
                     {"NativeType"} ->
                      TypeSystem`PackageScope`AtomShape[112.00000000000001],
                     {"Type"} -> TypeSystem`PackageScope`AtomShape[190.4]
                    |>,
                    1
                   ],
                  "InitialType" ->
                   TypeSystem`Struct[
                    {
                     "Comment",
                     "Dimensions",
                     "FieldName",
                     "Index",
                     "Interpreter",
                     "Invalid",
                     "NativeFieldName",
                     "NativeType",
                     "Type"
                    },
                    {
                     TypeSystem`Atom[String],
                     TypeSystem`Vector[
                      TypeSystem`UnknownType,
                      TypeSystem`AnyLength
                     ],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Tuple[
                      {
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[Integer],
                       TypeSystem`Atom[Integer]
                      }
                     ],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String]
                    }
                   ],
                  "Meta" -> <| |>,
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`DocumentShape[
                    <|
                     {"Comment"} ->
                      TypeSystem`PackageScope`AtomShape[145.60000000000002],
                     {"Dimensions"} ->
                      TypeSystem`PackageScope`Limited[
                       TypeSystem`PackageScope`ColumnShape[
                        TypeSystem`PackageScope`UnknownShape[False]
                       ],
                       5,
                       Infinity,
                       {
                        TypeSystem`NestedGrid`PackagePrivate`$docPath["Dimensions"]
                       }
                      ],
                     {"FieldName"} ->
                      TypeSystem`PackageScope`AtomShape[56.00000000000001],
                     {"Index"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"Interpreter"} -> TypeSystem`PackageScope`ElidedShape[1],
                     {"Invalid"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"NativeFieldName"} ->
                      TypeSystem`PackageScope`AtomShape[56.00000000000001],
                     {"NativeType"} ->
                      TypeSystem`PackageScope`AtomShape[112.00000000000001],
                     {"Type"} -> TypeSystem`PackageScope`AtomShape[190.4]
                    |>,
                    1
                   ],
                  "Type" ->
                   TypeSystem`Struct[
                    {
                     "Comment",
                     "Dimensions",
                     "FieldName",
                     "Index",
                     "Interpreter",
                     "Invalid",
                     "NativeFieldName",
                     "NativeType",
                     "Type"
                    },
                    {
                     TypeSystem`Atom[String],
                     TypeSystem`Vector[
                      TypeSystem`UnknownType,
                      TypeSystem`AnyLength
                     ],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Tuple[
                      {
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[Integer],
                       TypeSystem`Atom[Integer]
                      }
                     ],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String]
                    }
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 20,
                  "DisplayedColumnCount" -> 10,
                  "DataRowCount" -> 9,
                  "DataColumnCount" -> 1,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> Null,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Comment",
                                Style[
                                 "Comment",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Comment"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Comment"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "1 * watts + 0",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Comment"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{145.60000000000002, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Dimensions",
                                Style[
                                 "Dimensions",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Dimensions"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Dimensions"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[Spacer[10], GrayLevel[0.5]],
                                Style[
                                 Style[Spacer[10], GrayLevel[0.5]],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Dimensions"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Dimensions"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           BaseStyle -> {GrayLevel[0.5], 8}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "FieldName",
                                Style[
                                 "FieldName",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["FieldName"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["FieldName"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "Power",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["FieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{56.00000000000001, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Index",
                                Style[
                                 "Index",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Index"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Index"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["21"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Index"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Interpreter",
                                Style[
                                 "Interpreter",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Interpreter"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Interpreter"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[
                                 {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                                 ShowStringCharacters -> False
                                ],
                                Style[
                                 Style[
                                  {"fitQuantity", "fitUINT16", "Watts", 1, 0},
                                  ShowStringCharacters -> False
                                 ],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Interpreter"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Interpreter"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ]
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Invalid",
                                Style[
                                 "Invalid",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Invalid"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Invalid"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["65535"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Invalid"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "NativeFieldName",
                                Style[
                                 "NativeFieldName",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["NativeFieldName"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeFieldName"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "power",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeFieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{56.00000000000001, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "NativeType",
                                Style[
                                 "NativeType",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["NativeType"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeType"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "FIT_UINT16",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeType"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{112.00000000000001, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Type",
                                Style[
                                 "Type",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Type"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Type"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "UnsignedInteger16",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Type"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{190.4, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.7490196078431373],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {320., {127.3544921875, 132.6455078125}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {320., {127.3544921875, 132.6455078125}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[5]=",
            CellID -> 17733265
           ]
          },
          Open
         ]
        ],
        Cell[
         "The \"Index\" property specifies which part to extract for the specified field value:",
         "ExampleText",
         CellID -> 450441618
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {"index", "=", RowBox[{"power", "[", "\"Index\"", "]"}]}
             ]
            ],
            "Input",
            CellLabel -> "In[6]:=",
            CellID -> 420521844
           ],
           Cell[
            BoxData["21"],
            "Output",
            CellLabel -> "Out[6]=",
            CellID -> 468780112
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"message", "[", RowBox[{"[", "index", "]"}], "]"}]
            ],
            "Input",
            CellLabel -> "In[7]:=",
            CellID -> 310711123
           ],
           Cell[
            BoxData["195"],
            "Output",
            CellLabel -> "Out[7]=",
            CellID -> 276360097
           ]
          },
          Open
         ]
        ],
        Cell[
         "If the value is equal to the \"Invalid\" property, then it should be interpreted as missing:",
         "ExampleText",
         CellID -> 51875138
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"power", "[", "\"Invalid\"", "]"}]],
            "Input",
            CellLabel -> "In[8]:=",
            CellID -> 122801828
           ],
           Cell[
            BoxData["65535"],
            "Output",
            CellLabel -> "Out[8]=",
            CellID -> 259426092
           ]
          },
          Open
         ]
        ],
        Cell[
         "Some fields span multiple parts:",
         "ExampleText",
         CellID -> 179891508
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "phaseL",
               "=",
               RowBox[{"fields", "[", "\"LeftPowerPhase\"", "]"}]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[9]:=",
            CellID -> 17975903
           ],
           Cell[
            BoxData[
             TagBox[
              TagBox[
               DynamicModuleBox[
                {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                  "InitialData" -> <|
                   "Comment" -> "0.7111111 * degrees + 0, Left power phase angles. Data value indexes defined by power_phase_type.",
                   "Dimensions" -> {2},
                   "FieldName" -> "LeftPowerPhase",
                   "Index" -> Span[73, 74],
                   "Interpreter" -> {
                    "fitQuantity",
                    "fitUINT8A",
                    "AngularDegrees",
                    0.7111111,
                    0
                   },
                   "Invalid" -> 255,
                   "NativeFieldName" -> "left_power_phase",
                   "NativeType" -> "FIT_UINT8",
                   "Type" -> "UnsignedInteger8"
                  |>,
                  "AllowEmbedding" -> True,
                  "InitialShape" ->
                   TypeSystem`PackageScope`DocumentShape[
                    <|
                     {"Comment"} -> TypeSystem`PackageScope`AtomShape[560.],
                     {"Dimensions"} ->
                      TypeSystem`PackageScope`UnknownShape[False],
                     {"FieldName"} -> TypeSystem`PackageScope`AtomShape[156.8],
                     {"Index"} -> TypeSystem`PackageScope`UnknownShape[False],
                     {"Interpreter"} -> TypeSystem`PackageScope`ElidedShape[1],
                     {"Invalid"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"NativeFieldName"} ->
                      TypeSystem`PackageScope`AtomShape[179.20000000000002],
                     {"NativeType"} ->
                      TypeSystem`PackageScope`AtomShape[100.80000000000001],
                     {"Type"} ->
                      TypeSystem`PackageScope`AtomShape[179.20000000000002]
                    |>,
                    1
                   ],
                  "InitialType" ->
                   TypeSystem`Struct[
                    {
                     "Comment",
                     "Dimensions",
                     "FieldName",
                     "Index",
                     "Interpreter",
                     "Invalid",
                     "NativeFieldName",
                     "NativeType",
                     "Type"
                    },
                    {
                     TypeSystem`Atom[String],
                     TypeSystem`Vector[TypeSystem`Atom[Integer], 1],
                     TypeSystem`Atom[String],
                     TypeSystem`AnyType,
                     TypeSystem`Tuple[
                      {
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[Real],
                       TypeSystem`Atom[Integer]
                      }
                     ],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String]
                    }
                   ],
                  "Meta" -> <| |>,
                  "RowTarget" -> 20,
                  "ColumnTarget" -> 10,
                  "Shape" ->
                   TypeSystem`PackageScope`DocumentShape[
                    <|
                     {"Comment"} -> TypeSystem`PackageScope`AtomShape[560.],
                     {"Dimensions"} ->
                      TypeSystem`PackageScope`UnknownShape[False],
                     {"FieldName"} -> TypeSystem`PackageScope`AtomShape[156.8],
                     {"Index"} -> TypeSystem`PackageScope`UnknownShape[False],
                     {"Interpreter"} -> TypeSystem`PackageScope`ElidedShape[1],
                     {"Invalid"} -> TypeSystem`PackageScope`AtomShape[34],
                     {"NativeFieldName"} ->
                      TypeSystem`PackageScope`AtomShape[179.20000000000002],
                     {"NativeType"} ->
                      TypeSystem`PackageScope`AtomShape[100.80000000000001],
                     {"Type"} ->
                      TypeSystem`PackageScope`AtomShape[179.20000000000002]
                    |>,
                    1
                   ],
                  "Type" ->
                   TypeSystem`Struct[
                    {
                     "Comment",
                     "Dimensions",
                     "FieldName",
                     "Index",
                     "Interpreter",
                     "Invalid",
                     "NativeFieldName",
                     "NativeType",
                     "Type"
                    },
                    {
                     TypeSystem`Atom[String],
                     TypeSystem`Vector[TypeSystem`Atom[Integer], 1],
                     TypeSystem`Atom[String],
                     TypeSystem`AnyType,
                     TypeSystem`Tuple[
                      {
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[String],
                       TypeSystem`Atom[Real],
                       TypeSystem`Atom[Integer]
                      }
                     ],
                     TypeSystem`Atom[Integer],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String],
                     TypeSystem`Atom[String]
                    }
                   ],
                  "Path" -> { },
                  "DisplayedRowCount" -> 20,
                  "DisplayedColumnCount" -> 10,
                  "DataRowCount" -> 9,
                  "DataColumnCount" -> 1,
                  "SortPaths" -> { },
                  "SortDirections" -> { },
                  "HiddenItemsMap" -> Null,
                  "UpdateType" -> 1
                 |>,
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$,
                 TypeSystem`NestedGrid`PackagePrivate`$path$$ = { },
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1,
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                  DynamicModule[
                   {
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                     Deploy[
                      Style[
                       Grid[
                        {
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Comment",
                                Style[
                                 "Comment",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Comment"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Comment"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "0.7111111 * degrees + 0, Left power phase angles. Data value indexes defined by power_phase_type.",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Comment"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{560., Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Dimensions",
                                Style[
                                 "Dimensions",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Dimensions"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Dimensions"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[{2}, ShowStringCharacters -> False],
                                Style[
                                 Style[{2}, ShowStringCharacters -> False],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Dimensions"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Dimensions"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ]
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "FieldName",
                                Style[
                                 "FieldName",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["FieldName"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["FieldName"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "LeftPowerPhase",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["FieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{156.8, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Index",
                                Style[
                                 "Index",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Index"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Index"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes[
                              StyleBox[
                               RowBox[{"73", ";;", "74"}],
                               FontFamily ->
                                Dynamic[CurrentValue[{"StyleHints", "CodeFont"}]],
                               ShowStringCharacters -> True
                              ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Index"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{60, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Interpreter",
                                Style[
                                 "Interpreter",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Interpreter"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Interpreter"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                Style[
                                 {
                                  "fitQuantity",
                                  "fitUINT8A",
                                  "AngularDegrees",
                                  0.7111111,
                                  0
                                 },
                                 ShowStringCharacters -> False
                                ],
                                Style[
                                 Style[
                                  {
                                   "fitQuantity",
                                   "fitUINT8A",
                                   "AngularDegrees",
                                   0.7111111,
                                   0
                                  },
                                  ShowStringCharacters -> False
                                 ],
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Interpreter"]},
                                 4
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Interpreter"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ]
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Invalid",
                                Style[
                                 "Invalid",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Invalid"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Invalid"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             RawBoxes["255"],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Invalid"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{34, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "NativeFieldName",
                                Style[
                                 "NativeFieldName",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["NativeFieldName"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeFieldName"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "left_power_phase",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeFieldName"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{179.20000000000002, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "NativeType",
                                Style[
                                 "NativeType",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["NativeType"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeType"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "FIT_UINT8",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["NativeType"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{100.80000000000001, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         },
                         {
                          Item[
                           Pane[
                            Annotation[
                             EventHandler[
                              MouseAppearance[
                               Mouseover[
                                "Type",
                                Style[
                                 "Type",
                                 FontColor ->
                                  RGBColor[
                                   0.27450980392156865,
                                   0.5372549019607843,
                                   0.792156862745098
                                  ]
                                ]
                               ],
                               "LinkHand"
                              ],
                              {"MouseClicked", 1} :>
                               If[ TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                                 TypeSystem`NestedGrid`PackagePrivate`$state$$
                                ],
                                TypeSystem`NestedGrid`PackagePrivate`updateState[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                 {Key["Type"]},
                                 1
                                ]
                               ]
                             ],
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Type"]},
                              "RowHeader",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{1, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           Background -> GrayLevel[0.95],
                           Alignment -> {Left, Baseline}
                          ],
                          Item[
                           Pane[
                            Annotation[
                             "UnsignedInteger8",
                             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                              {Key["Type"]},
                              "Item",
                              False
                             ],
                             "Mouse"
                            ],
                            ImageSize -> {{179.20000000000002, Full}, Automatic},
                            ImageMargins -> {{5, 3}, {4, 5}}
                           ],
                           ItemSize -> {Full, Automatic}
                          ]
                         }
                        },
                        BaseStyle -> {
                         ContextMenu ->
                          Dynamic[
                           TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;
                           Which[
                            UnsameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID,
                             TypeSystem`NestedGrid`PackagePrivate`localHold[
                              TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                             ]
                            ],
                            { },
                            SameQ[
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger,
                             TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger
                            ],
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                            True,
                            
                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger;

                            TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                             Block[
                              {
                               TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                                TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                                TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                               }
                              },
                              With[
                               {
                                TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader,
                                TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                                 And[
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPathType,
                                   Alternatives["RowHeader", "ColumnHeader"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                                   TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                   TypeSystem`NestedGrid`PackagePrivate`$state$$
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                                 TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                                  TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$["SortPaths"],
                                  TypeSystem`NestedGrid`PackagePrivate`$state$$[
                                   "SortDirections"
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`haveData$ = 
                                 Not[
                                  FailureQ[
                                   TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ]
                                  ]
                                 ],
                                TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = 
                                 Not[
                                  FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]
                                 ]
                               },
                               Join[
                                {
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Show ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "remove"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 If[ Or[
                                   Not[TypeSystem`NestedGrid`PackagePrivate`haveData$],
                                   TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                                    TypeSystem`NestedGrid`PackagePrivate`$lastPath,
                                    TypeSystem`NestedGrid`PackagePrivate`$state$$
                                   ],
                                   TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$,
                                   And[
                                    TypeSystem`NestedGrid`PackagePrivate`allHidden$,
                                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$
                                   ]
                                  ],
                                  Nothing,
                                  MenuItem[
                                   StringJoin[
                                    "Hide ",
                                    Which[
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "Item"
                                     ],
                                     "",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "RowHeader"
                                     ],
                                     "Row",
                                     Equal[
                                      TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                      "ColumnHeader"
                                     ],
                                     "Column",
                                     True,
                                     ""
                                    ]
                                   ],
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                                     TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                     "add"
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ]
                                 ],
                                 Delimiter
                                },
                                If[ And[
                                  TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MatchQ[
                                   TypeSystem`NestedGrid`PackagePrivate`lastPathType$,
                                   Alternatives["ColumnHeader", "KeyDummy"]
                                  ],
                                  TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                                  Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]
                                 ],
                                 {
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Ascending"
                                   ],
                                   MenuItem[
                                    "Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Ascending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    "Descending"
                                   ],
                                   MenuItem[
                                    "Reverse Sort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      "Descending"
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  If[ UnsameQ[
                                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$,
                                    None
                                   ],
                                   MenuItem[
                                    "Unsort",
                                    KernelExecute[
                                     TypeSystem`NestedGrid`PackagePrivate`updateSort[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                                      TypeSystem`NestedGrid`PackagePrivate`lastPath$,
                                      None
                                     ]
                                    ],
                                    MenuEvaluator -> Automatic
                                   ],
                                   Nothing
                                  ],
                                  Delimiter
                                 },
                                 { }
                                ],
                                {
                                 MenuItem[
                                  "Copy Position to Clipboard",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`copyClip
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Copy Data to Clipboard",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`copyClip
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ],
                                 Delimiter,
                                 MenuItem[
                                  "Paste Position in New Cell",
                                  KernelExecute[
                                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                                    TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                   ]
                                  ],
                                  MenuEvaluator -> Automatic
                                 ],
                                 If[ TypeSystem`NestedGrid`PackagePrivate`haveData$,
                                  MenuItem[
                                   "Paste Data in New Cell",
                                   KernelExecute[
                                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                                     TypeSystem`NestedGrid`PackagePrivate`$state$$,
                                     TypeSystem`NestedGrid`PackagePrivate`cellPaste
                                    ]
                                   ],
                                   MenuEvaluator -> Automatic
                                  ],
                                  Nothing
                                 ]
                                }
                               ]
                              ]
                             ]
                           ]
                          ],
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        },
                        Dividers -> All,
                        FrameStyle -> GrayLevel[0.7490196078431373],
                        Spacings -> {0, 0},
                        Alignment -> Left,
                        BaseStyle -> {
                         FontFamily -> "Source Sans Pro",
                         FontSize -> 14,
                         FontWeight -> Plain
                        }
                       ],
                       LineBreakWithin -> False,
                       ContextMenu -> { },
                       NumberMarks -> False,
                       ShowAutoStyles -> False
                      ]
                     ],
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True
                   },
                   Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     
                     If[ Not[TypeSystem`NestedGrid`PackagePrivate`initialQ],
                      Module[
                       {
                        TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                        TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                         TypeSystem`NestedGrid`PackagePrivate`datasetData[
                          TypeSystem`NestedGrid`PackagePrivate`$state$$
                         ]
                       },
                       
                       TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                        If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$],
                         TypeSystem`NestedGrid`PackagePrivate`renderedGrid,
                         TypeSystem`NestedGrid`PackagePrivate`renderGrid[TypeSystem`NestedGrid`PackagePrivate`$state$$, TypeSystem`NestedGrid`PackagePrivate`$path$$, TypeSystem`NestedGrid`PackagePrivate`$vPos$$, TypeSystem`NestedGrid`PackagePrivate`$hPos$$, TypeSystem`NestedGrid`PackagePrivate`$grid$$, TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                          TypeSystem`NestedGrid`PackagePrivate`tmpData$
                         ]
                        ];

                       If[ Not[
                         FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]
                        ],
                        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                         TypeSystem`NestedGrid`PackagePrivate`tmpGrid$
                       ];
                      ]
                     ];

                     TypeSystem`NestedGrid`PackagePrivate`initialQ = False;
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$;
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$;
                     If[ FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid],
                      TypeSystem`SparseGrid[
                       TypeSystem`H["(data no longer present)"]
                      ],
                      TypeSystem`NestedGrid`PackagePrivate`renderedGrid
                     ]
                    ],
                    TrackedSymbols :> {
                     TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                     TypeSystem`NestedGrid`PackagePrivate`$hPos$$
                    }
                   ],
                   DynamicModuleValues :> { }
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                     TypeSystem`NestedGrid`PackagePrivate`$path$$,
                     TypeSystem`NestedGrid`PackagePrivate`updateState[
                      TypeSystem`NestedGrid`PackagePrivate`$state$$,
                      TypeSystem`NestedGrid`PackagePrivate`$path$$,
                      TypeSystem`NestedGrid`PackagePrivate`$vPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$hPos$$,
                      TypeSystem`NestedGrid`PackagePrivate`$grid$$,
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                    ]
                   ],
                   TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                  Style[
                   Framed[
                    Dynamic[
                     Replace[
                      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$,
                      {
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Null,
                        Blank[]
                       ] -> "",
                       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[TypeSystem`NestedGrid`PackagePrivate`localHold[TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`pathType$,
                         Blank[]
                        ],
                        Pattern[
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$,
                         Blank[]
                        ]
                       ] :>
                        (
                        Increment[
                         TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger
                        ];

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                         TypeSystem`NestedGrid`PackagePrivate`path$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                         TypeSystem`NestedGrid`PackagePrivate`pathType$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                         TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$;

                        
                        TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                         TypeSystem`NestedGrid`PackagePrivate`localHold[
                          TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                         ];

                        TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                         TypeSystem`NestedGrid`PackagePrivate`path$,
                         TypeSystem`NestedGrid`PackagePrivate`makePathElements
                        ]),
                       Null :> Spacer[10],
                       Blank[] :> Spacer[10]
                      }
                     ],
                     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}
                    ],
                    FrameStyle -> None,
                    ImageMargins -> 0,
                    FrameMargins -> 0,
                    Alignment -> Top,
                    ImageSize -> {Automatic, 15}
                   ],
                   FontSize -> 1
                  ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  Null
                },
                DynamicWrapperBox[
                 DynamicBox[
                  ToBoxes[
                   Dataset`DatasetContent[
                    2,
                    "Path" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$],
                    "Grid" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$],
                    "State" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$],
                    "VPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$],
                    "HPos" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$],
                    "TopBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$],
                    "BottomBar" ->
                     Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$],
                    "OutputID" ->
                     Hold[
                      TypeSystem`NestedGrid`PackagePrivate`localHold[
                       TypeSystem`NestedGrid`PackagePrivate`$outputID$$
                      ]
                     ]
                   ],
                   StandardForm
                  ],
                  ImageSizeCache -> {679., {127.3544921875, 132.6455078125}},
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$state$$,
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$
                  }
                 ],
                 TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                  MouseAnnotation[],
                 ImageSizeCache -> {679., {127.3544921875, 132.6455078125}}
                ],
                BaseStyle -> {LineBreakWithin -> False},
                DynamicModuleValues :> { },
                Initialization :>
                 (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                  CreateUUID[]),
                UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}
               ],
               Deploy,
               DefaultBaseStyle -> "Deploy"
              ],
              Dataset`InterpretDataset[1],
              Editable -> False,
              SelectWithContents -> True,
              Selectable -> False
             ]
            ],
            "Output",
            CellLabel -> "Out[9]=",
            CellID -> 600802235
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "index",
               "=",
               RowBox[
                {
                 "Normal",
                 "[",
                 RowBox[
                  {"phaseL", "[", RowBox[{"[", "\"Index\"", "]"}], "]"}
                 ],
                 "]"
                }
               ]
              }
             ]
            ],
            "Input",
            CellLabel -> "In[10]:=",
            CellID -> 122666670
           ],
           Cell[
            BoxData[RowBox[{"73", ";;", "74"}]],
            "Output",
            CellLabel -> "Out[10]=",
            CellID -> 548584723
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[{"message", "[", RowBox[{"[", "index", "]"}], "]"}]
            ],
            "Input",
            CellLabel -> "In[11]:=",
            CellID -> 529725650
           ],
           Cell[
            BoxData[RowBox[{"{", RowBox[{"250", ",", "138"}], "}"}]],
            "Output",
            CellLabel -> "Out[11]=",
            CellID -> 201030522
           ]
          },
          Open
         ]
        ],
        Cell[
         "In cases like this, the invalid value should be checked against each individual element:",
         "ExampleText",
         CellID -> 130482448
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"phaseL", "[", "\"Invalid\"", "]"}]],
            "Input",
            CellLabel -> "In[12]:=",
            CellID -> 411262828
           ],
           Cell[
            BoxData["255"],
            "Output",
            CellLabel -> "Out[12]=",
            CellID -> 1001920140
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      TextData[
       {
        "More Examples",
        Cell[
         BoxData[
          TemplateBox[
           {
            "MoreExamples",
            Cell[
             BoxData[
              FrameBox[
               Cell[
                "Extended examples in standardized sections.",
                "MoreInfoText"
               ],
               BaseStyle -> "IFrameBox"
              ]
             ],
             "MoreInfoTextOuter"
            ]
           },
           "MoreInfoOpenerButtonTemplate"
          ]
         ]
        ]
       }
      ],
      "ExtendedExamplesSection",
      CellTags -> "ExtendedExamples",
      CellID -> 156769521
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Scope", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 125000624
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Generalizations & Extensions", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 312849430
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Options", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 85851215
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 170312065
        ],
        Cell[
         BoxData[
          InterpretationBox[
           Cell["XXXX", "ExampleSubsection"],
           $Line = 0;
          ]
         ],
         "ExampleSubsection",
         CellID -> 160280765
        ]
       },
       Open
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          InterpretationBox[
           Cell["Applications", "ExampleSection"],
           $Line = 0;
          ]
         ],
         "ExampleSection",
         CellID -> 548625689
        ],
        Cell[
         "Getting the raw unprocessed message data is much faster than importing formatted messages:",
         "ExampleText",
         CellID -> 444327282
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "First",
               "[",
               RowBox[
                {
                 "RepeatedTiming",
                 "[",
                 RowBox[
                  {
                   "FITImport",
                   "[",
                   RowBox[
                    {
                     "\"RH/ComputationalFitness/ExampleData/Activity.fit\"",
                     ",",
                     "\"RawData\""
                    }
                   ],
                   "]"
                  }
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[1]:=",
            CellID -> 137182160
           ],
           Cell[
            BoxData["0.022154671875`"],
            "Output",
            CellLabel -> "Out[1]=",
            CellID -> 548914361
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "First",
               "[",
               RowBox[
                {
                 "RepeatedTiming",
                 "[",
                 RowBox[
                  {
                   "FITImport",
                   "[",
                   RowBox[
                    {
                     "\"RH/ComputationalFitness/ExampleData/Activity.fit\"",
                     ",",
                     "\"Messages\""
                    }
                   ],
                   "]"
                  }
                 ],
                 "]"
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[2]:=",
            CellID -> 423988899
           ],
           Cell[
            BoxData["5.6129668`"],
            "Output",
            CellLabel -> "Out[2]=",
            CellID -> 45672976
           ]
          },
          Open
         ]
        ],
        Cell[
         TextData[
          {
           "Using ",
           Cell[
            BoxData[
             ButtonBox[
              "$FITMessageDefinitions",
              BaseStyle -> "Link",
              ButtonData -> "paclet:RH/ComputationalFitness/ref/$FITMessageDefinitions"
             ]
            ],
            "InlineFormula"
           ],
           " allows you to write a custom FIT importer that avoids overhead for values you do not need:"
          }
         ],
         "ExampleText",
         CellID -> 641886098
        ],
        Cell[
         BoxData[
          {
           RowBox[
            {
             RowBox[
              {
               "$recordNumber",
               "=",
               RowBox[
                {
                 "$FITMessageDefinitions",
                 "[",
                 RowBox[{"\"Record\"", ",", "\"MessageNumber\""}],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             RowBox[
              {
               "$timeIndex",
               "=",
               RowBox[
                {
                 "$FITMessageDefinitions",
                 "[",
                 RowBox[
                  {
                   "\"Record\"",
                   ",",
                   "\"Fields\"",
                   ",",
                   "\"Timestamp\"",
                   ",",
                   "\"Index\""
                  }
                 ],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             RowBox[
              {
               "$altitudeIndex",
               "=",
               RowBox[
                {
                 "$FITMessageDefinitions",
                 "[",
                 RowBox[
                  {
                   "\"Record\"",
                   ",",
                   "\"Fields\"",
                   ",",
                   "\"Altitude\"",
                   ",",
                   "\"Index\""
                  }
                 ],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ],
           "\[IndentingNewLine]",
           RowBox[
            {
             RowBox[
              {
               "$invalid",
               "=",
               RowBox[
                {
                 "$FITMessageDefinitions",
                 "[",
                 RowBox[
                  {
                   "\"Record\"",
                   ",",
                   "\"Fields\"",
                   ",",
                   "\"Altitude\"",
                   ",",
                   "\"Invalid\""
                  }
                 ],
                 "]"
                }
               ]
              }
             ],
             ";"
            }
           ]
          }
         ],
         "Input",
         CellLabel -> "In[3]:=",
         CellID -> 81137490
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[{"importAltitude", "[", "file_", "]"}],
            ":=",
            "\[IndentingNewLine]",
            RowBox[
             {
              "With",
              "[",
              RowBox[
               {
                RowBox[
                 {
                  "{",
                  RowBox[
                   {
                    "records",
                    "=",
                    RowBox[
                     {
                      "Cases",
                      "[",
                      RowBox[
                       {
                        RowBox[
                         {
                          "FITImport",
                          "[",
                          RowBox[{"file", ",", "\"RawData\""}],
                          "]"
                         }
                        ],
                        ",",
                        RowBox[{"{", RowBox[{"$recordNumber", ",", "__"}], "}"}]
                       }
                      ],
                      "]"
                     }
                    ]
                   }
                  ],
                  "}"
                 }
                ],
                ",",
                "\[IndentingNewLine]",
                RowBox[
                 {
                  "TimeSeries",
                  "[",
                  RowBox[
                   {
                    "Transpose",
                    "[",
                    RowBox[
                     {
                      "{",
                      RowBox[
                       {
                        RowBox[
                         {
                          "records",
                          "[",
                          RowBox[{"[", RowBox[{"All", ",", "$timeIndex"}], "]"}],
                          "]"
                         }
                        ],
                        ",",
                        RowBox[
                         {
                          RowBox[
                           {
                            "records",
                            "[",
                            RowBox[{"[", RowBox[{"All", ",", "$altitudeIndex"}], "]"}],
                            "]"
                           }
                          ],
                          "/.",
                          RowBox[{"$invalid", "->", RowBox[{"Missing", "[", "]"}]}]
                         }
                        ]
                       }
                      ],
                      "}"
                     }
                    ],
                    "]"
                   }
                  ],
                  "]"
                 }
                ]
               }
              ],
              "\[IndentingNewLine]",
              "]"
             }
            ]
           }
          ]
         ],
         "Input",
         CellLabel -> "In[7]:=",
         CellID -> 184388208
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "AbsoluteTiming",
               "[",
               RowBox[
                {
                 "altitude",
                 "=",
                 RowBox[
                  {
                   "importAltitude",
                   "[",
                   "\"RH/ComputationalFitness/ExampleData/BikeRide.fit\"",
                   "]"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[8]:=",
            CellID -> 309557662
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 "0.1418508`",
                 ",",
                 InterpretationBox[
                  RowBox[
                   {
                    TagBox["TimeSeries", "SummaryHead"],
                    "[",
                    DynamicModuleBox[
                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                     TemplateBox[
                      {
                       PaneSelectorBox[
                        {
                         False ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = True),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              {
                               {
                                {
                                 { },
                                 { },
                                 TagBox[
                                  {
                                   Directive[
                                    Opacity[1.],
                                    RGBColor[0.368417, 0.506779, 0.709798],
                                    AbsoluteThickness[1.6]
                                   ],
                                   LineBox[
                                    CompressedData[
                                     "\n1:eJw90m1IU2EUB/DND1NLpzO1mW9zWmmKWRAtDDpKWYQwG9KH+ZLWCtFgGdrU\nXF4sIkR8Y6aS0iq23ZdpyzLKrLaUwlSUKMuwMBWdqTjRopK0xbm7Fx4uP87/\nPM9zuDfitFpx1o3H4x10rv/vZj7xOPjbQhKPR3j6Kg3gMzA+hHY+ZiOMGBNm\nOb83wvKH0XW0Q9+wbgJrsiAwxFU3muCzLW43GhKbe0lI1xlS0ERVp5iGoNKA\nHC7fw0D1LWEp2vpkzssMp0TKOrQj4I57O2hbWin0SFN/YzusFe2xoS3yrc/u\nw84a+Se0rLDcYYG2p6pldMlGcpkFimSDHqF4XqjwkBka+3dJ0Wkt5j4aVM1+\niWi4HrNIg647VYEmFE1DDAiXtAWsu6rP0GC/xL/KOrr4HA3eovJW9IivLZKG\nCXtFF3vetFslA1v8RwfRCUm5fAbqT0TOhLrm38aAevLVX7RjR3wYA2uWef8w\nV/0iA+/qN8ejJyZTCmjwfK09gq7LGS9goMprNpvL59PQXTemYfPSgQs0HM8L\nq0Xrr80k0hClUJJoYm9EAwXZtfaXbP7HDSkNRzfxPrL7Z2xoGShrEjrYfs1c\njnPeErV7OM5T4aGmYD7/jQStv+s3R0HMg0JZuOs+xygI2GeQox0rv0soSB0Y\nzkMTNwU1JEw9SiW4fDQJfRZrC2eZ8//5/rwTDYavGhIOa7zfsv32jhUKrgSm\nT6Gtw5ViBsSei3+4/mkGcg/4+ElcFpth9XJ0LOfMdpgV6ZI5u3XA9u6fGWhL\nlq6VAZF+soirVzGQNSapRutjg53fbzXqpAFttbQpGZjv/dKDTrNF/qIgrjhz\nlOu3kxCiUi1xVpJw3vhCEOGylATBmo+E84IJ+Pce7ufcY4K89dtyNBHE05vg\nH/FqiGA=\n                    "
                                    ]
                                   ]
                                  },
                                  Annotation[#1, "Charting`Private`Tag$15915101#1"] &
                                 ]
                                }
                               },
                               { }
                              },
                              {
                               DisplayFunction -> Identity,
                               Ticks -> {Automatic, Automatic},
                               AxesOrigin -> {3.8761179400000086*^9, 2733.031322479254},
                               FrameTicks -> {{{}, {}}, {{}, {}}},
                               GridLines -> {None, None},
                               DisplayFunction -> Identity,
                               PlotRangePadding -> {{Scaled[0.1], Scaled[0.1]}, {Scaled[0.1], Scaled[0.1]}},
                               PlotRangeClipping -> True,
                               ImagePadding -> All,
                               DisplayFunction -> Identity,
                               AspectRatio -> 1,
                               Axes -> {False, False},
                               AxesLabel -> {None, None},
                               AxesOrigin -> {3.87611794*^9, 2733.031322479248},
                               DisplayFunction :> Identity,
                               Frame -> {{True, True}, {True, True}},
                               FrameLabel -> {{None, None}, {None, None}},
                               FrameStyle ->
                                Directive[
                                 Opacity[0.5],
                                 Thickness[Tiny],
                                 RGBColor[0.368417, 0.506779, 0.709798]
                                ],
                               FrameTicks -> {{None, None}, {None, None}},
                               GridLines -> {None, None},
                               GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                               ImageSize ->
                                Dynamic[
                                 {
                                  Automatic,
                                  Times[
                                   3.5,
                                   Times[
                                    CurrentValue["FontCapHeight"],
                                    AbsoluteCurrentValue[Magnification]^(-1)
                                   ]
                                  ]
                                 }
                                ],
                               Method -> {
                                "DefaultBoundaryStyle" -> Automatic,
                                "DefaultGraphicsInteraction" -> {
                                 "Version" -> 1.2,
                                 "TrackMousePosition" -> {True, False},
                                 "Effects" -> {
                                  "Highlight" -> {"ratio" -> 2},
                                  "HighlightPoint" -> {"ratio" -> 2},
                                  "Droplines" -> {
                                   "freeformCursorMode" -> True,
                                   "placement" -> {"x" -> "All", "y" -> "None"}
                                  }
                                 }
                                },
                                "DefaultMeshStyle" -> AbsolutePointSize[6],
                                "ScalingFunctions" -> None,
                                "CoordinatesToolOptions" -> {
                                 "DisplayFunction" ->
                                  (Function[
                                   {
                                    (Identity[#1] & )[Part[#1, 1]],
                                    (Identity[#1] & )[Part[#1, 2]]
                                   }
                                  ]),
                                 "CopiedValueFunction" ->
                                  (Function[
                                   {
                                    (Identity[#1] & )[Part[#1, 1]],
                                    (Identity[#1] & )[Part[#1, 2]]
                                   }
                                  ])
                                }
                               },
                               PlotRange -> {
                                {3876117940, 3876129405},
                                {2733.031322479248, 4336.486102581024}
                               },
                               PlotRangeClipping -> True,
                               PlotRangePadding -> {{Scaled[0.1], Scaled[0.1]}, {Scaled[0.1], Scaled[0.1]}},
                               Ticks -> {Automatic, Automatic}
                              }
                             ],
                             GridBox[
                              {
                               {
                                TagBox[
                                 TemplateBox[
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Time: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["3876117940", "SummaryItem"]
                                    }
                                   ],
                                   RowBox[
                                    {
                                     TagBox["\" to \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["3876129405", "SummaryItem"]
                                    }
                                   ]
                                  },
                                  "RowDefault"
                                 ],
                                 "SummaryItem"
                                ],
                                "\[SpanFromLeft]"
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Data points: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["11376", "SummaryItem"]
                                 }
                                ],
                                "\[SpanFromLeft]"
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ],
                         True ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = False),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              {
                               {
                                {
                                 { },
                                 { },
                                 TagBox[
                                  {
                                   Directive[
                                    Opacity[1.],
                                    RGBColor[0.368417, 0.506779, 0.709798],
                                    AbsoluteThickness[1.6]
                                   ],
                                   LineBox[
                                    CompressedData[
                                     "\n1:eJw90m1IU2EUB/DND1NLpzO1mW9zWmmKWRAtDDpKWYQwG9KH+ZLWCtFgGdrU\nXF4sIkR8Y6aS0iq23ZdpyzLKrLaUwlSUKMuwMBWdqTjRopK0xbm7Fx4uP87/\nPM9zuDfitFpx1o3H4x10rv/vZj7xOPjbQhKPR3j6Kg3gMzA+hHY+ZiOMGBNm\nOb83wvKH0XW0Q9+wbgJrsiAwxFU3muCzLW43GhKbe0lI1xlS0ERVp5iGoNKA\nHC7fw0D1LWEp2vpkzssMp0TKOrQj4I57O2hbWin0SFN/YzusFe2xoS3yrc/u\nw84a+Se0rLDcYYG2p6pldMlGcpkFimSDHqF4XqjwkBka+3dJ0Wkt5j4aVM1+\niWi4HrNIg647VYEmFE1DDAiXtAWsu6rP0GC/xL/KOrr4HA3eovJW9IivLZKG\nCXtFF3vetFslA1v8RwfRCUm5fAbqT0TOhLrm38aAevLVX7RjR3wYA2uWef8w\nV/0iA+/qN8ejJyZTCmjwfK09gq7LGS9goMprNpvL59PQXTemYfPSgQs0HM8L\nq0Xrr80k0hClUJJoYm9EAwXZtfaXbP7HDSkNRzfxPrL7Z2xoGShrEjrYfs1c\njnPeErV7OM5T4aGmYD7/jQStv+s3R0HMg0JZuOs+xygI2GeQox0rv0soSB0Y\nzkMTNwU1JEw9SiW4fDQJfRZrC2eZ8//5/rwTDYavGhIOa7zfsv32jhUKrgSm\nT6Gtw5ViBsSei3+4/mkGcg/4+ElcFpth9XJ0LOfMdpgV6ZI5u3XA9u6fGWhL\nlq6VAZF+soirVzGQNSapRutjg53fbzXqpAFttbQpGZjv/dKDTrNF/qIgrjhz\nlOu3kxCiUi1xVpJw3vhCEOGylATBmo+E84IJ+Pce7ufcY4K89dtyNBHE05vg\nH/FqiGA=\n                    "
                                    ]
                                   ]
                                  },
                                  Annotation[#1, "Charting`Private`Tag$15915101#1"] &
                                 ]
                                }
                               },
                               { }
                              },
                              {
                               DisplayFunction -> Identity,
                               Ticks -> {Automatic, Automatic},
                               AxesOrigin -> {3.8761179400000086*^9, 2733.031322479254},
                               FrameTicks -> {{{}, {}}, {{}, {}}},
                               GridLines -> {None, None},
                               DisplayFunction -> Identity,
                               PlotRangePadding -> {{Scaled[0.1], Scaled[0.1]}, {Scaled[0.1], Scaled[0.1]}},
                               PlotRangeClipping -> True,
                               ImagePadding -> All,
                               DisplayFunction -> Identity,
                               AspectRatio -> 1,
                               Axes -> {False, False},
                               AxesLabel -> {None, None},
                               AxesOrigin -> {3.87611794*^9, 2733.031322479248},
                               DisplayFunction :> Identity,
                               Frame -> {{True, True}, {True, True}},
                               FrameLabel -> {{None, None}, {None, None}},
                               FrameStyle ->
                                Directive[
                                 Opacity[0.5],
                                 Thickness[Tiny],
                                 RGBColor[0.368417, 0.506779, 0.709798]
                                ],
                               FrameTicks -> {{None, None}, {None, None}},
                               GridLines -> {None, None},
                               GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                               ImageSize ->
                                Dynamic[
                                 {
                                  Automatic,
                                  Times[
                                   3.5,
                                   Times[
                                    CurrentValue["FontCapHeight"],
                                    AbsoluteCurrentValue[Magnification]^(-1)
                                   ]
                                  ]
                                 }
                                ],
                               Method -> {
                                "DefaultBoundaryStyle" -> Automatic,
                                "DefaultGraphicsInteraction" -> {
                                 "Version" -> 1.2,
                                 "TrackMousePosition" -> {True, False},
                                 "Effects" -> {
                                  "Highlight" -> {"ratio" -> 2},
                                  "HighlightPoint" -> {"ratio" -> 2},
                                  "Droplines" -> {
                                   "freeformCursorMode" -> True,
                                   "placement" -> {"x" -> "All", "y" -> "None"}
                                  }
                                 }
                                },
                                "DefaultMeshStyle" -> AbsolutePointSize[6],
                                "ScalingFunctions" -> None,
                                "CoordinatesToolOptions" -> {
                                 "DisplayFunction" ->
                                  (Function[
                                   {
                                    (Identity[#1] & )[Part[#1, 1]],
                                    (Identity[#1] & )[Part[#1, 2]]
                                   }
                                  ]),
                                 "CopiedValueFunction" ->
                                  (Function[
                                   {
                                    (Identity[#1] & )[Part[#1, 1]],
                                    (Identity[#1] & )[Part[#1, 2]]
                                   }
                                  ])
                                }
                               },
                               PlotRange -> {
                                {3876117940, 3876129405},
                                {2733.031322479248, 4336.486102581024}
                               },
                               PlotRangeClipping -> True,
                               PlotRangePadding -> {{Scaled[0.1], Scaled[0.1]}, {Scaled[0.1], Scaled[0.1]}},
                               Ticks -> {Automatic, Automatic}
                              }
                             ],
                             GridBox[
                              {
                               {
                                TagBox[
                                 TemplateBox[
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Time: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["3876117940", "SummaryItem"]
                                    }
                                   ],
                                   RowBox[
                                    {
                                     TagBox["\" to \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox["3876129405", "SummaryItem"]
                                    }
                                   ]
                                  },
                                  "RowDefault"
                                 ],
                                 "SummaryItem"
                                ],
                                "\[SpanFromLeft]"
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Data points: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["11376", "SummaryItem"]
                                 }
                                ],
                                "\[SpanFromLeft]"
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Regular: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["False", "SummaryItem"]
                                 }
                                ],
                                RowBox[
                                 {
                                  TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["1", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Metadata: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["None", "SummaryItem"]
                                 }
                                ],
                                RowBox[
                                 {
                                  TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["1", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                TagBox["\"\"", "SummaryItem"],
                                RowBox[
                                 {
                                  TagBox["\"Resampling: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   RowBox[{"{", RowBox[{"\"Interpolation\"", ",", "1"}], "}"}],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ]
                        },
                        Dynamic[Typeset`open$$],
                        ImageSize -> Automatic
                       ]
                      },
                      "SummaryPanel"
                     ],
                     DynamicModuleValues :> { }
                    ],
                    "]"
                   }
                  ],
                  TemporalData[
                   TimeSeries,
                   {
                    CompressedData[
                     "\n1:eJzF3XnYVdP7P/CiiM4+lZmiQiLJPM9J5nmeQviYhSJzVDSYKTIPqZSiDBnT\nIHMDRRLNaUBCg9L0e9/Xeb+vfT/rWfucJ3yv3x+vy+fTc87e+6y919pruNda\n9Vu2OvmatSpVqlQZrm1cqdKA9StVOr56eSeugRNKiB0/y3HOsUUcU8LRgaOc\nI/8DR0Q0z/j3ivDH9td6NH+PfrdPH6XZCe5enOScvAZOqaBTizgt4vQi9JlT\n3fGP5++0NGkGTeFA2B/2hN1gZ9gRGsH2JexQAY14vB3d/25MO1ETntfsArvy\nWnaHPWBv2g8OgIPhUF7/4fw9ehaPc/dM6a/0s3Q5E86Cc+hcaAHnOxfAhU7L\nwEV0sXNJ4H/B32MuKiH2nfA8a+J/dKlzGV3uXElXwdVwLV0H10Nrpw3dELiR\nwn9vzeOYVjy+nesKJ7wWXUcrXsf15M8jbf+Bm+hmuAVug9vhDmhHd1EHuBvu\ngc7QBbrC/fAAPAQPQ3d4DJ6Ap+EZeA6ehxfhJegFfeBl6Av9oD8MgNdgIAyC\nN+AtGAzvwLvwPgyhoTQMhsNHMBI+hk/gU/gcvoRRMJrGwtcwnr6Bb2ECfAcT\n4XuYBD/AZJgCU2E6zICZMAtmw1yYBz/TrzQfFsDv8Af9CYtosbME/qKlsAz+\nhuWwAlbSKlrtVMoVVKa1aG2qQlVLWCfDuhXgP6/j6by6jrV4fXatq6vH+b+t\nyvi9/jfH+DRQOuj327VWg/VgfchBAjWoFmwAG8LGsAlsSpvDFlAbtoStoC7V\nh60D9aguP1+H39+cx64JeajO6/FpGd4bf93+mmvyesNr3YznCW3Gz9nnN+Lv\nrcFrqMq0sjRcyWfQnsuFfIYX8Ln+BebAT8wDM2kG80cp0yJin5sRETvWZJrE\nfPs98/M3ND7C53nle+X9ie44KgfEyoMf3TmnREx1v0nXrfLC0k1lhS8jVDYs\npMVBWaDyIKS/qexYkuGvDP4zizOEZVNoWRGxv6tcU9lmLI8r76q8UJm0bpBf\nc8w3ev6VZzcK8oHPA8q3tZkP6zBPKh+L8nM95mmfr7elBtAQtocdoTE0gV1g\nV9gd9oC9YG/YF/aD/eEAOBAOgoPhEGgKh0EzOByOgCPpKDraOYaOoxPgRDgJ\nToFT4XQ4A86Es+gcOhfOgxZ0PlwAF9JFdAldSpfB5XAFXAlXOVfTNdSKrqXr\n4PpA6wq6nt/Xsa/i+a/ktXhX8jpauXPcADdCW7gJbqZb6Fa4DW6HO6Ad3Ant\n4W64Bzo5nR39293Ukd+7i8e6jee4mefPchOv43Z33q7wADwE3eAxeAKehKfh\nWXgOXoCe0At6Qx/oC/2gP71KA+F1eAPegsH0NrwD79J78D59QB/CMBgOH8FI\n+BQ+gy9gFIyBsfAVfA3jaDx9CxPgO5gI38OPMBmmwnSYAbPgJ5gNc2Ae/Ay/\nwHxaAH/An7AIlsBS+BtWwGqolKAsgSpQFdal9aE65CAPNaAWbAAbwcawCWwK\nm0FtqgNbQV2oD1vDNrAtNIDtoCFtDztAI9gRGsNO1IR2hl1oV9iNdqc9YE/Y\nC/amfWA/2B8OhIPgYDgEDoVmcDg0h6PgaDgWjoMT4GQ4BU6D0+EMOBPOgnPp\nPGgB58MF1JIugovhEvgfXAqXweVwBVxF10Ar5zpoDW3gRmgLN8EtcCvcDu3g\nTmhPHeFu6ARd4F64Hx6Ah+BheAS6w2PQA56AJ+EpeAaeg+fhBXgRXoLe1Ade\nhr7wCrxKr8FAGgSvwxvwJrwFg+FteAfehffgAxgCH8JQGg4j4CMYSZ/Qp85n\nGT51n/+YRvJ4I3h8M4yGOh86/t+H8bsf87hfwCgYC1/DePgWJsD3MAl+hCk0\nHWbALPgJZsM8+oV+hfn0G/1Of8CfsBAW0WJYAn/BUlgGf8NyWAEri1jBz/1N\ny3icJTz2nzz/r7zG2bzuGfwt0yL0G+1zP/N36NrD645ZxM8t5Pn/IKXBApcu\n3gInll6L+dvCdFIaVcoXVKa1oQpUhXWoGqwH60MOEqgBNWFD2Jg2gU1pM2dz\nZ4sS9LlNeTw7fp7nrcbrWstdr1QqYnXkvi9jeui+LwnuxZpY7I4hS3m+VUnh\n/Flpuy7TtjrTNeHvtfStBRvARpE0tjSqDXVgK6gL9WFr2Ba2o4aO/q0BbUvb\nOFs79TNszc9uy+PYMbeHRrQj7URNYGfaFXaj3WmPwJ4Re/Cz+q4dZxdHx2/y\nD+i7OtauEeE1h/x17wV7wz60L+1PB9CBdBAcDIdAU2gGzeEoOBqOgxPgRDgJ\nToFT6bSI0yPOoLPoHGgBF8DF8D+4HK6Cq+FauA5aUxu4AW6EtnQT3EK3wm1w\nO9wB7eAu6gAd4R7oBJ2hC90H98OD8BA8DN2gOzwOT8CT8BQ9HXjGCf8Wfu5Z\neo6epxfoReoJL0Ev0v/uDX3gZf5X/7uUPk7vQK+IlyJin+sVOZ7O0xf6wSvQ\nHwbAq/AavU5vwJtF2GcG8bsDeMy+kd/l06OvO6+dayCPYed6C96Bd+F95wN6\nn397i58f5K751Qrwn+vPa+nDe/oC73/Ws/IsP9OTaduHv7c/jzeI6WHXNhje\n5m95z13/hzQUhsFwGAEfwUj4GD6BT+kz+hy+gC9hDIyFr2EcfAsT4Xv4EabA\nNJgJs2A2zIGf4ReYDwvgd1gIi2AJLIVl8DcshxW0ElbBaqhcA+9XWBuqQjWo\nDjmoQbVgQ9gINqZNYFPYDLaA2rAl1YOtqQFsBztAI2gMTWAX2BV2gz1hH9gP\nDoSD4FBoCs2gORwBx8CxcDycBKfAqXAanAFnwllwLpwHLeACaAkXwyVwKVwG\nl8MVcBW0gmvhemoDN0JbuAVuhdvgdrgT7oL20IE6wt1wD3SCztAFusK9dL/z\nIDxEj9Cj0A26w2PwOPSgJ+BJegqehmfgWXgeXoAXoSe8BL2gN/WFftAfBsBA\neB3egDfhLXgb3oX34H34AIbQUBhOI+AjGAmfwGfwOXwBX8JoGAtfwdfwDUyA\n72ES/ACTYQpMg+kwC36C2TAX5sF8WAC/wx+wEBbDElgKy2ElrILVULkmnl+o\nAutCNagOOchDTdgANoKNYTOoDXWgLtSDrWEb2A52gEbQGHaCJrAr7AZ7wJ6w\nD+wL+8GBcBAcAk2hGRwOzeEoOBqOhRPgRDgJToZT4TQ4A86Es+BsOAda0AVw\nIbSEi+gSuJQug8vhSrgKroZWdC1cB62hDdwAN0JbuJlugdvgdrgD2sGd0J46\nQEe4BzpBZ+gCXeFeuA8egIfgYXgEHoVu0B0egx7wBDwJT8HT8Cw8Dy9CT+hF\nL0M/eAX6w6vwGgyC1+FNGAzvwHs0BD6EYTAcRsIn8Cl8Rl/QlzCKRsMYGAtf\n0zcwASbCJPgBJsMUmAbTYRbMgbnwM/wCv8Jv9Dv8AYtgMSyBZfA3rICVsAoq\n10LZC2tTFagK1aA65CAPNaAWbEgbwcawGWwOtWFL2ArqUj3YBraFBtAQdoBG\n0BiawM60C+wKu8OesBfsDfvAvrA/HAAHwkFwMBwCTakZHA7N6Ug4mo6F4+AE\nOBlOgdPoDDgTzoZzqQWcDxdAS7oYLoFL4TK4HK6AK+EaaAXXwfXQGm6gtnAT\n3AK30R3QDu6C9tABOsLd0Ak6Qxe4D+6HB+BBeBgeoW7QHR6DHvQkPeM8S/r/\nT8NT/NwT/N7jPI4d71Ee/wGevwuvza71VriRv/Uqpsc5cDrT9yg4lPdnX95L\nu6/b1So8B3VqFZ6ZDSCB9WoVnjd7Bu25/BMW8Nmeyuff8sI45hnLQx8zbw2F\nd5kXBzC/9obn4Bnm9cdZDjzC8qEzy5D2LGNurVkoi6xssjLLyi8r26y8s3LQ\nykcrL60MtTJ1f9gddoaGNQvl9SZQq2ahzLd3wTL4DX6GGXzffMd30ij4mO8z\ne78N5rvvdb4T7R3Zh+/OnnynPsf37NN87z7Jd3EPvp+7k72/H4YH+M63d7/V\nC6yOYPUGq0NYfeIauBIuqlGom1id5Tg4Cg6BfWsU6kVWR2oI9aEu1KlRqF9Z\nXWuDGoU6mdXRrK5mdbYqNQr1uFWs3y1j3W8x64TzWV+0+uNkmAQTWN8cwzro\nF6yXjmTddRjrtaqfW9tgIOvFr7CerbaLtaGeYz3b2mzWfrN2XI98oU3XnR6l\nR/KFdp+1/x6kB/KFdqG1D++Frvm0zWjtx050N1kb09qd1ga1tqm1WVvlC21Z\na9deAhflC23ec/OFtrC1pa1dbe3sI/KFNri11609v0O+0LdhfSzW32L9Mdb/\nZX1Q69I6jvpw1Hejfhvrr7E+MOvbUl+NUR+K+k/sfNZn0jif9klYX4T6HNS/\nsDf5/gT1IRyST/sQDqPD84W+hCPzaX/CMXAsHM/fb+lwcj7tVzgtX7av4Gw6\nh85jGp5HLeh8x/oVLqSWJVzI7+i4du4TeZ12/Yfy9+7C9NmeaWZpWA+2ZNrW\nDv4r9pn6+bJ9VUpr9U+p38ent9J8r3zap6N+Hd+nE/bh2PU247Ur/bPoM4fx\n+wfwmPvwXHvw2prwmu3ard9tK/5Oe8bsebPn0foWV7Lf9zf2S1tf/Oik0Odv\n4w02FmHjE/2hX1IYz7AxDhvzsDEQGwt5NCmMmXROCuMrtyWF8Rcbi7HxGhvP\nsfEdjf2c45xdwjmBYmNHFybp+JHGkEq5JEnHmfxYk3d5xGX8rL6n41zszn+R\nu64Leb3n8nfZuNipSWHc7LCkMM5m43I2hmfjfjYWaOOCNm5o44jrJIUxxspJ\nYczRxh5XwUqORS7PsIKfWRmMV1ZN0vHKarAerR9Yj3/XuOY6GexvGuu08c0t\nksJYpo1f2tilxiptnFJjkhqPtHFIPwZp44829ngA00Vjj02ZVjb+2JyOgCOT\nwjikxiKPoWOTdFzyeDohcGLESUk6hqlxTE9jmmeRf071fIo9pxe4Z6BlUv65\n8+ObV5LGOK9OCmOb1yaF8U25nloH2gRuID8eerNzS5KOj3q3lXB74A7S+Kq5\nizokhTHWe5JCGaFx1vuSdKz1waQw3qoxV427hh7mZ+/jcWzctiPPezt/X1v+\n9uuYbtcwHZW2V5SgdL/GpbtPb5+uSlulr9yUkda3Bumk9PHj0J2SdBz6Qffb\nu5GNQfvx52eTwtizjTv3StIx51doQFJ+3HlQUnbcWWPOftw55t0i3qP3k8K7\nQ+PVfkzYxpVtXNjGnj+HL5PC2PAY+iopjBGbcUnZseLvkvLjxfbOmpmUHSue\nmxTGVG2cWOPDfpxT429Lk3SM048Hh2PCqzL48WE/NqxxwmLjg348+i9+T+N/\nGvvLGv+rlk/HWDXOanVJjbVqTNDGW/14oMYCVb+szbqQxgPr5eNjdQ1Zj8ii\ncUKNDdZ39awteD67hlq8tmr8LRqXXZWkY60aW7f7tID30sbJp/L+f8tnZCyf\nHYsvsHgFq698yOdPdRbLAz3h6SStp1hZo7LDyqJOEZ2pa5KWT8p/igFRHIhi\nQZQfRf9mf388KcSP+PJL1yH38ny6LisPrGywssLKDtWnVA7pPWDlU6uAlVtW\nztl7xt5HFntj7zp7F1r8jr1T7d1rsUT1kkI9w97Z9v62OobVEf5i3JPFRs1k\nPJXFXI1mLJb5PML+/UvGaI1nLNYPjMGa5uKuFG/1WxBnZRaSxVwtJou9+oux\nV8tZn7G60FpJof5hdRTFW1mdqWZSiLXaMCkfb7V5ktZPtkzSeCtLC8VchfFW\nPtZKcVY+vsrSUzFVeybl6zOxeCq7F1anUTyV1WWsDmN1F9VZVEcpFlNVzOlJ\nWm85NeJ0HudsPiuqU6uuEovHisVkXZGk79ew/lLMVUlan74kKVtntutokaRt\nhtOYDscwraxOuC/TeTfeg12c8N7sk6T1SdUjleaqNx6bxOuNoeP4eftec96/\npjz2gTzXnjy/PTv2PNmzZs+dPZNJUshry/ls/8b8MJ15bTzz00jGRloM5Svw\nfK4Qm2nxmha3eS90yaWxovf8C50ydM7QxenKa7kP7ieLLX0QHoZHcmmM6ePQ\ngyze9Cl6JleIObXfaDGnFm9qsaYv87crztRiTAfl0vhSxZNaOg2hMI7UfJIr\nxJP6cmoMKZ7UfJNLY0gVR2om5QplmZlMUwLTaDpZ2TkrwsrAOYG5uTQGVf81\nv+YKz4fKyt9zhfJSZaTKRotNXUYqJ9X+s7aitf+svAzjVVV22jNp7TfFqfqy\nU3GqKjvtWa6blI9TbUAqMxWbupPLj2rz7ZGULSMtL6vd52NOD6PDk7LlpI87\ntTyptpuVk6cm8bJSbbWwH0FiZZ8v/7L6CnwZ6Mu+awJ6R1+blG9bqF2htoTa\nDNbeUpvBt6dUV7E6g9UdrB6htpTaT1bnUb3F6iFqO1idyNoNPnZV8avG6k1h\ne6IfWV+Q2hSxtoS86bxVAfrs6zyeHfu1ChjkzuljZ307JtZO8W0VxbCqnaK2\nSpbh/PwQHvNtXvsgpo2lV2+m30tMz55M2+eZ7s/wPjyZpHXK7tStiO68l1a3\nVBtQ97BnUrb915/pqHsTiyv27bWY90lp9i6//zaPp3v3hrtnvr8w9rtVN9Zv\ntWfW6tr2LFs/gdr06ktUPdfyleUxqzNYHlTfouVj9SdaXre8b+WA+nRi/T6+\nnyfs14n157RIyvc7Xujo3/zf9f/D78TKF5UrYay7L0d8Pd+XH76/x/dF+D6I\nWF9P2J/j+3F8H4XFyqufoiPvkY+Zvy9J+3Cs7FG54+Pmfdmj8kdlkMohiZVH\n3ktOL1K8fehlp2+gn/NKEf2KCI/pvVwB/lp7Oyo7xJchMS84z6+hFwL+uMXS\n3Ov9f0znUVroN6tMsbJQz5k9c/bs2XPo+w4fCjxYAfZOvX8NhHNHlBd8ftD7\nWHoEwjkm6ufz+SXm2SR9rzzF4zzGcz/ifov6G6z+YHnZ6hOWrztQ+wz6e0dH\nfbu+70R1kq5J+b5enzY+Tfw7Layf6FnUsxfOrQnzcJg3fT6LPVvFyo1YeVGs\nrCh2DaXEyqWsc/ZPytbFfB9vjP4+wF2X8tULTG/1lfVI0mdG+eSBgPKHz08P\nr4FY/37Y1y8+v4bXEbuucBzh0aT8O0l5L6wPx/rSNX9L/ekSpvfA/w98/VvC\nenjYv29Uj/P1wLDvXipSN/T1wljd8A13fb5u759LPdNr8v6NvYtjf1NeeS0p\nP+6R1VYI6TPhb/Ttl/C3qj0Tit3LYvnWp5PXP4Mv9+x5tufa3g16PypvW7ls\n5bSV31a2W33P6n2qA95RRLukbF0xVl+8J0nH/vROUL+3L0fC92XWuzJGn+uW\npHk97G/X+7krr6cDf4PVg62ubPVmjRuqreHbGX4sX20Bjedbm8HaHdZ+8H2t\n1rY42fHtEfUjWh+G+hI1jm19HNbXYX2U1q9ofcUHk/WR7EvWb2L9J3uVsHdg\nH3cMs5+jPpiY/Z39+F2d3/o71QdrfePWT259P9YHZH3n25P1DW1H6i/adg01\ncMfQcXdIis+H3jkpOx9afcNeOD/a2+Nfih2zGM3N9rLu6T7unoZjDZq3XWys\nIZy37dvBGhcwarNaP5j6v9TvFcYqqF2q8XGNifv52KXGwlWXVH1SdUn/ni9W\nZsTq0vae9/0l/l2vd4fKUPVx+T4UvTOKzc22fqRwbrbmQ/u52RoHNzZP+kvH\nxsUtFktj4zbmqfFxjY1/Q36M3I+T/wCTSePlM5Ly86vnJIWxVs2ztvFzzbH2\n84b9nGGNp0vWHOT5PJ7mRs/k+TUX2sbyJ/K6J/D3jOPvHMO0+JxpOILpPJj3\nw+oGvXlPn+L9t2fDnhN7nuwZs2fRynArt62Px55xixmyvGB5I1aOSbH8HObN\nYnm1lIqcryLlih8H8+NhKvusHFSZ6MtnldEx+rsvU/3Yp+/Pr0i6hL8zdu3+\nev0167q9HTM0+pd0HP8eCd8fIV2zrkvvPXvn6T23Ndm4ST2qG7AxaRuftjjA\nzcnGXzalTcjGZmyMxsZqNiAb/7ZxnBzZ2I6P55N1k/JxfVWLqEJrO1Ui9Hkf\nG6gxJo3Na4zJjy1twd+7ZZKOy8fG5mWbgP69Hr9fm2m0Ic9Xk+dPIuniYxxF\n6VSdwrGxjZN0PKw2r1XXafd5u6RszIA9Fz6/qIyIvbMPdg6J0N8OogMpq66m\n+pr4+qPKIOVDPcc78fr17CqN/XMbe3brBn8vJnzmY0ods34RWjtHdcWGEaqH\nKm/W5/nsGarD+xvLf5bv7FlSfK498za+WjlJ43QVqyurcmncrrcig8Zu10rS\nfKXnMmtdIZ+nNGYb0t/0W1SO6BgbBnRcv2aRf/a1dlFoy6Rsfo6NF9s98OPE\nxfJJLC5YdVvFdGicuHkFqI3VLEnHmQ9z/+b54yruWLHHih/RWLTGlmIxNjaW\nlDUOFGqZIbZGkuKH/dpIfk0kPx6ksZ9YHdz388b6e1U/9/Gqvu/3vxKLzVNf\nwt2OrknX6vsvbufvbc20UJtesUY+Jv9M3q+TeA+PTdJ2uJWxVm4qRt/e6SoP\n7bm259/ygvKTvWusbLD3ipUFKxinsYjxHHMZAzKD8SKTGGtisSifMVZlBGNY\nhjOexYutkTaKRru4liyjaRTjYBTT9xmP9wmPb+cZmiuszWZrtVmcja3lZnE3\nFn/zZuANepN/V4yOX/9Na74N4XE/5Dn0u4bzt5cynN8dwut6x13bYHd+XZPF\nDVkMkcUS9cswAF7jZ/Ubwhgjf+1D3TVben3MtLN0/Jxpq/thMUa2Vp3FF2md\nOsUVaY06xRBpnTqLH/opV3atOsUJhevVKT5IFCekWKFYvJBihv7OpTFDsbgh\nzR0xayVpHJGvA8bqfeH8Eh+jGdYF9a7x7zHVc2PvHP+Oyaor6v0f1gH8+0bv\nHMUJqo1i7UG9c3zMpr0f/DvAxw76vhQfg6Ty3/pTzkvKxgS0TNLYonAuiMpy\nzUUwft6H5iDE5hxojD82rq++FsUS+f6WUmN2PqbI97P4eQk2nuLHLbPijPx4\nssbi/FiYH+sKx1t8f4wJ+/DVL+P7ZmJr1amvxhsR4eN/Rrj/hvxx/Jp5Or8f\nVym2ht6wyHk9rfendfs+KeLTCP/3j5Oy6/+NTMr+1mK/b1jkt/nxofcCfixF\n4ycaI3k1SWOHNNbvxyYVS694IasL2LvennHFyFs/pOUjy0/WR2/5zfoyrU/T\n+n7s/R7rgxffF2/5W/VEy/tW37SyQH3wVi+1PgzfXrI6rZU9VjZZeWXlmdqe\neUoi9LewXPSxmDFq+6uNWzMp2/4P2/6xtm6Mj6mPtTWsXNbapYoHDcvdWPy8\n70uKxdD7uFA/VmH1L7Vt1d71bQC1A/4Lh0XE2gJhOyNsF3h6rmLCz4b85/yx\nj6yAIwKxNpAXa/uE7SOl06GO75vQ/VHfg+9rUP+f+hnsOdBzoba46taxdrjV\nBfTM6zm351TPtubKqi2+mnWZ5azvWN1nMetCC10dSfWm31if+jWXxmLPZd1r\nNutkVj+byjrb96zTjWM9bxTrfyNZJxzGeqLVG98P6qmqQw9indPqnq+yHqp6\nqq21bHHwL+UKcfEv5grrMlus/DP0dAb9/dlcup7z87k0xv4Fd8ye9BL1ypVf\n87lvLo3F78/rHJArG5ev9Z/VDvD1aN8O0BrQsTq12gKq61tafpxL69dq86ie\nrfbLl6R2kBlLiu8fz/ulerhfM9qvG10q3n8qhTH/qrt7M51wHoDmAszNlZ0D\nYM+f6vVh7L/mSWmOlOr0sXp9OB/c9y2pjq96vur4UrmCwu+F/V6+78v3gela\nlufSNojmMCzlbwvz6Hymzzym12ymodI3THt/X6a5+zY1uJ+TnR+dH5wfKyB2\nzNj/nxw5fkVU5Bpi1z4pg46Z1f6MPa8/8f+rLJzO71q+sTxkecvau5YXLY9a\nHrY8bnnfygUrO6yMsXLIyiebC9Q9V5jTZPOGwnlNonlGNr8onFtk34/NL9Ka\n9kZzjWJlo8pFlYV2fb1J692HZd+rgddyZcvwAbnyfQ42n6kP6fi9HJW/Ko99\nOa1rfC5X/h0Qexfo9z7JdOjhPE7dmX6PMi0fYvpa+tu8sA65wn4Dtm+B7Tlg\newjYvgO3Bm6jO+hO564I/S08buzYRvsp3BxxE/k9D24k25+hTa78fg+2b4Tt\n42B7PlxdgvacuDZXds+JcN8JnaNNLt0XIku4P0NF9o1o59KvPe+N6ZhL5/Bp\nPp7m4j3Ie6q88mguzSv2HChfhPPvfJ1A9QB7dv3eD8oD9sz7d79/5+u9r70f\n/L4PQ3Nl+9D0ro/N19P73b/b1Z/p3+/jcuX3hfC+yaC/2/e+4jFH8bx2HeoP\nHZJL63Fv8jcrvyt/W1opD79IxfKx8rKEeTosq55133v+X3ouwl9D7O//F3RO\nlVcqs1Ruqbx6jLo73XJlyzB71u2Zt2ff3ieWD+4lyxt+7mq434rlo9h+K6XK\nLV9OqfxRuaNyxvaQ+V+usP+N7Ytj++TYHjq2p47trWN77Nh+O8fmCnvx2B49\nzcn277F9fGw/n0PpEOfgwEG5dB+gg4J/O9A5gPYn20to38A+EXuXsBftSXtE\n7E67ObsWsQvtTLYv0k65wh5JtldSI9ihiO2L/LvY3kvbUQNn24htitC+Ttrn\nqZ5TN2KrwJaBOhlqZ8j6fNZ3twj4Pd087QG3SWDjwEbuv//Eho7tv1UromYu\n3aMrS02nRiBPiaM9wGzPuvVpPapGFdmnMLbP4Zrue+j5fQWrk641cb9Fe5dp\n/7JY+mgPwhh/D/z91H32e5/pWfHPXLh3ofY7k/qO388wlodiec5rkGG7/0jW\n8WNlQLg/Y/2I8DNZwjIjLBMqkre9cC+6sLyJlTVheRKWD+G9D5+BLSPnzRJ7\nToqJlZmxtKnobwh/RyztYsLzxMpOlZW+LLT8p/LIlz++7ClW/nhZZUVovRLW\nd6pXwPoZfNmkfUTDPU9VdtRx91/5w/KU9j+0d7P2QNQ+iPbe116IVl+weoTV\nL7QXYmw/xHBPRKs7Nc2leyNKs1y6T6Ko/nWE4/dP1J6JVmez/RKPJ6vHnURW\nvzstl+6XeHYu3SPR9kRsmUv3RLT64eVk+w2q7am2pm9bqt2rdqP2+PPt71hb\nUfsO+rVcuubKr+OiNVzC9mO4lovWcVG/iu9TUVvS96uob0X9IFntSt+nYu2s\nWH9y2Jcc60f+KJfGZ/g+ZPUj+zVhtM9gqb0GfdvR9yOH+w+qj017EPr+Nb8P\nofp//V6E6gPWGlmxPl/1l/q4DfXlWt+sYjQUl1EtSWMyNL7nxyAVm1ErKR+b\nkRWXEYvNyFpbK7afodaKUUx3LAYwXCMmtjaoH5OryJiYxrts/EpxtH4+QDFZ\n823CuMTYtWmsMFx7yq/5dVKSrmejNW3+S4pNkTOS7LVyLFYlXL/U4lQUo6L1\nvLQ2heb/hOuShmuRhutThGtTZK1HoThFP89Q89A1F13rU/i5Q35/Rz93WXOO\ni8099Gv++TlFfl6R5hYp1iWMcwnXTliTeeixueKx+eGx9T41Tzg2Pzhcq8cM\nLsLPH/YxNuGan9qf0viYFcWcaO6T5j1pHVDNcxpHmt9k84Mmkp/fZGwOkeY4\nTSXNL5qepPstznRmOT9FzA7MSdJ5Un6ulJ8zJb8kZfeq9PtVhvtWhvsy+nlW\n4XyrcM6V9m3MUtH5WbrWefyNs106zCoinDumeWO/ut+hPS3NoiTdY9Kvv5q1\nF6fWWl0dEe7bWJlrinpr58uupSpVI+uqam1Vv3elX59/w4w1VOtwrVOtoar1\n4+vn030St/0HGjjh/oxae9X2AdA+ilqfXnsBVHQvQr8/YhMew461I8+p9Vw3\n5++vwbRZh2u3Luc9/TNJ90Cd5/KJzy/KD+GzYc+F1sPV87AySffC1L3U/qLV\neI90nySJyEfUyKd7kmqdXO1NGru/dfJl98zUPW3o7kG4R8DOLu393gDa53E/\n0h6PB+XTfQFsT4Cm+XR/R1vz3/ac8Psy+L0ZbM/H2P4Mfo+GcF9H7dGgvRm0\nL4P2YtB+CxeR7fto+2LY3o+XOpeR7ZtxBV2ZL+wNqf0hr8kX9te41rH9Iq+n\n1vmye0f6/SPlJro5X34fSe0lqf0kpR3dmeEup9Rn2pPtTWl7iNj+lJ1J+1La\nPiR+b0rbq8T2LOmWT/epNI/lC3ub2B4nT+TL7lvp958M954M95/U3pN+z0fb\n11H7Kvo9HbXPofZXtL0JbV8W25/wbXqXbI9C7bM4JF92j0K/T6H2KDTan/Dz\nfNn9Cc0oGk1j8um+hV/l070Lx9O3NIG+o4n5dG9DY3vR/OD86EymKTQ1MM2Z\n7sxwZubTfRO1d6L2T5wL8/KFfRS1l+KvNJ9+y6d7K/5Bf+YL+yxqr0Wz2FlC\nf9HSfNm9GL3l+fJ7M/r9GSvVKKjsaL/GKtz/x6wD63JPILMerU/VIxInF4h9\nXsdaj+dY11nHXUsVWttZqwIqR+j3r2Z6aI+j5Uy/ZUxjpf1C3p/fee9+5v2e\nxWfpez6fo/mMWz6w/GF7j9peopbntG+o5W3L61Yu2H5EVm5YWaR9h4yVX7cE\nVMa1daz8u4HaFGHlp5WnVrZaGWtl7jX/kJXdVo5buW7lu5X1Vv7be8DeD/ae\n0B489j6x94q9Z+zdY+8ie1fZe8z2u7F3n70H7d1o70qtF699pcM6UoN8+fpP\ng+DzqmPZe1l7+mhPcHuX2/vd3v9+HyarP1i9r0ogq54Y+5zWrV+dlF273u8N\nvyiof6verfq96t3zWR9S/du3IVSPmhNQe8Tq39aO8XvMWxvI2kXWPtJaEFpT\nwdaLUJvqqyRdR9+McUYXMcZ9R3szqC022V2Hbxv49lG4J0OxOmC4F4Ov868V\n3KuqRfj7q/0G7HhLeT7dizlMyyn8Pd+5NIulk9qpWpPja35evilCn/ma3/fr\nXFjbWGtd+HVmbS6F1pq1ORNaYypcOyq2RlSptaKy+L4E9SHE1s0qtv9HbH5L\nOCfGzxXR3BDNCxnort2vo1eRtT59f4j6Qvy8IV27rjVr3RbNrwnn0Hzm+HVc\nPL+Wi89H/jnyeW9Ukq4B84U77mdJ2Xk7fr6O5ub4Z0Xrk2lujX82dH/Vd6T0\ntD4ov16v5t2E+1qE9HfN+8qa75W1nqtfv9SvS5q1rqXWMLP+unCNL7+fhnSp\ngK4R9wb8nh3hmp9euCaovybNbbZ+Suu3tD5MrZ3WLim/plrWHGw/1zn23dix\n/BpL4Xy/+5Oyayf6PU9i64eH9zm2brjWVPJz+fzalWtaFoVi/ZzK40Z9mZbP\nVTapTPLz6/z6TMrPyr9+HSaV9379pQlJuvaS75v0/ZPqo/T8ukxam8neP+qb\n9PsZ+f7GWB+K+gHVv+b3Flrq6N+WkN+fyNdV1C/p6yeqk+h61Ec4LUnfmVYf\nsHealVefMo3fZ/prbUS/HmKxdS2z1i5V+WXPkT1Xfl3X2LrEYX97uD561vqp\nA5PS6y+Gz2b42fB44ZqdxQx059Pv9Gu1qjzWnEitfZi1dmpM1hqpMd0jws9k\nrb2o8s/vc+TXc1B55tcavisiXIvYr0cRrhcXG/uJleexcjwsB336FEsn/S18\nJ93L67ubv8PGt2zsy8bEbJzMxsxs/Ezr2xsbX7N5rDbmZnNYbTzOxu1sbNDG\nDG0M0cYuNR9V81BtLNXGXW0sVuvU+PmhGt/1c1G1FpKNC2sdm3B/ydj8HK1p\nYfORfuN49c+5snNzZubSuXITOT4+nmPr2k/qc47JG82bi/FrP2hendZ/eDdX\ndj6dn4fRP8OAEsLPv+JoPkdf52WnT674PA8/1yOc82GxEorPVly05nP4uOjH\nc/G46G6B7rl4vHToUecRR/HUiqmO8TEi4XwcPycni35Dt1w6D8XHb1tMiuYF\nGR+rbTEtHZz2TlbctmK2Naek2BwSzSMppk0g9pms+R9t3fljYnNeKjoHxq7F\n4oZszormulyVK8QWXZYrxBtdnCvEISkm/ZxcIUbJYpUsZumMEs6MOGsN6TwW\nJ2XxUifn0nh4i6uyGCvFxFuMlsVuWTyXYtj3z2B/V8yXxXg15zGOyaVxWyGd\ny+K7juB3Ds+l8WGKF1MMmR1bcfVZMfT/hOLsfSy9YuYVB28xcT7+vVQMfJZG\nGXYMZH0u/I5i9nbK0DgQnid2vsaR4yomsJgmuXSuQHj+8DzhnICGgTA2OIwB\njsX9lrIm8wLCeN1YvGsYx+/j9rPi90sJ4/uzxGLHw78Vi/MvZcMS51gTFZl7\nUEzWNWbNPwgVm4uQyxWfi5AVD1xK1jyFqhmKzWmIfbcKre2sRZWdSrS6emqV\nszJiVfBfWeH+uxyWwVJYDH/C7zAf5sJ0mAqTYRJMhAnwLXwD42EcfZ1hnDM+\n8A19y+N+RxPpe57Xzj8FptH0IqbxmqfyO/bdH3ms73iub4Nrz6Jr1PXpmn7g\nMf11zYRZ8BPMhjlMw3nwC/3KtP2N6fwH03yhs8hZTEtK0OcX8nh/8PgLeL75\nPPevvI55vLY5NDtCf5vrzIuYW0LsO1l0zp+YljOZtpPd/bP78iV8DsNgCLwN\nb8HrMDDDIHgTBsM78AF8CEN5nOE0gj4qYWTEx/QJfUqf8XrNF7x+M5rGwNjq\nhfzi88a3zgQnzCd6Lv2z6Z/PqdXTvBOaGvD/PsWZHPjxXwiPVcqUQPh7LN/P\nKKFYeRGmhf+9/rp/iJhE3wcmuvvk750vO+1+f8V7b8+APQujqqfPhz0v9vzY\nM6VnTM+fntPhjj3HQ2lI4APn/SL858JjfOgMDQyrXjYfxYyogFL5LCtfeV9U\nkNJ5FI2uXjZPxoyN+KqErHdjMfa9/we4UwWD\n      "
                    ],
                    CompressedData[
                     "\n1:eJxc3T3KrNmWndESyFIv5Mu462fueFcTCmSpCTIEsiQo9R995dW4kBxycciI\nGc7Ddgb5X//n//kf/+s//cu//Mu//ee/P/77//63//dP1//9b//h+tf/8vcv\n8/1e1e/2H57l2Z7juZ7hjH+b53mczxnPGc8Zzy96P8+P8+cnf/6Ez5Gfn/y5\n+fOLPr/o8xed33v+ovMXnavOVeeqc9W56lx1/3HV949//MOzPNtzPNczns/z\n5/l5uqpcVa4qV5UfVX5U+1HtR7Uf1f7A9ge2P7D9ge0PbFe1q8ZV46px1bhq\nXDWuGleNq8ZV46p11bpqXbWuWletq9ZV66p11boqroqr4qq4Kq6Kq+KquCqu\niqueq56rnqueq56rnqueq56rnqueq36u+rnq56qfq36u+rnq56qfq36u+rnq\nc9Xnqs9Vn6s+V32u+lz1uepz1eeqc9W56lx1rjpXnavOVeeqc5VBLoNcBrkM\nchnkMshlkMsgl0Eug1wGuQxyGeQyyFWuKleVq8pV5SrbXra9bHvZ9rLtZdvL\ntpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay7WXby7aXbS/bXra9bHvZ\n9rLtZdvLtpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay7WXby7aXbS/b\nXra9bHvZ9rLtZdvLtpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay7WXb\ny7aXbS/bXra9bHvZ9rLtZdvLtpdtL9tetr1te9v2tu1t29u2t21v2962vW17\n2/a27W3b27a3bW/b3ra9bXvb9rbtbdvbtrdtb9vetr1te9v2tu1t29uqtFVp\nq9L5p//WX2RV2qq0VWmr0lalrUpblbYqbVXaqrRVaavSVqWtSluVtiptVdqq\ntFVpq9JWpa1KW5W2Km1V2qq0VWmr0lalrUpblbYqbVXaqrRVaavSVqWtSluV\ntiptVcaqjFUZqzJWZazKWJWxKmNVxqqMVRmrMlZlrMpYlbEqY1XGqoxVGasy\nVmWsyliVsSpjVcaqjFUZqzJWZXwxji/G8cU4vhjHF+P4YhxfjOOLcXwxji/G\n8cU4vhjHF+P4YhxfjOOLcXwxji/G8cU4vhjHF+P4YhxfjOOLcXwxji/Gse1j\n28e2j20f2z62fWz72Pax7WPbx7aPbR/bPrZ9bPvY9rHtY9vHto9tH9s+tn1s\n+9j2se1j28e2j20f2z62fWz72Pax7WPbx7aPbR/bPrZ9bPvY9rHtY9vHto9t\nH9s+tn1t+9r2te1r29e2r21f2762fW372va17Wvb17avbV/bvrZ9bfva9rXt\na9vXtq9tX9u+tn1t+9r2te1r29e2r21f2762fW372va17Wvb17avbV/bvrZ9\nbfva9rXta9vXtq9tX9u+tn1t+9r2te1r29e2r21f2762fW372va17Wvb17av\nbV/bvrZ9bfva9rXta9vXtq9tX9u+tn1t+9r2te1r29e2r21f2762fW372va1\n7Wvb17avbV/bvrZ9bfva9rXta9vXtq9tX9u+tn1t+9r2te1r22PbY9tj22Pb\nY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj\n22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22Pb\nY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj\n22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22Pb\nY9tj22PbY9tj22Pbn21/tv3Z9mfbn21/tv3Z9mfbn21/tv3Z9mfbn21/tv3Z\n9mfbn21/tv3Z9mfbn21/tv3Z9mfbn21/tv3Z9mfbn21/tv3Z9mfbn21/tv3Z\n9mfbn21/tv3Z9mfbn21/tv3Z9mfbn21/tv3Zjff7p791s914duPZjWc3nt14\nduPZjWc3nt14duPZjWc3nt14duPZjWc3nt14duPZjWc3nt14duPZjZ/d+NmN\nn9342Y2f3fjZjZ/d+NmNn9342Y2f3fjZjZ/d+NmNn9342Y2f3fjZjZ/d+NmN\nn9342Y2f3fjZjZ/d+NmNn9342Y2f3fjZjZ/d+NmNn9342Y2f3fjZjZ/d+NmN\nn9342Y2f3fjZjZ/d+NmNn9342Y2fb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kf\nb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kfb8Kf\nb8Kfb8Kfb8Kfb8Kfb8Kfbf/Z9p9t/9n2n23/2fafbf/Z9p9t/9n2n23/2faf\nbf/Z9p9t/9n2n23/2fafbf/Z9p9t/9n2n23/2fafbf/Z9s+2f7b9s+2fbf9s\n+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z\n9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z\n7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn\n2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbP\ntn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2f\nbT/bfrb9bPvZ9rPtZ9vPtp9tP9t+tv1s+9n2s+1n28+2n20/2362/Wz72faz\n7Wfbz7afbT/bfrb9bPvZ9rPtZ9vPtp9tP9t+tv1s+9n2s+1n28+2n21XY31q\nrE+N9amxPjXWp8b6O11l28+2n20/2362/Wz72XYV2N/pKtt+tv1su2Tsk4x9\nkrFPMvZ3usq2C8r+TlfZdn3Z3+kq2362/Wz72faz7Wfbz7afbT/bfrb9bPvZ\n9rPtErlPIvdJ5D6J3CeR+yRyn0Tuk8h9ErlPIvdJ5D6J3CeR+yRyn0Tuk8h9\nErmTyJ1E7iRyJ5E7idxJ5E4idxK5k8idRO4kcieRO4nc3+mqclW5qlxVripX\nlavaVe2qdlW7ql3VrmpXtavaVe2qcdW4alw1rhpXjavGVeOqcdW4al21rlpX\nravWVeuqddW6al21roqr4qq4Kq6Kq+KquCquiqviqueq56rnqueq56rnqueq\n56rnqueqn6t+rvq56ueqn6t+rvq56ueqn6t+rvpc9bnqc9Xnqs9Vn6s+V32u\n+lz1uepcda46V52rzlXnqnPVuepcZdvVdqe2O7Xdqe1ObXdqu1Pbndru1Han\ntju13antTm13artT253a7tR2p7b7O11l29V2p7Y7td2p7U5td2q7U9ud2u7U\ndqe2O7Xdqe1ObXdqu1Pbndru1Hantju13antTm13artT253a7tR2p7Y7td2p\n7U5td2q7U9ud2u7Udqe2O7Xdqe1ObXdqu1Pbndru1Hantju13antTm13artT\n253a7tR2p7Y7td2p7U5td2q7U9ud2u7Udqe2O7Xdqe1ObXdqu1Pbndru1Han\ntju13antTm13artT253a7tR2p7Y7td2p7U5td2q7U9ud2u7Udqe2O7Xdqe1O\nbXdqu1Pbndru1Hantju13antTm13artT253a7tR2p7Y7td2p7U5td2q7U9ud\n2u7Udqe2O7Xdqe3+TlfZ9rbtbdvbtrdtb9vetr1te9v2tu1t29u2t21v2962\nvW172/a27W3b27a3bW/b3ra9bXvbds3jaR5P83iax9M8nubxNI+neTzN42ke\nT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P83iax9M8\nnubxNI+neTzN42keT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5\nPM3jaR5P83iax9M8nubxNI+neTzN42keT/N4msfTPJ7m8TSPp3k8zeNpHk/z\neJrH0zye5vE0j6d5PM3jaR5P83iax9M8nubxNI+neTzN42keT/N4msfTPJ7m\n8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P83iax9M8nubxNI+neTzN\n42keT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P83ia\nx9M8nubxNI+neTzN42keT/N4msfTPP6drrLtmsfTPJ7m8TSPp3k8zeNpHk/z\neJrH0zye5vE0j6d5PM3jaR5P83iax9M8nubxNI+neTzN42keT/N4msfTPJ7m\n8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P83iax9M8nubxNI+neTzN\n42keT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P83ia\nx9M8nubxNI+neTzN42keT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye5vE0\nj6d5PM3jaR5P83iax9M8nubxNI+neTzN42keT/N4msfTPJ7m8TSPp3k8zeNp\nHk/zeJrH0zye5vE0j6d5PM3jaR5P83iax9M8nubxNI+neTzN42keT/N4msfT\nPJ7m8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P83iax9M8nubxNI+n\neTzN42keT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P\n83iax9M8nubxNI+neTzN42keT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye\n5vE0j6d5PM3jaR5P83iax9M8nubxNI+neTzN42keT/N4msfTPJ7m8TSPp3k8\nzeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P83iax9M8nubxNI+neTzN42keT/N4\nmsfTPJ7m8TSPp3k8zePf6Srbrnk8zeNpHk/zeJrH0zye5vE0j6d5PM3jaR5P\n83iax9M8nubxNI+neTzN42keT/N4msfTPJ7m8TSPp3k8zeNpHk/zeJrH0zye\n5vE0j6d5/DtdZdufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2\nZ9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2XZd6utTTpZ4u9XSpp0s9XerpUk+X\nerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u\n9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d\n6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q3+kq265LPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u\n9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d\n6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9Xerp\nUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTT\npZ4u9XSpp0v9O11l23Wpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9Xerp\nUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTT\npZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmn\nSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJP\nl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSph0vtf+BS//0sz/Ycz/WM\n5/P8eX6eripXlavKVeWqclW5qlxVripXlavaVe2qdlW7ql3VrmpXtavaVe2q\ncdW4alw1rhpXjavGVeOqcdW4al21rlpXravWVeuqddW6al21roqr4qq4Kq6K\nq+KquCquiqviqueq56rnqueq56rnqueq56rnqueqn6t+rvq56ueqn6t+rvq5\n6ueqn6t+rvpc9bnqc9Xnqs9Vn6s+V32u+lz1uepcda46V52rzlXnqnPVuepc\nZdvLtpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay7WXby7aXbS/bXra9\nbHvZ9rLtZdvLtpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay7WXby7aX\nbS/bXra9bHvZ9rLtZdvLtpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay\n7WXby7aXbS/bXra9bHvZ9rLtZdvLtpdtL9tetr1se9n2su1l28u2l20v2162\nvWx72fay7WXby7aXbS/bXra9bHvZ9rLtZdvLtpdtL9tetr1te9v2tu1t29u2\nt21v2962vW172/a27W3b27a3bW/b3ra9bXvb9rbtbdvbtrdtb9vetr1te9v2\ntu1t29u2t21v2962vW172/a27W3b27a3bW/b3ra9bXvb9rbtbdvbtrdtb9ve\ntr1te9v2tu1t29u2t21v2962vW172/a27W3b27a3bW/b3ra9bXvb9rbtbdvb\ntrdtb9vetr1te9v2tu1t29u2t21v2962vW172/a27W3b27a3bW/b3ra9bXvb\n9rbtbdvbtrdtb9vetr1te9v2tu1t28e2j20f2z62fWz72Pax7WPbx7aPbR/b\nPrZ9bPvY9rHtY9vHto9tH9s+tn1s+9j2se1j28e2j20f2z62fWz72Pax7WPb\nx7aPbR/bPrZ9bPvY9rHtY9vHto9tH9s+tn1s+9j2se1j28e2j20f2z62fWz7\n2Pax7WPbx7aPbR/bPrZ9bPvY9rHtY9vHto9tH9s+tn1s+9j2se1j28e2j20f\n2z62fWz72Pax7WPbx7aPbR/bPrZ9bPvY9rHtY9vHto9tH9s+tn1s+9j2se1j\n28e2j20f2z62fW372va17Wvb17avbV/bvrZ9bfva9rXta9vXtq9tX9u+tn1t\n+9r2te1r29e2r21f2762fW372va17Wvb17avbV/bvrZ9bfva9rXta9vXtq9t\nX9u+tn1t+9r2te1r29e2r21f2762fW372va17Wvb17avbV/bvrZ9bfva9rXt\na9vXtq9tX9u+tn1t+9r2te1r29e2r21f2762fW372va17Wvb17avbV/bvrZ9\nbfva9rXta9vXtq9tX9u+tn1t+9r2te1r29e2r21f2762fW372va17WvbY9tj\n22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22Pb\nY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj\n22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22Pb\nY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj\n22PbY9tj22PbY9tj22PbY9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9uf\nbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9uf\nbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9uf\nbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9uf\nbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9ufbX+2/dn2Z9uf\nbX+2/dn2Z9ufbX+2/dn2Z9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9\nZ9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9\nZ9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9\nZ9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9\nZ9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9\nZ9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/Wfbf7b9Z9t/tv1n23+2/WfbP9v+\n2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9\ns+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7\nZ9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2\nz7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPt\nn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fb\nP9v+2fbPtn+2/Wz72faz7Wfbz7afbT/bfrb9bPvZ9rPtZ9vPtp9tP9t+tv1s\n+9n2s+1n28+2n20/2362/Wz72faz7Wfbz7afbT/bfrb9bPvZ9rPtZ9vPtp9t\nP9t+tv1s+9n2s+1n28+2n20/2362/Wz72faz7Wfbz7afbT/bfrb9bPvZ9rPt\nZ9vPtp9tP9t+tv1s+9n2s+1n28+2n20/2362/Wz72faz7Wfbz7afbT/bfrb9\nbPvZ9rPtZ9vPtp9tP9t+tv1s+9n2s+1n28+2n20/2362/Wz72faz7brU0qWW\nLrV0qaVLLV1q6VJLl1q61NKlli61dKmlSy1daulSS5dautQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4ha\nQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1\nhKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFq\nCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLU\nEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSo\nJUQtIWoJUUuI+ve1rrLtQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVE\nLSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuI\nWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQ\ntYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0h\naglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC\n1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWE\nqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJ\nUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQS\nopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKgl\nRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFL\niFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4ha\nQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1\nhKglRC0haglRS4haQtS/01W2XYhaQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4ha\nQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1\nhKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFq\nCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLU\nEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSo\nJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglR\nS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKi\nlhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVE\nLSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuI\nWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQ\ntYSoJUQtIerf6SrbLkQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKi\nlhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVE\nLSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuI\nWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQ\ntYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0h\naglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC\n1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWE\nqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJ\nUf9OV9l2IWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0h\naglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC\n1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWE\nqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJ\nUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQS\nopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKgl\nRC0h6t/pKtsuRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWE\nqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJ\nUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQS\nopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKgl\nRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFL\niFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0hagtRW4jaQtQWorYQtYWoLURt\nIWoLUVuI2kLUFqK2ELWFqC1EbSFq+z9IbV1q61Jbl9q61Nalti61damtS21d\nautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q6\n1Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1\nqa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrr\nUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTW\npbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damt\nS/132uTpKtuuS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1\nqa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrr\nUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTW\npbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damt\nS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jb\nl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2\nLrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUtt\nXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fa\nutTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61\ndamtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q\n61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWp\nrUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautS\nW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nal\nti7173SVbdelti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWp\nrUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautS\nW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nal\nti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1L\nbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX\n2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYu\ntXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21d\nautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q6\n1Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1\nqa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrr\nUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5f6d7rK\ntutSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q6\n1Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1\nqa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrr\nUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTW\npbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damt\nS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jb\nl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2\nLrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautS/01W2XZfautTW\npbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damt\nS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jb\nl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2\nLrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUtt\nXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fa\nutTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl/p3usq261Jb\nl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2\nLrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUtt\nXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fa\nutTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61\ndamtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q\n61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jblzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4udXSp\no0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhS\nR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGl\nji51dKmjSx1d6uhSR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0qaNL\nHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4udXSpo0sdXeroUkeX\n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\nUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTR\npY4udXSpo0sdXeroUkeXOrrU0aWOLnV0qf/+p6erbLsudXSpo0sdXeroUkeX\nOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4u\ndXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d\n6uhSR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq6\n1NGlji51dKmjSx1d6uhSR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0\nqaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4udXSpo0sdXero\nUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTR\npY4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damr\nS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJX\nl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWu\nLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0td\nXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6\nutTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51\ndamrS11d6upSV5e6utTVpa4udXWpq0tdXerf6SrbrktdXerqUleXurrU1aWu\nLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0td\nXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6\nutTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51\ndamrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q\n6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU\n1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWp\nq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upS\nV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWl\nri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatL\nXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleX\nurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4u\ndXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d\n6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q6\n1NWlri51damrS11d6upSV5e6utTVpf6drrLtutTVpa4udXWpq0tdXerqUleX\nurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4u\ndXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d\n6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q6\n1NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1\nqatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerq\nUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTV\npa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damr\nS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJX\nl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWu\nLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0td\nXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6\nutTVpa4udXWpq0tdXerqUv9OV9l2XerqUleXurrU1aWuLnV1qatLXV3q6lJX\nl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWu\nLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0td\nXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6\nutTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51\ndamrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q\n6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU\n1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWp\nq0tdXerqUleX+ne6yrbrUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51\ndamrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q\n6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU\n1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWp\nq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upS\nV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWl\nri51damrS11d6upS/05X2XZd6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU\n1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWp\nq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upS\nV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWl\nri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatL\nXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleX\nurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSo0uNLjW61OhS\no0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS\no0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS\no0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS\no0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS\no0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS\no0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhS\n/05X2XZdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp0aVGlxpdanSp\n0aVGlxpd6t/pKtuuS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrUv9NVtl2XGl1qdKnRpUaXGl1qdKnRpUaXGl1q\ndKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q\ndKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q\ndKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q\ndKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q\ndKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q\ndKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1q\ndKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKnRpUaXGl1qdKl/p6tsuy41\nutToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41\nutToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41\nutToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41\nutToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41\nutToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41\nutToUqNLjS41utToUqNLjS41utToUqNLjS7173SVbdelRpcaXWp0qdGlRpca\nXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpca\nXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpca\nXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpca\nXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpca\nXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpca\nXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpf6dKlPl/p0qU+X\n+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X\n+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X\n+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X\n+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X\n+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X\n+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X\n+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpf/+4yrbrUp8u9elS\nny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elS\nny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elS\nny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elS\nny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elS\nny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elS\nny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elSny716VKfLvXpUp8u9elS\nny716VKfLvXpUp8u9f9XbYdGEEUxCACrOiD9N3bvyxXJDA6F2+hSo0uNLjW6\n1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6\n1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6\n1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6\n1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6\n1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6\n1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6\n1OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW6\n1Bdt5bbrUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNL\njS41utToUqNLjS71RVu57brU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU\n6FKjS40uNbrU6FKjS40uNbrU6FKjS40uNbrU6FKjS33RVm67LjW61OhSo0uN\nLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uN\nLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uN\nLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uN\nLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uN\nLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uNLjW61OhSo0uN\nLjW61OhSo0uNLjW61OhSo0uNLvVFW7ntutToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqtLrS61utTqUqtLrS61utTq\nUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTq\nUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTq\nUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTq\nUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTq\nUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTq\nUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS61utTqUqtLrS71RVu5\n7brU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60u\ntbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS60utbrU6lKrS33R\nVm67LrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpSq0utLrW61OpS\nq0utLrW61OpSvzPaym3XpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX+qKt3HZdanWp1aVWl1pdanWp\n1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp\n1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp\n1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp\n1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp\n1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp\n1aVWl1pdanWp1aVWl1pd6ou2ctt1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpda\nXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpda\nXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpda\nXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpda\nXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpda\nXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpda\nXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlTpc6Xep0qdOlTpc6Xep0qdOlTpc6\nXep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6\nXep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6\nXep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6\nXep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6\nXep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6\nXep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qS/aym3X\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnT\npU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6XOl3qdKnTpU6X+qKt3HZd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06W+aCu3XZc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qd8z2spt16VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd6nSp06VOlzpd\n6nSp06VOlzpd6nSpL9rKbdelTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOl\nTpc6Xep0qdOlTpc6Xep0qdOlTpd6utTTpZ4u9XSpp0s9XerpUk+XerrU06We\nLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9\nXerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6\nutTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71\ndKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q\n6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU\n06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSp\np0s9XerpUk+X+qKt3HZd6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06We\nLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9\nXerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6\nutTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71\ndKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q\n6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU\n06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSp\np0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulS\nT5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOl\nni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadL\nPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+X\nerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST2p6UtOTmp7U\n9KSmJzU9qelJTU9qelLTk5qe1PSkpic1PanpSU1PanpS05OantT0pKYnNT2p\n6UlNT2p6UtOTmp7U9KSmJzU9qelJTU9qelLTk5qe1PRFWznXUtOTmp7U9KSm\nJzU9qelJTU9qelLTk5qe1PSkpic1PanpSU1Pavri7w9V5qJR\n      "
                    ],
                    1,
                    {"Continuous", 1},
                    {"Discrete", 1},
                    1,
                    {
                     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1},
                     ValueDimensions -> 1
                    }
                   },
                   False,
                   13.2
                  ],
                  Editable -> False,
                  SelectWithContents -> True,
                  Selectable -> False
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[8]=",
            CellID -> 223363007
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"DateListPlot", "[", "altitude", "]"}]],
            "Input",
            CellLabel -> "In[9]:=",
            CellID -> 949293
           ],
           Cell[
            BoxData[
             GraphicsBox[
              {
               { },
               {
                { },
                { },
                {
                 RGBColor[0.368417, 0.506779, 0.709798],
                 PointSize[NCache[Rational[1, 360], 0.002777777777777778]],
                 AbsoluteThickness[1.6],
                 LineBox[
                  CompressedData[
                   "\n1:eJxc3X+8OEVd7/GJjBCJFJHQCFdCMkJSQkMlGr3ENS6hESIh0kSIiESIiISE\nEyIRIREiIRJOpERIiFwkJKSJEImIjIjL5RqNXi8hEREREaLdzvvzeOzrMe+/\n4Pk433Peu7O7s7uz8+NFh//SAW/bJKV03C4pbfw3pXrd937l4dfqfw/5ZE6p\n4Ysv+y938zCnP5q9mPP1q9uGq3mY0+dmL+ZsbuZhTjfY75vHH9u/v3H1Jco3\nZ3MxV3Mzd/Mwp89beZqzuZiruZm7eZjTTZZvzuaCL1K+uZk7vlD55vQnsxdz\nNhdz9X/fV1+gf2+u5mbu5mFOfzp7MWd8vvLN1dzMHZ+nfHO6efaCz1W+uZir\nuZm7eZjTn81ezNlczNXczN08zOkWyzdnfI7yzdXczN088NnK/8L888WczcVc\nzc3czcOcbrV8czYXczU3c7/Vyt+cvmjlj3U+ZnMxVxznP47rD0d9YU63zfXL\nYs7mgqO+NDcc9TWO+4U5/fnqS5VvzuaCP6F8czN38zCn22cv5mwu5mpu5o4v\nU745/cXsxZzNxVzNzdzNw5zuWH258s3ZXMzV3MzdPPAVyv/L2Ys5m4u54iuV\nb+7mYU53zl7M2VzutHxzu9P2/04rf3P6q/n6WXDcf3HUP/hM5ePTlY9PVj4+\nUfn4aOV/afURyseHKR8fpHx8oPLxG5Vv7uZhTn89ezFnczFXfIDyzd08zOmu\n2Ys5m4u5mttdc/n0u+byG+b0N/O/X/5m/nnGByvfXPEhyjd3fKjy/2Y+vunu\n2QsuyseHKx/rfKn4SOXjo5SPj1W+Of3t6hOUj09SPj5V+fg05eM4//FZysdx\n/8e6X6Z7Zi847n843ldwvI/hqP/NHUf9h6P++19W/+CrlY+vUT6+Tvnmhq9X\nPr5R+fgm5d87ezFn3JWPb1a+uZk7vkX55vS/Zy/mjG9Vvrni25Rv7uaBb1f+\nfbMXczYXfIf+/t/Z3zen+2cv5mwu5mpu5n7/XB7DnP5+9mLO5mKu5mbuf2/7\nb07D9t+czWXM5V3NzdzNw5y+YsfXnM3FXM3N3M3DnL5q+eaMdT4Vc8V3Kt/c\nzQN/Sfn/d/aC71K+uZgrvkf55o7vVT6+T/lfWz2Ub874q8rHX1M+fkD55m4e\n+EHl/7/ZC35I+eZiruaGH1a+edi/Tw/MXszZXB6Y96c+MJdPM3d8v/IfsPL/\nh/l4Lfhu5ZuLuWKdD83czcPy0oPz+bE8OG9ffnDe/oJ1flSs86GZ+4Nz+Y0H\n5+ORvj57MWdzwY8o39zM3TzM6aHZizmbi7mam7mbhzn94+pHlW/O+DHl48eV\nj59UPn5K+fhp5eNvKf/h2Qve5Pc38s0Fb7rhijffcMNbbLjjZ2944K02nP5p\n9dYbXvALlI+3Uz5elI93UD7eWfl4F+Xj3ZT/yOo9lI9frXy8l/JxVj7eW/n4\n9crH+yof76/8f179RuXjA5SPD1Q+Plj5+BDl48OUj4vy8eHKf3T1kcrHRysf\nH6N8fJzy8fHKxycqH5+sfHP6l9WnKt+ccVU+Pk35+Azl4zOVj89SPj5b+Y+t\nPkf5+Dzl4wuUjy9UPr5I+eaOL1E+vlT5/7r6MuWbM75c+fgK5eMrlY+vUj6+\nWvn4GuU/vvpa5ePrlI9vUD6+Ufn4JuXjm5WPb1E+vlX5/7b6NuXjO5SPv6R8\nfJfy8d3KN3d8r/LN6Qnud8rH9ysfD+Xjryrf3PDXlI8fVL45/Tv3R+Wbs7ng\nh5WPH1G+ueNHlY8fU/6T3E+Uj59QPn5S+fgp5Zsbflr55oG/pfz/mL2YM06X\nb+SbK95kw83c8TM2PMzpKe5nG17MGW+mfHPFmyvf3M3DnL4xezFnczFXvIXy\nzd08zOnp2Ys54y2Vb67mZu7mYU7fnL2Ys7l8c96+am7m/k0rf3P61nw8F3PG\nOh+KuWKdTw3H+Yd1vg4c5/9/2vlvzuZirub2n3Net58P8389Vk3X52LO5oIj\n39zM3Tywti992+zFnM3FXM3N3LGOx8Bx/W8yezFnHMcfx/WP4/rHcf7jZysf\nb6X8b1+9tfLxtsrHL1A+3l755oZ3UD7eUfl4J+U/Y/XOyse7KB/vqnxzxbsp\nH++ufPxK5eNXK/87Vu+pfLyX8s0Fv075eG/lm7t5mNOmq7PyzXlTy9903v6K\n91D+prb/m87lMzadyzt95+pF+Xg75eNtlI91/lQc9a+546j/cdR/m81ezNlc\nNpv/fsU6v9tm8/Z1rPN5YJ3P6Znz+bs8cy6PjHX+lmfO5VexzteGdX5288Av\nU/7m8/FZzNlczNXcNp//ft983r6xuR3/Z61+ifKxrt/8rLl8Ctb5UJ81H5+G\nVV91HPcfrOe1tMVqPQ8uWM+XGT+g+h/rebhiPS83rOfrju9R/Y/vVP53rb5d\n+VjvAxnrfaGYK9b7RcPx/mEe5rTl7MWczcVczc1/f6vVXb9vruZm7uaxlW3/\nc237zdlczPW5Vn7mbh7mtPXsZWvLNxdzNbetbf+x3j+HOT1vdby/Yr3fZnPB\n8f6M9X7dzB3rfXyY0zazF3M2l23mv1+3mbenYb3Pd/PAer9P3zN7wXrfz+by\nPXN5VHMz9++Zy3eY07ZW/jjaD/D1yt92Pn7V3LDaF7p5mNPzZy/mjNU+UXBc\nfzjOPxznv3ngaL94wVxfLVj1W8ZqryhY7RMVq75sWO0RHat+HVjtDel7V6u9\nYcGqr7O5YLUnVBztB1jtBR3r/jDMabvV0X5gzuZirua23fz3u3lsN29v+r7Z\nC477l7mYq7mZu3lYXtre8s3ZXMzV3La3fPMwpxfOx3MxZ3MxV3Mz9xda/gtt\n/xfbf6zzJ5uLuZqbuS92/M3pRbMXczYXczW3F1m+/XyY0w6Wb844zn+s9rVq\nbljtbd08sN7H0/evjvdnrPfdjOP91VxxPD/iaD/B0X6D4/11x9Xx/orj/dVc\nsN5vKo73V6zn/471PDyw3gfSi1fH8zPW83XGev4uON5fsZ7XG9bzfDcPrPe7\ntNNqvd8u5oz1fljMFet9spk71vvxMKcfmL3geH82F6z324r1Pt3MHcf7szm9\nZPXrlW/OeF/l4/2Vj9+ofHyQ8vHByseHKv8HVxfl48OVj49UPj5K+fgY5eNj\nlY+PVz4+Qfk7rz5R+fgk5eOTlY9PUT4+Vfm4Kh+frnx8hvJ/aPWZysdnKR+f\no3x8rvLNDZ+nfPPA5yt/l9mLOeMLlG+u+CLlmzu+RPm4Kf+lqy9VPr5M+fhy\n5eMrlY+vUj6+Wvn4GuWb066rr1O+OePrlY9vUD6+Ufnmjm9SPu7K/+HVNyvf\nnPGtyjdXfLvyzR3fqXxzetnqLykf36V8fLfy8T3Kx/cq39zNA9+n/JfPXvCX\nlW8u+H7lmxseyjcP/FXl77b6a8o3Z3MxV/yA8s3dPMzpR2Yv5mwu5mpu5v4j\n8/aOH7H9330u38Wcd5+PX9ndjr+5YZ0v3TzM6RWzl1fMfy9jnR/lFXb8XzHv\nX3uF7T9+SPn4YeW/cvUjysePKh8/pnxzxY8r39zxE8rHTyr/R1c/pXz8tPLx\nt5SP0x9s5ONnbLjhzTfc8RYbHnjLDac9Zi/mjJ+94WKu5ma/381jj3n70qtm\nL3gz5b9q3r+CN1H+q+byaq+ay7e/aj4e41Xz8UuvtuNvzuZiruZm7uaBdX6l\n18znx4J1PuTX2P6/Zi6virdW+ePtVP54Ufnjl6j891y9i8of76byx7srH++h\nfLyn8vFeysevUz7eR/k/tnpf5eP9lI/3Vz4+QPn4QOXjg5VvHvhQ5e81e8FF\n+fgI5eMjlY+PVj4+RvnmgY9V/o+vPk75+Hjlmws+Qfn4ROWbOz5J+eaUV5+i\nfFyVj09TPj5D+fhM5eNzlI/PVT4+X/mvXX2h8vHFyseXKB835eNLlY8/oXzz\nwJcp/3WzF3yF8vGVysdXKR9frXx8jfLx9crHNyj/v62+Sfn4ZuXjW5SPb1M+\nvl35+A7l4zuVj+9S/t7cf5WP71E+vk/55orvVz7+qvLx15SPH1T+T3A/Vj5+\nVPn4ceXjJ5WPv6V8nK7YyMebbnjgzTac9qE+3fCCt9xwNhe89YYr3mbDDW+r\nfLyd8vH2yv/vq3dQPt5R+fglysc7Kx/vony8q/Lxy5SPX6n8189e8B7Kx3sq\nH++lfPw65eO9lY/3UT5+vfJ/kvpf+Xg/5eP9lW+u+I3KxwcoHx+ofHyQ8vfl\n/qB8fIjyzQUfqnxzw4cpHxflm9P/WH248vERyjcXfKTyzQ0fpXx8tPLxMcrf\nj/uR8s0ZH6d8fILy8YnKxycrH5+ifHyq8n+K+43y8WnKx2cqH5+lfHy28vF5\nysfnKx9fqPz9V1+kfHyJ8vEnlI8vUz6+Qvn4SuXjq5SPr1b+G7hfKB9fr3xz\nwTcoH9+ofHyT8nFXvjm9kfuL8s0Z36p8fJvy8e3Kx3coH9+pfPwl5f809yPl\n47uVj+9VvrniLysf36988zCnA7hfKR8/oHz8oPLxw8rHjygfP6p8/Ljy8RPK\n/5nVTykff0v5OH1qIx8/Y8PV3PBmG+548w0PvOWG04Grt9rwgrfZcMYvUD7e\nTvl4UT7eQfl4R+XjnZX/Ju5fyscvUz7eTfl4d+XjVyofv1r5eC/l46z8g7h/\nKR/vrXz8euXj/ZRvbnh/5eM3Kh8foPw3cz9SPj5U+eaCD1M+Lso3d3y48vER\nyj+Y+4fy8VHKx0crHx+jfHys8vFxysfHKx+foPyfXX2S8vHJysenKB+fqnxz\nw6cpH5+ufHyG8g/h/qJ8c8ZnK99c8TnKN3fzwOcq/y2zF3M2F3M1t7dY/lvm\n7R3mdCj3U+Wb86FzeZRD5/Krh87l2w618jcPXJX/1tnLW+fjmc3FXLHOj2bu\n5mG/nw6bvZjzYfP2lcPm/a2HzeXVDpvLt+PzlY8vVP7Prb5E+fhS5ePLlI+v\nUD6+Uvn4GuXja5WPr1d+WX2j8s0Z36x8fIvy8W3Kx7crH9+hfHyX8n9+9oLv\nUb654HuVj+9TvrnjLyvfnA5fPZRvzvirysdfUz5+QPn4QeWbB35I+b+w+mHl\n40eUjx9VPn5M+fhx5eMnlI+fVD5+SvlHzF7M2VzM1dzM/QjLP2LevvS2efsX\nc37bvL/lbXP51LfN5dfeZuX/tvl4jbfZ8T9yPp8WrPMxY52/Bev8rljXQ8O6\nXjruyjent89ezNlc3j7//fp2y3/7vH0d3618rOsjHWXnP9b5nrHO73LUXL7V\n3LDO724e5vSO2Ys5m8s7LP8d8/Y1c3+HHf93zPuXjp69HD2XRzYXfL/ysc6n\nZu7mYU7vnL28c/772VzM9Z3z9jVzf+e8f+Odc3mkY+byWo6x8se63oq5YtVP\nDet67VjX88CqD9IvWv2D05Ub+eaCN9lwNTe86YY73mzDA2++4XTs6i02vJgz\nfrby8VbKx1srH2+rfPwC5ePtlf9Lqxfl452Uj3dWvrniXZSPd1W+eeCXKf+4\n2Ys5492Ub67mhndXvnmY07tmL+ZsLuZqbu+at6ebx7vm8kjHz+W3HG/lj7dT\n/vHz8a1Y50fDOr86fobysc7X9O7ZizmbC9b1UM3N3M3DnE6YvZgz/paufxz3\nf6zrueF4/sBx/WPVD+k9c/2x4Hj+wbq/F3PFqq+aueN4/jKnE2cv5mwu5mpu\n5m4e5vReyzfn9877U95r+29u5m4e753LO500H78FP638k+z446h/serbhlXf\ndqzrYWDVr+mXrf7FW+r8w6pvC95G+Vj1azN3rOt34Kh/T169g/LxjsrHL1E+\njvrX3LDqk46j/sWqj9L7Vr9S+XgP5eM9lY/3Uj5+nfLx3srHr1c+3k/5p8xe\n8P7KNxdztd9v5o73Vb45/cq8fYs5432Ub67m9iu2/+ZhTqfO5beYs7mYq7mZ\n+6mWf+q8ven9tv/vn8snv38uz4LfqHx8oPLNHR+kfHOqqw9RvjnjQ5WPD1O+\nueHDlY+PUL45/erqI5Vvzvgo5ZuruZk7Plr55nTa7MWczeU0yz9t3t522rx/\n3TxOm8snfWB1Ub45m8sHrPzN7QPz8ermYU6nz17M2VzM1dzM3TzM6YOWb84f\nnPevmOsH5/Jp5v7BubyHOZ0xezFnczljPp7V3LDOh24e5vRrdv6bs7ngOP+w\nzs9m7vgY5eNjlX/m6uOUb874eOWbKz5R+eaOT1K+Of366pOVb874FOXjU5WP\nq/Lx6crHZyofn638s1afp3x8vvLxRcrHlygfN+XjS5WPL1M+vlz5vzF7wVco\n31zM1dzMHV+pfHM6e/ZizuaCr1K+ueFrlG8e+Drlf2j1jcrHXfn4NuXjO5SP\n71I+vlf5+D7l46H8c1Z/Vfn4AeWbC35Q+fgh5eOHlY8fUb45/ebqR5WPH1e+\nueAnlI+fVD5+Svn4aeXjbyn/3NWb/OFGvjnjTTdc8GYbrniLDTe85YY7fvaG\nB95qw+m3Zi94W+XjFygfb698vCgf76B8/BLl452Vf97qXZWPd1M+3l35+JXK\nNze8h/LNw5w+PHvBr1a+uZir/X4zd/Mwp/Mt35zN5XzLx3sq39zxXso3p4+s\nzso3Z/w65Zsr3lv55o73UT5+vfIvWL2v8s35gvnfF/t5xfspH++vfPxG5dvP\n02/PXn57/vfZXMzV3MzdPMzpwtmLOV84b18xV3O7cC6Pbh7m9NHZy0et/M3F\nXM3N3D86H79hThfNXszZXC6yfHMzd/Mwp4/Z+fexuTyyuZiruX1sPh7dPPAB\nyr949YHKxwcpHx+sfHyI8vGhyseHKd888BHK/53ZCz5S+fgo5ZuruZm7eZjT\nJbOXS+btyfhw5V8y72+9ZC6Pdslcnv2SubwHjuvv43b9m7O5mKu5fXz++/3j\nlv/x+fimNh/fpc3HK+Oi/DaXR23z8Wr4aOXj45SPj1f+764+UfnmbC74JOWb\nm/37/rtz3vjdefvSpfP2L5fO+5cvncujmCuO89/czcOcfm/2Ys7mYq7m9nvz\n9nX7+TCnT9jxxzpfMo7zD+t+WrHuxw3H/R/reWHgeP745OzFnM3FXD8557VP\nztvTPzlv78BR/15m1x/W9Zsvm8unXGblj3W+NKz6o2OdbwMfo/zfX32s8rGu\nl4xPUD6O89/c8CnKNw98qvIvX12Vj09TPj5d+fgM5eMzlY/PUj4+W/n4HOX/\nwewFn6t8c8HnKR+fr3x8gfLxxcrHlyj/itWXKh9/Qvn4CuXjq5WPr1E+vl75\n+Ebl4678T62+Vfn4NuXjO5SP71Q+vlv5+B7l4/uUj+9X/pWrh/LxA8rHDyof\nP6x8/Kjy8WPKx48rHz+h/D9c/aTyzRk/pXz8tPLxt5SPN7lqIx8/Y8MDb7rh\ndNXqzTe84GdvOONtNlzwthuuePsNN3PHOygf76T8T69+ifLxzso3F7yL8vGu\nyscvUz7eXfn4lcq/mvpZ+eaMs/Lx3so3N7yv8vF+yscHKP8z1LfKxwcrHx+q\nfFyUjw9XPj5C+fho5ePjlH8N9avy8cnKx6coH5+mfHy68vGZysdnKx+fo/z/\nSX2lfHyh8vHFyseXKh9fpnx8ufLxFcrHVyn/Wuoz5eNrlI+vVz6+Qfn4RuXj\nrnx8i/Lxbcr/7OrblY/vVD7+kvLxXcrHdysf36t8fL/y8VD+dau/pnxzxg8q\nHz+sfPyI8vHjysdPKB8/qfw/on5TPk6f3sjHm2y44GdsuOJNN9zMHW+24YE3\n33C6fvUWG17wlsrHz1Y+3kr5eGvl422Ubx74Bcr/3OzFnPH2yseL8s0N76h8\n88A7Kf8G6l/l452Vj3dRPt5V+fhlyjd3vJvy8e7K/+PZC36l8vEeysevVj7e\nU/k4Kx+/Tvl4b+XfuHof5ePXKx/vq3y8n/LNDR+gfHyg8vHByv/86kOUj4vy\n8RHKx0cqHx+lfHy08vGxysfHK/8m6n/l4xOVj09SPj5Z+eaGT1U+Pk355vQn\n3D+Uj89QPj5T+fhs5eNzlY/PUz4+X/n4AuX31RcpH1+ifNyUjy9VPr5c+fhK\n5eNrlI+vVf6frr5O+fgG5eMblY+78vHNyse3KR/frnx8h/Jv5v6ifHyX8vF9\nysf3Kx8P5eOvKh8/oHz8kPL/jPuJ8vGjysdPKB8/pXz8tPLxt5SPv+3qjXz8\n7RtOt3A/2fCCv3PDGW+24YKfteGKt9hww1tuuONnKx9vpfwvcP9QPn6e8vG2\nysffq3y8nfLxC5WPF+XjHZR/6+rvVz7eSfn4B5WPd1Y+3kX5+KXKx7sqH79c\n+V/k/qB8vLvy8SuUj/dQPn6V8vGrlY9/TPl4L+Xfxv1C+fh1ysd7Kx//hPLx\nPsrHP6l8vK/y8X7K//PVb1A+fqPy8U8rHx+gfHyg8vGblI/frHx8sPJvX/2z\nyseHKB+/Rfn4MOWbGy7Kxz+vfHy48v9i9S8o35zx25SP3658c8NHKR+/Q/n4\nncq/Y/Uxyse/qHz8S8o3V3yc8vG7lI/frXx8gvL/cvV7lI9PVD5+r/LxLyvf\n3PDJysenKB//ivLv5H6tfPx+5eOqfHya8s0Nf0D5+HTl4zOU/1erf035+Ezl\n419XPj5L+fg3lI/PVj4+R/n4XOV/afVvKR+fp3z8YeXj85WPP6J8fIHy8YXK\nxx9V/l+vvkj5+GPKxxcrH1+ifNyUjy9VPv495eNPKv+u2Qu+XPn4CuXjTykf\nX6l8fJXy8aeVjz+j/L9ZfY3y8bXKx9cpH1+vfHyD8s0df175+Cbl3726Kx//\nqfLxLcrHtyoff1H5+Dblmwe+Xfl/O3vBf6F8fIfyzRX/pfLxncrHf6V8/NfK\nv2f2gu9WPr5H+fhe5eP7lI//j/Lx3ykf36/8/7V6KB9/Rfn4a8rH/6B8/KDy\n8UPKx/+ofPyw8u9d/YjyzRk/qnz8L8rHjysf/5vy8RPKx/+h/P+9+inl46eV\nj7+pfPwt5eNv+8xGPt5kwx1/+4aHOd23+hkbXvB3bDjjzTZc8LM2XPEWysdb\nKh9/t/Lxc5T/f1Y/V/nmjLdWPn6e8vG2ysfPVz7+XuXj71P+l1dvr3z8QuWb\nC16Uj79f+XhH5eMXKx//gPL/bvUPKh/vrHy8i/LxrsrHP6x8c8cvUz5+ufLv\nX/0jysevUD5+pfLxjyof76F8/Crl49coH++p/L9f/WPKx3spH/+48nFWPn6d\n8s0d7618/BPKH6v3Ub4549crH++rfHPD+ykf/5Ty8RuU/5XVBygf/4zy8ZuU\nb674zcrHBysfH6J8fKjyvzp7wYcpH/+c8nFRPj5c+eaOj1A+fpvy/+/qtysf\nH6V8/A7l46OVj9+pfHys8vEvKR+/S/lfW3288vG7lY/fo3xzxe9VPj5J+fhk\n5eNTlP//Zi/4VOXj9ysf/6ry8WnKxx9QPj5d+fiDyn9g9a8pH5+pfPzrysdn\nKx9/SPn4HOXj31Q+/i3l/8Pq85Rvzvh85eOPKB9foHx8ofLNA1+k/AdnL/h3\nlG8u5oovUb65278f5vT11RcrH39M+V+ft6/gjyr/6/P+Nfzbyv/6XD7j63P5\npYdWf1j5D1n5PzQfz/KQHX+s86NhnW8d63wd+H3K/8fVJyof63rN+BjlY9Uf\nFb9F+fgg5eOof/FPKv/h1a9VPo77D9b9rGDdLyvW/bXhnZSP9Xww8HbK/6fV\nep5Z8FbKx9+lfPxM5WM9vzWs58GO9Xw58GN6/nxk9T/r+RPreTvjv9fzJ47n\nf6z3hYbv0vMv1vvMwHofSv+8+gvKx3rfyvhPlI8/p3ys98WG/1D5WO+vA1+m\n/EdXf1z5+HeUj/W+XvBvKx+rfaBhtR90HO0PWO0b6V9Wqz1kwWpPyVjtMQW/\nT/lY7UUNq72pY7VnDRztX4+tjvY3rPa7jNU+WHC0P2K1Xzas9tCO1Z468GuU\n/69cT8rHP6x8/APKx2q/rngb5ePnKB+rPX9gfS9Ij3M96PsD/rK+P+C79f0B\n36LvD1jfbxq+St8fsL4nDXyh8v9t9VnKx/p+lnF8f8PHKB/re1/D+l7Ysb4n\nDqzvkemJ1fsrH+t7Z8b6PlqwvqdWvJfysb7PdqzvtwPr+27699Xx/Rfre3HG\n+p5ccHx/xvpe3cwdx/dvvIPyn6Q+Vj7W9/yM9b2/YPUvqFj9ERpW/4aO1R9i\nYPWfSP/B+ab+D/ge9b/At6r/BVZ/k4rVn6Xhi5SPz1M+rsp/avXxysfqX5Sx\n+iMVvL/y8euUj/dSPt5D+Tj6X32D46t8vKPysfqTFaz+aBWrv1rD6s/W8WbK\nx+ofl56mPlD/Oxz977D68xWs/n4VP6T+d1j9CTuO/odY/RfTNzm+ysc3KB9f\nq3x8pfKx+m82rP6eHas/6MDqL5q+tVr9Sxes/qwZq79rweovW7H61zYc/c9x\n9D/HMf7gPznflI+j/zdWf/2C1T+74hh/gjVepWONhxo4xl+l71vrK+VjjWfL\nOMa/YY2Pq/hlyscaT9exxtsNc/q21Tsp35zxjsrHGt9XcYz/wxof2M0Db6f8\nTVZrfOGCY/wh3kb5eGvlY41fbOaOY/wj1vjI9O2zF7y58s0FazxmxRrf2bDG\ng3Yc40+xxrOmZ6y+X+NPscbLZqzxtQXfrvGn+FblY43n7fh65WONF07fsVrj\npRes8dUZa3x2wecoH2s8eMMav95xjL/HByh/09Wab2PBmo8lY83fUrDmj6k4\n5v/Cmg+qY81nM8zpO1fH/DfmbC445h/Dmg+nYc13079z3t6BNb9N2my15rdZ\nsOavyVjzgRUc829hzVfTsOar6eaBY/6VZ67WfCjLM+fjkXHMf/LM+fhVrPlM\nGj5Y+Tjmn8CaPyJtvjrm38CazyHjmH8Bx/wLOOZfwJpfoZsH1vwJ6VmrNV/C\nYs5Y8yEUrPkQKo75D8wdaz6Egc9Q/hazF3yW8rHmSyj4XOVjXZ8Na/6Eji9Q\nPr5Q+d+1+mLl47j+seqHgj+hfKz5FRrWfAodaz6EgaP+2XK15idYzBlfq3xz\nxZrPoJk7vkH5WPVh+u7554s5Y9WnxVzxTco3d/PAml8hPXv1zco3Z3yL8s3V\n3MzdPMzpObMXc37OvD3lOfP+1OfM5dWeM5dvf858vAfWfB1pq/n8XHCc//g0\n5eOY/wTH/DM46h+s+ZoGjvm3njvXhwvOysevVj5WfVux7lfNft7t58N+nrae\nvZjz1vP2FBzzX2HV123ref/61rb/OOafet5cXguO+adwzD/0vLm8K9b8PA3H\n/Es47v9Y9XfaZvaCY/4nrPlzirli1e/N3LGeRwaO+v97Zi846n8c9T+O+h/H\n8w+O+h/r/B1Y8+GkbefzfTFnHPW/uZqbuZuHOT1/9vJ8yzcXrPtVfb7tP9b8\nQv35c3mO58/HI71gPl4L1vmQccy/hWP+KxzPH1jne8cx/x7W81D63vn6XLCe\nxzLW81vBen6sWPMtNhzzb2PN7ztwzD+8HfcDzf+INV98xhdp/kes+fwr1voN\nDWu9iI5j/Ql8sPK/b/WBysdaPyNjrcdRsNbzqFjrgTSs9UI63kn5WOuZpO1X\nP1v5ONZfwU9q/Rcc679grRfTsNav6Vjr5wwc6++8kPuV1n8xZ3yd8s3V3PC1\nyjcP838V+OTFnM3FXM1tmbenm4c5vWj28iLbf6z1jgrWekcVa72j9qK5fLt5\nYK1vlHZYfbPyd5h/nneYj18xV6z1kJq5m4c5ff/sxZzNxVzNDWs9pm4eWOsz\npR1nL1jrNWWs9ZqKuZqbuWOt7zTM6cWzF3M2lxdb/ovn7W0vnvenm8eL5/JI\nO81edrLy38mOv7maG9b507HOr2FOPzCfvwuO8x/H9Ye1vljFlysfa32zjs9Q\nPtb6bOklq7W+3IK1Hl7GWt+vYK0XWLHWF2xY6xt2rPURB95C+T/I/Uv5eBPl\nY63nWLDWe6z4aa3/iJ/S+pNY60UO/ITWn9x59mLO5mKu5rbznNd3nrdnmNMP\nzfuz/NC8vxlr/cqCtV5lNTes9So7frbKH2+l8t9l9oK1vmU2F3M1N/t7fRfL\n32XevvTS2QvW+ZHNxVzNzdzNw/LSrqu1XueCtV5nxrH+Jt5d+VjrZTYc619i\nrXc5sNarTD+8WutVLljrU2as9SQL1vqRFWv9yIZ1PXes9SEH1nqQ6WWrtR7k\ngmP9RxzrP2Kt91jxScrHsf4j1nqPA2u9x/Ty1acrH6u+yjjWf8Ra77GaGz5H\n+fhc5WOtD5l2m71grReZ8QXKN1es+raZO9b6kgNfrPwfmb3gWH/SXMzV3HBT\nvnmY0+6zF3PGlyofaz3MirUeZjN3rPUxhzm9YvZizlj3u4K1nmbFWj+zmTuO\n518cz5+vnL3guP/ieP40V3PDej7tOJ4/cTxv/ujsjPX8UHA87+FYb9PccTzv\nYD0fpT1W6/lpwfG8he9Rvrlirb/ZzB3fp3wc622+avVQPtb6m9lczBV/Tfnm\njvU+Nszp1bMXc8ax3qe5mpu544eUb06vWa33xwVr/dCMtX5owY8p39zMHcd6\no+a052qtP7qYs7mYK9b7cDN38zCnH5u9mLO5mCvWeqnN3M3DnPZa/bTyzRnr\n/b9grb9azQ1vovYG88Cbqr3hx1drPdYFb6H2Dqz2iIK1PmvFWp+14W2Vj9W+\nMbDWa0159fbKx1q/NZsL1nqu1dyw1nft5mFOr529mPNr579fXjtvb33tvL/t\ntXP5dKz1bQfWerjpdfPxXbDOj4zj+sO6PiuO6x+rfupY9dvAWp84/be5flyw\n6tdsLljtSdXczN08zGnv2Ys5mwuO9Zb3nre/7T3vX9/b9n/vuXzST8z19WLO\nWPVx+Ym5vCtWfdrM3Tyw6tu0j9W/+8zHN5uLuWKdH83cserjYU7/ffaCVT9n\nHPUvVv1Usc7fhlUfdRz1D4765/Xz9bBg1UcZ6/op5oqj/sGqbzrW9TpwXP8/\nadc/fonyzQVrPeiKo70Xa/3njrX+88B7Kn/f1bHeM9b6zhnvq3ys9uiKtZ5z\nw1q/uZsHPkT5/2O11nNezBlrfeeCtZ5zxWpPb+aOtb7zwFrfOe23Wu3zC9Z6\nztlcsNZ3rljrOzdzNw9z+qnZizljrRddzNXczN08zGn/2QvWetTZXPCJysfx\nvcPcsdavHjjWG37D6ljvGGs94Yy1vnLBWl+44ljvGZ+nfHyB8nGsN/zG1Rcr\n35xxUz7WesTV3PAnlI+1XvHAWq84/fRqrVe84KuUj7V+ccH6HlWx1i9uWOsV\ndxzrreJblX/Aaq1XvGCtl5pxrPeKv6R8rPVUG9b6xB1rfdWB43vbz3B/VD6O\n9Vax1ucsWOu/VRzrvWGt59bNA8d6ewfOXnCst4u1fl8xVxzr/eH43mgeWOvJ\npTfNXszZXMzV3N5k+ebxpnl700Hz/i7mfNBcPuWguTwr1vqE7aD5+HTzwLHe\n35tnL+ZsLub65vnvNxzr/b153r5hTgfb8T94Lp98sJU/jvX+cKz3Z+441lvF\nsd7qz66O/o7mjPV9u2D1p6zmhtUfspsHVv/MdMhq9ZdcsNbzzFjrBxZzxepf\n2bDWb+1Y/SsH1vf89JbVWi9wwdHfEkd/U6z+lxXHeqdY/Qc6Vn+hgaO/waGr\ntX7ggqO/EVZ/pIJjvT2s/gwNq/9Px+r/M7DWC0xvXa3+EYs5m4u5mpu5m8db\n5+1Jh81eDpv3Jx8272/B0d/psLm82mFzeffD5uMzDpuPX/q5+XxYsNafzDjO\nPxznP9b10rDWl+1Y1+vAUf+W+XpfsOr3jKP+w7HeM9b9qWGtR92x7pcDa33y\n9POrb1I+jvs/1vNCwXoeqfgS5WM973R8tvLxmco/fLX6ryz4FOXjeP7Del6u\nOJ6/sd4HOt5H+XgP5f/CavVPWbD6p2Ss9pqC1d5Rsdo7GlZ7UcfR/mFOR8xe\nzNlcjpj/fjU3vLXycbQ/HTHvT3ob9aPycbz/4V2Uj+P9z9zeNpdnNw+s98V0\n5OwF6/0xm4u52u83cz/S8vGuyn879b/y3z6XR8bR/oWj/evtc3k2HO1/5mFO\nR3H/U/5R8/HLWOdXOcqOP1b7QcPR/onVXjFwtH+8Y3W0v+Bof8dqDyrmitWe\n1MwdR/sTju8PR89ezNlcsNq3Klb7XMPR3wfr+9HAVyv/ndRfysf6XpjxacrH\n+p5acXzvxfspH2flY/XPSMdwvSkf6/t3xuqPUbD6I1T8iPo74K+pvwO+U/0d\n8K3q7/CL1Pfq74Cb+lvgi9TfAp+v/hbmhs9TvnmY07GzF3M+dv77BV+gfHyJ\n8vFlysdXKh9fp/xf4vxQPu7Kx7cpH9+ufHyX8vHdysdfVj6+X/nHcb0o/7j5\n+GVzwQ8o39zwg8rHDynfnN7F9a98rPMp48eVj6O/DVb/mYbVX6jjZ+j8x9Hf\n6HjqM53/WP2TMtb1ULD6M1W86PrDOyof76R8rOstvZv6X/l4F+XjXZWPd1M+\nVv+ThtX/pONXKx/vqfwTVu+lfKz6IuPo74XVn6Vi9WdpeF/lY9VHA++v/Pes\nVv+XBav/S8YHKh+rP1rFhygfH6p8rP4yA6u/TDpxrj8XrP4x2Vyw+stUc8Pq\nP9Ox+s8MrP4z6b2rT1A+Vn+ajFXfF3yK8rH60zSs+0XH6k8zsPrPpJNWn6V8\nrP4yGas/TMHR3wWrP0vD6r/Sse5vA0d/k19erf4jC1Z/kYzV/6Pg6O+I1f+j\nYd1fO1b/j2FOJ89ezNlczNXczP3keXvHyfP+pPfNXrD6b2ZzMVdzM/f3Wf77\n5vJJp6yO/t44+rtg9UctWP1XKlZ/lYajv6t5YPWPTb/C/U35WP1XMlb/lWKu\nOPr74uhvjKO/MY7vn6fOXnB8fzUXc8XR/8XccfR/Maf3z17M2VzM1dzM/f3z\n9oz3z+WR6lxeS7Xyr/PxKnU+nrXa8cfR3x6r/9PAOr/Sr66O/lY4+nth1Q8F\nR/2DVV81rP6EHR+vfKz6OZ22Ovo7Y90PMtb9opiruWHdb7r9fNjfTx+Y7y8L\n1v0h46j/ser7itU/smHV7/0Dc/kMHP0dT1+t/o3L6XP5Zqz3kWKu5oZ1P+hY\n94NhTh+cvZizuZjrB+e89sF5+/sH5/0bWP1D0xl2/8O6X+Yz5vIuZ8zHo54x\nH6+G9TzQz7Djj6O/76+t1vPTgvW8lrGe7wrW82TFL1A+1vtax3peHljP2+nM\n1Xo/WLDeHzK+Wc/fWO9rFet9p+F4/8JnKh+fpPxf53pUPj5I+TgrH++hfPwS\n5eNF+Xgb5eOtlH/W6mcrH2+pfLyF8s3V3MzdPMzpN2Yv5mwu5mpu5m4e5nS2\n5Z9t+28u5mpu5m4eZ8/lnT5k5W/O5mKu5vah+fh28zCnc1ZvrXys8yXjbZWP\nX6B8c8PbKR9vr3y8g/J/c/WOysc6nzPeRfl4V+Xjlynf3PFuysevVP65sxf8\nauXjPZWPdT1W/Drl432Vj/dXPn6j8n9rvt4XfLDy8aHKx0X5+HDl46OVj1W/\nDHy88s9bfYLyseqnjE9Wvrniqnx8mvLxGcrHqg/Th2cv+Gzl43OUj1W/Vhzt\nX1jtUx1frHxzOn+12tsWfKnyzQVfrnys9q2GdX/o5oGvVv5HZi/4WuVjtZcV\nc8U3KN/c8Y3KN6cLZi/mjNUeV8wV6/7YzB2rvXNgteel3569mLO5mCtWe2DD\nam/t5mFOF85e8JeUj/U8UPA9yrefN/t5Nw98r/I/ujqeP8wZq72y4KF8rPbL\nhtUe2bHaIweO55+LVqu9ccGPKh8/pnxzxWqfbFjPWx3HeEMc4/0+tlrjFRes\n8X8Zq/2yYI3/q1jPew1r/F/HGt82sNo708Xc7/T8ifU8mbHGvxW8g/Kx2jsb\n1vNpx2rvHFjtnel3uJ8pH+v7RMZq7yw4xtthPS83rPbMbh5Y7ZnpktVqz1zw\nPsrHas8s5orVntmwnu87VvvlwBrPlz6+Wu2XC9b7Y8bx/on1vlqx3h8bPkr5\nWO+7A6s9MrXVen9ZsN6XM1Z7ZMEa31ex2iMb1vtSx3ofH1jvq+l3Zy9Y72PZ\nXLDeZyvW+2zDet/rWO+nA+t9MV3K/VD5OMa74RjvhtU+WXG0v2G1X3Qc7W9Y\n7ZXp97j/KR9H+yOO8d445nvAak9pWOPPOo72F6z2vPSJ2Ys5Y7XnFKz2norV\nHtTMHcd8F+b0Se5nysfR/mQuONr/zA2rPbBjtW8Nc7qM+5fyzRlH+x+O8Q/m\nhqP9Det78TCn35+9mDOO78/mivV9u5k71vfwgfX9PF0+e8EaX5Gxxk8UHPOd\nYI2HaDjGn+EYf4Zj/NcfcP9TPo75VrD6ExSs8QsVa7xCw+qv0rH6Kwys/gzp\nitXq77Bg9Y/IOPrf4Oh/gWP8E47xTzjmm8Hq35I+tVr9Wxas/iEZq39Lwepf\nUrH6EzWs8Q0da36cgbPyr+R+qHxzxjHfjrli9W9qWOMnOtb4iYE1fiL9IfdL\n5WPN/5PNBWu+oIo1nqJhjZ/oWOMlBlZ/rXTV7AVrvETGGi9RzNXc8FHKNw9z\n+vTqGH9hzuZiruZm7uZhTldb/tXz9mVzuXoun3r1XH7t6rm8O9b4lWFOn5m9\nmLO5mKu5mbt5fMaO/zXz8VvM+Rorf6zxMBVrPEwzdxzjX8zpf66O8SfmbC5Y\n/RGruZk71niVgTU+JV27Wv0dF6zxKRlrfErBGp9SzQ1rvEo3D3P67OzFnM3F\nXLH6b7bPztvfcYy/+excnum6+XgtOM5/rPOlYNU3Fcf4L7yf8nHUf1j1Y/qj\nuf5czBlH/YtVf1es+r1hjXfrWPeHgaP/4/Xz/WUxZ6z+icVcse5nzdzNw5w+\nN3sxZ3P5nOVj3S8bjv6fWP01x+fm8kk3zOW54Lj/3TAfj4Jj/N8NdvxxjP/D\nul8NrPox/fFcny446h8c4+9wjL/DMf4Ox/g3rPpgYNUH6ca5PljM2VzM1dzM\n3TxutPzPz14+P29vNpfPz/tXP2/7//m5fPrn5/IbOO5/N83X+3KTlf9N8/Eq\nOO4/N83Ht2E9r3Ss82VgnU/pT+bre8E6HzPW9V2wzt+Ko/8xjvMf63oZOK6/\nvjrG/2P11844+v9izU9QcfT/xXp+7zjmf8Ax/vpPV8f8Hzj632K9XxUc/S+w\n+jM0HPO94Xj/xDHf4s2r9X68YL1fZxzv31jv6xXrfb/hmO8Gx3w75vRnq6P/\nrzmbi7n+2fz3GlZ7RcfqPzH+bN6+dMu8/QtWe0XGaq8oOPo/3TKXVzN3HP2f\nsdon0hdmL1+Yj0c2F6z2ifqF+Xg2c8cx35453Tp7uXX+/Wwut1q+/byZu3nY\n76cvzl6+aPnm8sV5eyuO9hdzx3H+m9Ntq6P9Bev6yeaCY75FHNcfjvkncPQ/\nwtH/6c9XR/uHOeNo/zBXc8PR/oGj/QNH+8ftq9XesZgzjvYPHO0fONo/zB1r\nPoiBY/zDX8xecMz/YC445t8xN3PHUf+a0x2rNd/JYs5Y7TPFXHHMP2HuWPNR\nDKz2nPSXq5+h+w9W+07Gur8Uc8W6HzUc7T9Y96+BNd4l3bla7T0L1v0w45j/\nBsf8N1jtOw3H8y+O+y9We0/6q9Xx/G3OWPf3gvU8X80NR/uPeWA9T6QvzV5w\nPH+Yi7liPS83c8d6vhnm9Ner4/3HnM3FXLHep5q5mwfW+1i6a/aC9f6WsZ7f\nirmam7mbB9b7Qvqb2Ys54wOUb67mZu5Yz6PDnO6evWC9v2RzMVdzM3fzMKe/\ntXxzNhdzNTdzN4+/ncsn3TN7MWdzMVdzM/d75uM5zOl/2fE3Z3MxV3Mzd/PA\n0f567+zFnLGuh2Ku5oZ1PXUc1585/e/ZC47r31xwtD+bm7mbhzndN3vB8f5v\nLuaKVR82czcPc/o/sxdzNhdzNTdzNw9z+vK8P4s5m4u5ftnK39zN48vz8Ux/\nZ/U/jvmXzMVcsc63Zu7mYU73W/2Po/43F3M1N3M3D3P6+9mLOZuLuZqbuZuH\nOQ3LN2dzMVdzM3fzMKevWP5X5uORzeUrdvxxfH/Ccf5hna8Dx/PPV1erPWXB\nMf4bx/c3c8V6nmtYz3sdx/c/HPOf/d/ZC9bzZcbx/Gmu5mbuOOZfM6evzV7M\n2VzM1dzM3TxwjP//f6vV3rSYs7mYq7mZu3mY0wOWb87m8sC8/fUBK/8H5uPX\nH5iP78A6H9I/rI72b3PG0f6Odb5Vc8NqD+/mYU4PzufzYs7mYq5Y7Y0Nx/wH\nONrfcbS/f92uP6z3lWwuONZ7MTdzNw9zemj2Ys4PWf5D8/ZWHO9fD8372x+a\ny2c8NB+v9I92/HHM/4Cj/wGO8x/H/Is45t/A0f8B6305Pbw65p/Fer/OWO/j\nxVyx3t+buZuHOf3T7MWc/8nyzfWf5u1t5m4e/zTvb3pkLo8Fx/wnj8zlV8wV\nx/wrj1j5m8cj8/FK/7w62h/+eT6++Z/t+OOo/3H0P8HR/wTH9zes+iQ9Op+P\nC47+J1jnb8Ex/wmO8x9H+wOO6w/H8+e/zPfrxZxxPP9hPQ9UHM8fON6/cbz/\n4Hj/e2x1vH+aM473X3O1f9/M/bE5b5jTv87bt/zrvP3ZXP513t9qbuZuHub0\n+Pz3F3M2F3M1t8fn/enm8bjt/7/NXsz53+byLOb6b/PxaOZuHub0xOzFnM3F\nXM3tCTv+5vGE7f+/2/7/+1xe2VzM1dzM3TzM6Uk7/8z5yXn7irk+Oe9fM3fz\nMKf/sOvvP6z8zcVczQ3re2w3Dxzz7z61OubfNWdzwfH919zM3TzM6Ruzl29Y\nvrl8Y97++g0r/2/Mx6fjuP5xvP8+vTre/3E8f2HV7wXrflBxzL+Fo/0bx/Mv\n1v0rfXN1vH9g3e+yuZirudnf6+bxTcv/1uzFnHHMv2Wu5mbu5mFO/zl7MWdz\nMVdz+8+5vLt5mP+rWCYv5mwu5mpuOPbfPMzp27afy9+ccbx/4jj+5mbu5mFO\nm8xezNlcNpm3p24yb2/bxPbfPDaZyyt9+2q9Dy7mjKP/E47+Tzje/3C8/5kH\njv5fz1it63vBcf3j6H+Co/0Px/cXHO1vOL5/4Lj/fMfquP/hqP/NBUf9Z27m\njlV/Dhz176azF3PG0f/HXM3N3M3DnL5z9mLO5mKu5mbu5mFOm1m+OZuLuZqb\nuZuHOT3T8s3ZXMzV3MzdPHD0/9189oKj/7e5mCuO/t/mbh44+n8/a3X0v8Yx\n/7654Oj/Z244+v/h6H9sP09brFb/ugWrP142Fxz9/8wNq79tNw9z+q759xdz\nNhdzNTdz/655+4c5bWn7v+VcPnnLufzKllb+5rblfLz6lvPxHVva8f/u+fxY\nzBnH+WeuOM5/HM+f5oFVH6Znz16w6s+M9fxczBXH87e5m4c5PWd1PP+bs7mY\nq7mZu3mY01aWb8443n/M1f59M3fzMKfnWv5z5/LNz52PR3nufDwr1vnQcNQ/\nOM4/rPMzbT2fvwuO9TfMBUf/W3Mzd/Mwp+fNXsz5eZZvrs+bt7+Z+/Pm/R3P\nm8sjbWP1L47+/+ayzVy+1dy2mY9HNw9z+h67/5izuZirueG4/5mHOW1r919z\nxjH+xlzNzdzNA0f983yrf8zZXHA8/5mbuZsHjvXmXzB7MWdzMVdzw/H+jaP9\nBUf/i+9dHf0fcHx/x/reUHB8f8Hx/I/j/Q/r/WTg+P613eoY/4ij/RtH+ztW\n/72KY/07HP3/zAOr/2D6vtmLOZuLuZqbuX+f5ZvT9rOX7ef9yeayve0/ju8f\n28/l1XF8f8Dx/eWFsxes7wv5hfPxKeaKY/07c8fx/ovj++8ye8HR/oDj/R/r\n/bTiGP+D4/s31vk5zOlFq/V+upizuZiruZm7eZjTDvP2LOa8w7x/ZQfbf3Pb\nYS6vvsNcnmMHK//vn4/PguP7j7l8vx1/HP1fcZx/OOZfx+ofnHZcrf7KC1b/\n5oxj/VMc66/i6H+NY/5LHPNvYvUnTy9erf7oC1b/9YzV372YK9b4gGbuOMYf\nYI3nSDutjvlfscZ3ZBzjH7DGS1Qc8z+YO9Z4i4E1HiP9wOzFnLHGdxRzxbHe\nM475d3GsN401H0Z6yWrNl7jgWO8ax/y/5opj/k2s+To61nyUA2t+xfSDqzVf\n8YI1f0g2FxzrjWPNV9LMHWt+k4Fj/pOdV8d65+ZsLuZqbuZuHub0Q/P2LOZs\nLub6Q/P+tR+y/TcPc9pldcw/bc7msouVP4713s3dPMzppbMXc37pnFfM1dxe\nOm9vf6nt/0vt+O9qxx9r/s6MNV9rwTH/K9Z84w1rfvKONd/PwJoPKP3was13\nvmDNH5TNBWu+oYo1v3ozd6z5ioY5vWx1zD9qzuZiruZm7uZhTi+3fHM2F3N9\n+bw/7eW2/+bx8rk8026zl93m45HNZbf5+NXd5uPbdrPjjzW/0zCnH5nPnwXH\n/E/mguP8Mzdzxzp/hzntPnsxZ6z5poq54ph/ytzNw5xeMXvBmr8qm4u5mpu5\nm4c5vXL2Ys7mYq7mZu7mYU4/avk/OpdHNhdzNTdzNw9z2sPK35zNxVzNbQ/b\nf6z6dJjTq2Yv5ozj/muu5oZVv3fzMKdXz/fPxZyx7h8F6/5Scdx/sOaH7ljz\now2s+dDSa1bH8w+O+aexnp8K1vNVxfH8hfV81rGe7waO+c/2XB3jj3E8f2I9\nvxYcz7841l/Asf4B1njggWP+9x9bHeNfzRnrfaBgvS9UrPnBGo75v3DM/4Vj\n/v+9Vms8+YJj/n0c40+xxpdWHOtPYY0v7VjvTwPH+Pcfn71gjRfN5oI1HrTi\nGP+JNX6z43j/w9H+kVerfWPBat/IONp/cIy/xDH/Fo7xlzj6n+KYf+u1sxcc\n649h9ZcsONa/w/H9H0f/DxztXzi+v79udXx/x9H/Gkf/axz9r80NR/sDVnvd\nwOo/k/7b6lh/Dsf4Axztf1jf5yuO8T84xl/iWH8Qx/irvVfH+Bcc/f9wfP/A\n8f0FR/unueP4/o6j/fknZi84vr/imH8Lx/xXWO37Dcf64zi+P2B970v7rI7v\nj1jfJzPW/EgFa36hijU/UsOaj6hjzY80cMx/9N+p35WPtb53xlq/spgrPkf5\n5o61PvjAWh88vX72gs9XPtZ6msVczQ1rffGOL1I+1vri6SdnL1jreWYc64/j\nWH8ca73xhrXeeMeXK9+c9uV+pnys9cgz1nqkxVyx1idvWOuTd3yd8vENyv8f\nsxes9csz1vrlBWv91GpuWOuZd6z1zAfWeuZpP+6XysdarzXju5RvrjjWP8f3\nKh/H+uc41j//Ke6vyjdnrPXRi7lirZfezB1rfdphTvvPXvaffz+by/6Wb277\nz9vf95/3d+w/l0d6w1x+yxvm8s1vmI9XwVq/vr7Bjj/W+dLNA1+v/Deuvlr5\nONbfxboeCtb1U3Fcf1jXZ8e6vgdWfZF+2uofrPowY9WfBat+rjjqfxzfX3H0\nP8DR//2A+X664Lj/4rj/4+h/iGP8DY71T7GexwbW82L6GY6vnv+w2rcz1nw8\nBcf8w/hcPf/hWP8Hx/zLWO8v6UDuj8rH0f6I4/0Lx/p35mbuON5/zelNsxdz\nNhdzNbc3Wb55mNNBsxdzNhdzNbeD5vLq5mFOb569mLO5mKu5mbt5mNPBtv/m\nfLCVv7mam7mbhzn9rB1/czYXczU3czcPHO0fh8xezBlH+xdW+1jF0f5mP+/2\n82FOb1mt9r3FnLHaBwtW+2E1Nxztjzjan3G0Px86e8HR/mku5mpu5m4elpfe\navlvnbc3v3Xen/JW2/+3zuXT3jqXX3+rlf9b5+OZDrPjj+P8Mxcc17+5mbt5\nmNPP2fVnzuZirj83b18zd/P4uXl/U7H9L3P5ZBzfP8pcnrXM5d3MvczHZ5jT\nz8/HczFnc8Gx/qu5mbt54Fh/4fDZizmbi7maG9b53M3DnH7Bzn9zNhdzNTdz\nNw9zOsLyzdlczNXcjpjLo5vHEfPxSG+z42/OOL5/4Dj/zM3czcOcjpy9mPOR\nlo91/tYj5/1pR9r+46j/cHx/evtqfc9bsL5nZRzfv3Csv2xuWOubdBzrv5vT\nUatj/WdzNhdzxVpPuuFYfxq/UvlY67mkd8xecKz/gmP9a3PFWi+7mTvWejMD\nx/rbR6/WejUL1no22VxwrP+NtT5Ow1ovvJsH1no76Z2rt1a+OeOtlG+u5oa1\n3k83D3M6ZrXWQ1/MGWs9oWKu5mbu5mFOvzh7wVrPKJsLjvWPzM3c7feHOR07\nezFncznW9t/cjp3Lr5vHsVb+v7Q61p/Hsf481vlWsNabr1jrMTUc68/jOP+x\nrp903Hy9LVjrK2Ws67dgrbdUzQ2rPujmgVV/pHfN9dGCVX9lrPqtmKu5Ya3f\n1M3DnI6fvRw//71sLsfP21uPt/0/fi6vjlUfDaz6Jr17Pn7Lu+fjm99txx9r\nfa6KVb80rPOnY9Unw5xOsPMP6/zM5mKu5oZVH3XzOGHevvSe2QtWfZrfM5dP\nwTq/63vm8mxY53vHur8MrPM7nTgfrwXrfM0nzse7YJ2fFUf/Fxz9T3Dc/3E8\nf713tZ4fFqzni4xj/S8c/S9wfH/H8f6B4/0fR/+vk1ZH/y+s79kZx/rTWN+z\nK1b/vGbu5oHj+/cvz17M2VzM9Zct39x/ed7eYU4nz/u3mDNWf7RiruZ28lx+\n3TzM6X2zl/fNxyObi7m+bz6ezdxx9H/E0f5zyuwFR/uHueB4/sbx/of1/N5x\nnP9Yz7vpV1breXfBsf4ejvoXx/WHdX02czcPHPefU2cv5mwu5nqq5Zu7eZjT\n++3+Z87mYq7mZu7vn7d3mFO1/cdR/5mLuZqbuZuH5aVftfxftf03F3M1N3M3\nDxzrP542ezFnczFXczN3HM8fOPo/fmC+XyzmjHW9FHM1N3M3D/v76XS7/k6f\nty/juP5Ot/0/fT5+Det5qGO9Dw4c998PzvfnBcf7H473P3PF8f6H9X7XsZ6X\nBo7njzNWx/sP1vN8xrH+Kt5E+eaGk/LNA2t91/Rrsxdzxloftpgr1nqyzdzN\nw5zOXK31aRdzNhdzNTdzP9Pyz5y3P/36XL7Lr1v5mwuO919zw3p+7FjPzwPr\neTKdtVrPkwvW+ZOxnieLuWKdjw3r/O3mgaP94zfs/DdnczHX35j/fjP335i3\nb2BdL+nseX+Ws23/zcX+fcXx/G3u5mFOH7J8c/7QvL3lQ/P+1A/Z/n9oLp+O\nVd8MrOf9dM7sBau+yuZiruZm7lj14TCn35y94Lj/4nj+wFH/4nj/xfH+i6P/\nP47nr3NXR/svjvZvHO3vONo/cbS/Yr2fdBz9j3F8//it1fH8iWP9YRzjP3A8\nf2M9rzccz/84vn9j9bdN561Wf9sFaz3ijKP/LY7+t+aGz1a+eZjTh2cv5mwu\n5mpu5v7hefvGh+f9SefPXs63/TcXc7Xfb+ZuHub0Ecv/yLy92Vw+YvuPo/8z\nVn+Ibh5Y/aPTBas13m3B6i+dsfpLF6zxdRVrvaWG1X+6Y40HHFj9OdJvr471\nn7HGJ2as/tIFa72kimP9Iaz+Ix2r//QwpwtXx/hLczYXczU3c7/Q8s3po7MX\nczYXc/2o5WOtZ9Sx+ocPHONPL1qt/uIL1njVjGP9ZxzrP2OtV9Sw+ot3HOsP\n4QeU/7HVsf4Q1njcjKP/N9Z6QRVH/2+s9X06jv5HOMbfX7w6xr/jGP+OY/1l\nrPHuFat/eDN38zCn31mt/uSLOZuLueLof27uWP3RhzldMnvBMf7eXMzV3Mzd\nPMzp47MXczYXczU3czcPc2qWb87mYq7m1uby7OZhTr9r5W/OWOPbi7n+rh1/\nczcPrPMnXWrnH471p8wFx/wPOOa/wDH/BY7rD8f6X7831wcLVn2Rcax/iFU/\nVRzjX3DUv1jjaQaO8TefmO83C47x71j3r4J1v6tY98OGNb68Y92fB9b9PH1y\ntdpjFxztnzj6X+Ho/4H1Pb3heP7Fej4eWM/X6bLV8fyP4/sXjvYHrPeRivW9\npmG1N3Ss7ysDq70g/T71td6/8cN6/8YP6v0b36v3b/wlvX/j2/X+jW/R+zfu\nev++nOOvfHyV8vHFysfnKh+frXx8uvLxaco3pz9YXZVvzuZirn8w/72Gz1A+\nPlP5+BzlXzHvz4IvVL654IuUf8VcPs3czcOcPjV7MWdzMddPzdvTzP1T8/YP\nfIHyr1x9vvLN+cq5fMqVc/nVK+34X2nlf6Udf3yq8v+Q61/5+ETl4xOUj49V\nPj5G+fho5eOjlG9OV81ezBkfqXxztX/frrJ887hq3t706Xl/Fnyc8vHxyv/0\nXD4Vn6R8fLLyPz2X7zCnq+fjseC4/q6ej18xV6zrvZm7eZjTZ2Yv5mwu5mpu\nn5m3r3/G9v8zc/mka+bza7nGyv+a+fiUa+bjV83tGjv+5oF1/qT/OXvBRfn4\nYOXjg5SPD1S+uZuHOV07ezFnfIjy8WHKv3be3oZ1PfRrbf+vncsrfXY+v5fP\nzscjY53fxVw/Ox/P9tn5eHes83vguP9cN3vBqr8yPkv5WPVdxaofGz5P+Vj1\n7cCqn9MfWf2Pm/LxJ5SPL1c+vkL5+Erl46uVj3W/T9evvl75+Abl4xuVj/X8\nUPHNysd63uj4VuVjPZ+kz81e8B3Kx3cqH+t5p+K7lW/u+B7l4/uUf8PsBX9Z\n+fh+5ZurueGhfPxV5ZvTH69+QPnmjOP5D+v5sOJHlI8fVb554MeUf+Pqx5Vv\nzvgJ5Zsrju8/OL4/YX3vGTi+f31+9oL1vSybC9b3ompuOPr/mQeO/n83zV5w\nfH8yF6zvhdXccPS/NA+s94H0J6v1/WoxZ6zvlQWrv1fF+r7VzB3r/WTg+P7V\nV8f3L6zvM9lcsL4HVazvNc3ccfR/M6c/Xa33qwXH918c37+w3s8q1vtbw/H9\nxTxwfH+5ebXeBxdzxvH9BUf/Axzf/7HeNzuO7/84vv//2ewFx/d/c8Hx/R9H\n/3sc/c9xzD9kTresjvmHcMz/g6P/D47xJ+aGY/4VHPNv4ej/9AXu18rHMf8b\n1veaguP7A47vH1jtDR1H+z9We3+6lfuz8rHaLzKO9n+s+VIqVnt/wzH/H9Z8\nKQNH+/8XuT8rH0f7P9b8KQVH+z9W+04zd6zvAwNH+/tt3H+Vb85Y7eMFaz6V\nitUe1bDayztW+9XAai9Pfz57wZpfJZsL1vwqFav9rJk7fkj55nQ790/l45h/\nxVxwtL+bG1Z7fDcPrPbA9BfcH5VvzljticVcsdojG472d/PAsf7dHbMXHO2v\nONp/ccw/imP8M475Z3Gsv4lj/ZW/5P6kfBzzz+KYfxbH/Ks45p/Fmo+lmweO\n+V/v5H6jfHPGmp+l4Fj/Dsf6d1jztXTzwBpvnv6K+4vycaz/jGP9ZXPFsf6y\nueNYf9ucvrQ65n/Bsf6vueBYf8zccMx/jWP8vTn99eqYfxvH+gM45v/GMf+4\nueEY/49j/Q0c87/fNXvBmj8+45h/3lxxzH+PNb9Mx5pfZpjT36zWfAYL1nwz\n2VxwzD9jbuaONT/NMKe7ub8q35zNxVyx5mdo5m4e5vS3sxes+XGyuZir/X6z\nn3f7+TCne/5/V/cf/29V13f8RESEhEiIiIRHRSRCIiQkJDwZEhEZOnJqyM7I\nqTN1DJ0jcnRk5O85MzKmxE6IxBCZMsYcc+yMnHPmGDNDIqITIhEhIRIhIq3v\n87Vdz53Hn/fbB77P6zrX9T7nus51fiAfLnC9GecPd3jcjPK/eb0+6cur85dx\n/eFqx/oXcIcH/v8Jp1tW51vW4ylwhdst6/l1eNyC8r9lvT7pD1dnuMAVbnC3\ntX7IgKet9ZXSrauzrfWVClzhBnd4wBNOf7RZ6zVluMAVbnD/I+TDE0634fzh\nAtfb1vJscL9tvR4Dnnb8/v4Yvz+4wNWO3x/c4WHH7w9Ot+P+h4ut31OFmx37\nD8HDjv2H7Fh/7E9WZ7jA1Y79V+Bux/pndux/Ykf7N9f2Mtux/4gd7a8d+1/Y\nsf+NHfu/2fH8Yev5Jf3p5lh/x9bzVLFj/X879r+zY/95O/Z/tzVeYNr6Xp/u\n2Kzn8WzH+ve23ieqrfUhm633o27r/WnYWo9+2np/S1/ZHOvP21pPs9ix/qYd\n399trQffbb2fDlvf56cd63/euVnvuxkucLX1vtxsvU93O9YfteP9247xj191\n/aJ8W+/7xY75X3bMP7Nj/VU75j/ZMf/NjvVn7toc66/Ysf6AHeuf2BpP2+wY\nf2tH/5Md8w/tmH/+Z5vVP5dt9d8VW+PZK9xsjTfo8IAnnO5ene9e//0C17vX\n42t3r8ffbfUvDlv9ixNOf7455t//+Vo+Ba5wgzs84Im8dM96PPme9fjLPev5\nVbjds5ZPt2P+PzztmH/7F6uzHf2/cLXVf9zsmH8LD3jC6d7VGS5whRvc712P\nb9jqv573ruWRvraWX7bj/v/aej3q19br1b6G62/H+g92zL+wY/z/fZtj/L0d\n8//smP9lx/xzW/273Y717+1Yf96O8fd/uTnWn7dj/SU71l+Bmx3rz9ix/o0d\n6+/Yqu/S/Ztj/RM7+n/t6P+1Y/0tO9Yfs6P/F5625qOmr6/1dbZj/Jcd82/h\nZsf4f3jYMf/YjvnHD6ztTYaLrfkBFW5whwc84fSN1RkucIUb3OEBTzg9iHy4\nwBVutvrjOzzgCae/Wp1tzQcocIWbHfMv4AFPO54/Hlqd4WLre0K19TzT4G7H\n8w884fTXq7Md8w9sPV9VuMEdHvCE08PIhwtc4QZ3eMATTt9cjyfD5ZvI/ybK\nH3/v8MB/P+H0yOoMF7jCDe7wgKet+yl9a3WGC1ztmP8Cd3jA047xt4+uznCB\nqx2/P7jDA55w+vbqbMf8I7jCzY76Dx626vMJp8dQ/9ux/gRcbbUnzY72Bx52\nrP8Ap79B+2fH/hN2rP9px/dXO9b/s2P9M1vt/bRj/bX01P/nmP8HFzu+P9vx\n/mPH848d37/tWH/Aju/v37FZ70vZjvHXdnz/t2P+px3zT+1Y/8jW8+W04/lz\np82x/owdz9+2nmerHeM/bI0f6bbGowxb472nHeNfvnOzxstkW+Nriq3xO9XW\neJ9m36PxN7bGCw1b44mmHeOPdl6dbY1nKnC1NT6q2Ro/1W2NTx92jL+yNT4r\nfddmjefKtsZ7FVvjwaqt8WTNjvFn9vXKtzWebdpXK3+XzRpPl22Ntyt2jL+2\nNZ662TH+z9Z482FrPOG0Nb42fffmGH9ra3xjsTXet9oan9psjU/ttsZXDjvG\nX9ox/nnXzWco347xp7bGe1b7NOXbGh/abY1PHXaMP7Vfovzv2fwi5dsnKt9+\ngfLt45VvH6d8+1jl28coH067uf5RPlzgCje4w2M35MPpcevxZrg8bj2/ahfl\nw/1xa3kNeMJp97U8s32C8uG6+3p9Gtztk5QPT/tk5X8vrr+t+6PA1Y7xz7bG\nR3d42Lo/J5z2WO/nbMf9b+v3Ue1XKd/W+O0ODzvmH8Dp8evvM9v6/RY7xp/b\n8fu3NX662xo/PWzVH9NW/ZL2XJ1tjacutsZTV1v1VbNVn3U7xt/bMf4fTk9Y\n68tsa7x1gasd469tzUfpturjAU9b47PTXptj/gtcbI3frnCz1R50O+bfwNO+\nWPnftzrblygfrvZlyrfVfnV42BofPuG092aNF892zP+Cq63x5M1We9ptjS8f\n9rXKh9MT1/Y5w8WO8edwg7sd7T887Zj/ts/qbOt5osAVbrbGu3d4wBNOT9qs\n55kMF7jan1M+3OFha3z9hNO+m/W8lW09jxW42np+a7ae77odz3+2ng+nrefH\n9OTV2Y7nT1vj6aut59Vm36l8W8+7w9bz8LT1vJz226zx9NnW83WBq63n8QZ3\nW+Prh63x9NPW8316yuoMFzvWX4Ib3O0Yfw9PO9Zf2n91tmP9KTvG38MN7vCw\n4/0HTt+/OsMFrnCDOzzgCacD1uPNcIEr3OB+wFp+A55weurq/NT1ehS4wg3u\nT8X1t3V/TPhvA9f7z475H3C1dX83uNsx/8TW723a+n2mp62/5wwXO94/bdUn\nzY76x/6i8m3VX9PW+2R6+lofZjvqX7jaqr8b3OEBT1vtR3rG6gwXW+1TtdWe\nNbjDw1b7OOF04OpsR/sLV7jZmj/W4QFPO9r/Z67OcHnm+v9XuMEdHvCE00Gr\nM1zgetBaXg3u8DhoLa8Jp2eh/OHyLJQ/3PDfd/x9PAvn/yyU/8Eof7jAFW5w\nhwc84fQDyIcLXH8A1x/u8IAnnA7B9YcLXOEGd3gcgvOH0w/i/G09Pxe4wg3u\n8IAn8tKhOH87fv92PH/bMf/Tjv43O+o/O+Z/2no+Tc9eneFiq36ucIM7/v/x\nbOQ/ez3edBjq38PW8y223m+qrfehZsf7l635u8OO+b+23kfTD22O+e929P/Z\net+vdqw/YEf/h63+mGGrf2ja0f90+ObDlW8fonw7K9/eX/n2Psq391K+vafy\n7T2U/8OrM1zsvZX/w2tes/dTvn2A8u2nK98+UPlHbD5Y+Ufg/O1DlW8fpvwj\n1vLr8LCPUD6cnrP5SOXDxT5K+XCzo//xOev1HfC01b+Yjlydbd0vBa529L/a\n6h/sdtx/tvr7Jpx+ZLP697Id6w/Y6u+rtu73Bndb/XvDVv/ehNNRqzNc7Oj/\nhhv++34U8uF51Hq86bnr+eXn4vzhap+ifFv9px0ez0X5w+nozeqfzXCB69Hr\n9W1wt3U/DHja0f/8o6szXOy4/+BmR/8/PGzd39OO+u+Y1RkucLWj/x/u8LD1\ne51weh5+/7bqh2KrPqlwg7ut+mnA01b9lo5F/WcfpHxb9WW11R40O+pfO+p/\ne3fl27so/8c276R8+7HLd+Tbj+5wtR/Z4WY/vMPdfmiHBzzhdNzqfNz67xW4\nHrceT4O7nXT+8ITT83H+cIEr3OD+fOTD8/lr+aayHn8ua/mWgvOHW1nLr8MD\nnnD6cZS//aDy4Wo/oHy4wwOecHrB5vuVDxf7PuXDDe72vcqHp32P8n9i893K\nt+9SPlztO5Vv36F8eyrfvl359m3KP37zrcqHC1zhBnd4wBNOL1yPJ79wPd7y\nwvV8Ktzg/sK1PAY8X7iWXzphdYbLCSh/uJ2wXr9+wnp9xwm4/nD6ydUZLnCF\nG9xt3Y8DnnA6Efe/rd9Hgaut32ODux2/f1v1xbRVv6SfQv1jR/0PVzvqP7jb\nO6v+s9XeTDidtHlX1b+22qti632k2mrfmq33k27vq3xb7eO09X6SfnptT7Ot\n95ViR/trq31uttrzbut9Zdh6Ppi2njfSyZv1PJLteP6x9fxU7Xj+svW81m29\nHww7nv/g9DOb4/nT1vNpsfW8W229LzQ71j+z4/u/Hc/fdjz/v2iznuezre/9\nxdb3/mrH+7cd6//Zsf6bre/5E04/uznW/7P1Pb/A1Y71/+Buq/9g2LH+GZxO\n2Rzrn8HFjvX3bH2vb3C39X1+2Po+P+34/v7izfH9HS52fH+3Y/yVHetfwsOO\n9Tfh9JLN8f3dju/vcLU1PqzBHR62vtdPOP2d1RkucLVj/Te4wwOecDp1dT4V\n+XA9Fedvq7+rn7qW5zh1vV7z1PX6pp9b749sx/p7dqw/aWt8SrPj/rfVXzbs\nGH9j6/ecXrrWB9lWfVHseP+24/3bVn3V7ej/sKP+s1U/pr+7Otvx/gtXuNkx\n/gsett6HJ5xetjrbMf4MrnCz1V50eMATTi9fneHycuTDDe4vX89nwPPla/mk\nV6zOcIEr3OAOD3jC6eeRDxe4wg3u8IDnz+P6n4brDxe4wu00lP9puP7wxP+f\nXol8uMAVbnCHBzzhdDry4QJXuMEdHvCE099DPlzgCje4wwOecKrIr+v1LHW9\nftWO/mdbz5MdHnb0f8Pp72+O7w+2+qsKXG093za423oeHvCE0xmbo/8LLrae\nt6ut5/Fm63m923qeH7ae96et7yfpFzbr/SDb+r5R4GrrfaPZeh/p8ICnre8x\n6VWrM1zseP+x9X7U7N2UDw9b71fT1vtZ+gebo/8LLnC11Z/V4G7rfXHYer+c\ndrx/vnqz3k+zrffXAlc73n/t6P+xo//HVv/AtNV/kF6zWf0d2VZ/SLG/pHz7\nC8q3P6t8+3rl29cp3/6E8l+7+XLl25cp375E+fbFyrcvVL59gfLt9yvffq/y\n/+HqbL9T+fbblW+fr3z7POXDw27Kh9PrVmf7XOXDFW5wt9+qfHjiv0+/uP49\n/yLy8fcKN/sc5cMDnvbZyn/96my/Rflwtd+sfPss5cMDnnB6w+YzlQ8XuMIN\n7vYblQ9POL1xdYYLXOEGd/v1yoen/Trl/6PV2X6t8uEKN7jDw3618uF05uZX\nKR8ucLXPUD7c4QFPOP3j1RkudlU+3OzTlQ8P+zTl269Q/lmbX6Z8+6XKt09V\nvv0S5cMdHvCE05tWZ7jYpygff29whwc84fTm9d/PcIGr/SLl2ycrHx72ScqH\n0z9Zne0TlQ9XuMEdHvYJyofTW1ZnuMAVbnC3j1c+PO0XKP+frs52UT5c4WYf\np3x4wBNOZ6/O9rHKhyvc4G4fo3x4wumXVmf7aOXDFW5whwc87aOUf87qDBe4\nwg3u5yAfnnD65dUZLnCFG9zh8cvr8U04vRXnbx+pfLjCDe72EcqHp3248v/Z\n6gwXuNqHKR/u9qHKhyeczl2d7UOUD1e4wd0+WPn4+8Tf06+sznCBK9zgDg94\nwqkhHy5whRvc7YOUD084vW3zgcq3n658uMIN7vCws/LhdN7632e4wBVucIcH\nPM9D/j9fneFiH6B8uMEdHvb+yofT+Zv3Uz5c4Grvq3y42/so395b+XD61c17\nKR8u9p7Kh5u9h/LhAU84vX11hou9u/LhBnd4wBNO71id34F8/L3CDe74/wc8\n4fROnD9c4Ao3uMMDnnB6F/LftV7fYut+qLbun2brfuvwsHV/Tji9G/e/rd9H\ngSvc7Pj9wcOO+gdO70H9Axe4ws1W/dntqH/hCaf3rs5wgasd9T/c4WFH+wen\nf7E622qPC1ztaP9tPR90O54/bD2fTDi9b3M8/8DFjucvW8+rzY7nXzuev+EJ\np3+5Wc/zGS5wtfW+0OAODzveP+D0/tXZjvcfuMIN7vCw9T424fRrqzNc4Ao3\nuMPDjvdPOH1gdYYLXOFmx/svPOAJp19fneECV7jBHR7whNMFyIcLXOEGd3hc\ngPKH02+g/OECV7j9Bq4/POBpx/v/B1dnW7+HAle4wd2O3x884fSbqzNcfhP5\ncIM7POAJpwvx+4cLXOF24Xq8HR626q8Jp3+11p8ZLrbq2wo3O95/4QFPOH1o\ndYYLXOEGd3jAE04fXs8nw+XDa3lUuNnR/4O/D3jC6SLkwwWucLsI52+r/Rzw\nhNNvof21o/8BrnCDOzzgibx0MfLhAteLcf0vXsujwwOecPrXuP/hAle4wR0e\n8IRTX++fDBc7nj/gBnd4wBNOv706wwWucPvt9Xg7PH4b5w+nS1D+l6zXp8D1\nElx/uMPDjvsfTh/B/QcXO+5/uMEdHvCE06Wr86XIhyvcLsX5wwOel67lmT6K\n+gcucIUb3OHxUeTD6TKUP1wuQ/nDzdb7RoeHrfeTaev9Jf3O5uh/tKP/0Y7+\nN7jZ8f5n6/1y2HofnXb0/1y+Od5/4WLrfbnCzY73b3jY0f8Dp3+zOfp/4GJH\n/w/c4A4PeNrR/3DF6gwXuMLtCuTDA55w+tjq/DGcP1zhBnd4wBNOV6L8r1yv\nT4Er3K7E9YcHPOH08dUZLnCFG9w/vh7fgCecrlqd4QLXq5APd1u/j2Hr9zRt\n/R7Tv11/v9mO/hc7vj/Yqi+aHfWPHfW/HfWfHe3fJ9D+2/H+Ycfzvx3v37a+\nB3db34uHHd+fbX1fT5/cHN/f4WLr+3219X2/2RoP0O0Yf2Br/MK0NT4iXb05\nxl/YMf7D1niVCjdb42G6rfEyw9b4mmlrPE76d6uzrfE9xY7xR7bGKzU7xj/Z\nGh814GlrPFW6ZnWGi63xWBVu9ruVDw942jH+69+vzvb7lA9XuNkaX9bhYX9A\n+bbGp6VrN39Q+bbGsxX7Q8q3L1I+3G2Njxu2xs9NOP2HzTH+zr5C+bbG61X7\nauXb1yjf1ni/YX9a+fYNyv/U5s8o39Z4wmJ/Xvl2jD+0v6h8eNg3K9+O+af/\ncXOMf7Q1X7PYmo9ZbY2nbLbmW3Y7xl/amt844XTdZs1vzHbMP7Zj/Kcd88/t\nmP9tx/xreNoaz5r+02aNh8225icWuNoaT9vsGH9ra3zusGP9FTh92u2/8m2N\nLy5wtWP9FVvzHbut8czD1njnacf8x/+8OeY/2jH/0Y75j3bMf7Q1XrvbMf/R\njvUPbI03T9e7/VS+rfHtxY71n22Nh292zH+Ahx3zL+xY/+K/uH1VPlzsWH/Z\njvU34G5rPtKwtR7IhNNwe618O9ZftmP+kx3rr9ix/ret+VQDnrbmW6b/ujrb\nmp9VbM3fqnCzNd+y27H+ua35ldPWfMp0g9tv5duaT1Zszaesdsw/s7U+crc1\nv3LYWh952prPln7X7a3y4WLH+sdwszXfstuaTzfgacf6U59x+6h8O+Zf2jH/\n0o75l7bmU3Z42JoPOG3NF0z/ze2h8u1Yfx+udqx/DHc75j/CE06fdXurfLjY\nWh+5ws3WemDd1vrIw9b6YdPWemzpv2+O9d/sWH/N1nqO1Y711+xYf82O9dds\nrYc27Vj/93Nuz5Vvx/q/cLW1vmaztR5wt7Ue57C1HvC0tX5n+h9u/5Vvx/qf\nttYLrbbW82127H9haz3fYWv93mlrvdL0+dXZjvV37Vh/19b6qs3W+q3djvVv\n7Vh/1t5F68/+nttzrT9ra3+RAlc79v+Du639S4Yd++/Zsf/JF9xeKx8uduz/\naMf+j3C3Y/9HeNqx/+P/dHuufLjYhygfbrb2++vwsLVfzLS1H2C6cXW2td9M\nsbUfTbW1f2CztX9Nt7W/zbCPVb6t/XDS/9pclG9rv8Fiaz+damu/nWZrv8Fu\na3+eYcf+g3bsP3iT23/l27H/j639gircbO0v2O3Yf8h+lfJt7SeY/rfbb+Xb\nsf+Rrf2Rqq39k5qt/QC7Hfsv2bH/nx37/31xc+x/Z8f+U3bsfwU3O/bfsmP/\nL3jC6fdXZ7jAFW629gfr8Pj99XinHftvfWlz7H9la3/d8qW1PKut/Rnbl9br\n0+3Y/xGecPqD1RkucIUb3G3dP+MP1uObf7Aef7p5vZ/yzev5lpvX8qh27P9l\n637qN6/lOezYfxFOX17vt/zl9XoVuNqx/xvcv4zrb8f+e3bs/3fLZu03mO3Y\n/9nW/tHV1v7SzY79p23tTz3gaWs/6/SHq7N9ufLhCje4wwOecLp1dYYLXOEG\nd3jAE05/hHy4wBVucLevUL59pfLhdNvqbMf+43C1P6F8W/uXd/sa5dvXKt/+\nlPL/ePP1yrdvUL79GeXbn1O+rf3Wu32T8u2blW/fovzbN2s/9wwX+3blw82+\nQ/n2ncq3tX/8hNOfbL5b+XCx71G+rf3pm32f8u37lQ9P+wHlz9XZflD59kPK\nhxvc7YeVbz+qfDj96ebHlA8XO31sR7690w43uNs77/CAp73LDqc7Nu+6w9ne\nbYeLvbvy4WbvoXx42HspH05f2by38u19lA9Xez/l2/sr3z5A+XZWPpzu3Hyg\n8uFiH6R8+2Dl24co3z5U+fC0D1P+V1dn+3Dl20coH25wt49Uvn2U8uF01+Zj\nlG8fq3y42kX5cLdfoHz7eOXD6c82n6h8uMDVPkn5cIeHfbLy4XT36gwX+0XK\nhxvc4QFP+xTl//nqDBe4wg3u9kuUb5+qfDjdszrbL1U+XO1XKN8+TfnwsE9X\nvl2V/xers32G8u1XKR9u9quVDw94wuneza9VPlzgCjf79cqHBzzh9LXVGS5w\ntd+ofLjbZynffrPy7bOVf9/qDBe42uco3z5X+fCwz1M+nP5y89uVDxf7ncq3\n36t8uNvvV779AeXbFyj//s0fVL59ofLti5RvX6x8uyvfvlT58LQvV/7XN1+h\nfPsq5dufUD7c7KuVb1+jfPta5cPpgc2fUr59nfLtTyvfvl75cLeH8uFp36D8\nb6zO9meUb39W+XCDu/055cMTTg9u/rzy4QJXuMHd/oLy4Qmnv1qd7RuVD1f7\nJuXD3f6i8uEJp4dWZ/tLyocr3OyblQ8PeNq3KP+vV2f7VuXDFW5wt29TPjzh\n9PDm25UPF7jCzZ7Khwc84fTNzXcoHy5wte9UPtzhAU/7LuU/sjrDBa5wgzs8\nHkE+nL61On8L5w/Xb63l1+D+rfX6jG/h+tu6X9Kj6/2Z4WLr91Ft/R6brd9v\nt1UfDHjaUf98e3WGC1zhBnd4fHs9vvnt9fjTY2v9kR9bz7fY8fu39XttcH8M\n5f/Yen3mY+v1TH+D+w8u9t3Kt+9Rvn2f8u37lQ9P+wHl/+0b9//1g8q3H1K+\n/bDy7UeUD3d42I8qH07fsfkx5cMFrnCDu52u3JEPTzjttDrbO+1wsXfe4Qo3\nuMPD3kX5cPrO1dneVflwhZu9m/LhYe+ufDjtvHkP5cPF3lP59l7Kt/dWvr2v\n8u39lW8foPzv2nyg8u2DlG8fqnz7MOXbhyvfPlL59lHKt49W/i6bj1G+fZzy\n7aJ8uNkvUD487BOUD6fv3nyi8uECV7jBHR7whNOuyIcLXOEGd/sk5cMTTt+z\n+WTlw8V+kfLhZp+ifHjYL1G+faryd1ud7Zcp336F8u3TlW9X5dtnKB+e9quU\n/7jV2X618uEKN7jDA57IS7uvx5d3X8+n2Kcpf/e1PNrua3l1+6XK3329ntPW\n7yN97/p7yvYRyrfj92+r/mi26ptuq34bdrQ/ttq3tMdmtafZ1vNYsdW+V1vP\nBw3utp4nBjzh9PjV+fHrv1dsPY/Vx6/H02w9b3Q7nr9tPW9MO55/99ys54ts\n36t8W88X1dbzQ7P1/NDtaP9ttc/TVvuanrC2l9lWe1iesF7Paqs9anC31R4N\neNq6X9JeqzNc7P2UDze4wwOettrD9H2rM1zgCjdbv4cODzsrH057o/21o/21\nD1G+He2vHe2vHe2vHe2vHe3vE1dnO9pfW/VFtY9Xvq32tNvR/tlqL6at9iDt\ng/rfVv1VbNVv1Y76z1b92G21D8NWfTvh9KTNr1W+/Trl269Xvn2m8uFuv1n5\n8LTfovx9N5+tfPutyoerfa7y7fOUb5+vfHja71T+kze/W/n2+5Rvv1/59geU\nb1+gfHjYH1S+faHy99v8IeXbFynfvlj59iXKty9Vvn2Z8uFpX678p2y+Qvn2\nlcq3r1I+3OyrlW9fo3z7WuXbn1L+/puvU779aeXD1R7Kt29Qvv0Z5cPT/qzy\nv391tj+nfPvzyre/oHz7RuXDA572Tco/YHW2v6h8+0vKh5t9s/LtW5QPT/tW\n5T91823Kt29Xvj2VDze423co375T+XDKm+9SPlzgat+tfLjb9yjfvlf5cHra\n6mzfr3y42g8o335Q+fCwH1K+/bDyn746248oH672o8qHOzzsx5QPp2dsTh/f\nkQ8XuMIN7vCwd9rhCacDV+cDkQ9XuMEdHvBEXnom8u2dlQ9Xe1fl27sp395d\n+faeyofTQZv3Vb69n/Lt/ZVvH6B8Oyvffrry7QOVbx+k/GdtPlj5cLEPUT7c\n7EOVbx+mfPtw5dtHKP/g1dk+Uvn2Ucq3j1a+fYzy7WOVbx+nfDj9wOaifLjA\n1X6B8uFuH698+wTl2ycq/5DV2T5J+XC1T1a+fYry7Zco3z5V+fZLlf+Dm1+m\nfPs05cPVrsq3z1C+/Srl269Vvv065R+6+Y3Kh4t9lvLhZr9Z+fZblG+frXz7\nHOU/e/NblW+fq3y7KR9u9nnKt89Xvv1O5dvvVv5hq7P9PuXb71e+/QHlw92+\nQPn2B5UPpx/afKHy4WJ/SPlwsy9SPjzsi5Vvd+UfvvkS5duXKt++TPlws69Q\nPjzsK5UPpx/efJXy4WJ/Qvlws69WPjzsa5RvX6v8I1ZnuNifUj7c4G5fp3x4\n2p9W/nNWZ/t65cMVbnC3h/LhCacjN9+gfLjA1f6M8uEOD/uzyofTj2z+nPLh\nYn9B+XCzb1S+fZPy7S8q3/6S8o9ane2blW/fony42bcqHx72bcq3b1f+czdP\n5dt3KB+u9p3Kt+9SPjzsu5UPp6M336N8uMDVvlf5cLfvUz487fuV/6Ors/2A\n8u0HlQ83uMPDfkj5cDpm88PKh4v9iPLhZj+qfPsx5dvpqh35cHre5p12OMMF\nrvbOO9zsXXa427vu8LB3Uz6cjt28u/LtPZRv76l8uNl7KR8e9t7Kh9OPbd5H\n+XCBK9zgbu+nfHjC6bjN+yofLnCF23HIhwc84fR8nP/z1/IpcH3+Wr7t+ev1\n6M9fr9+AJ/y3L/jr9bd1fxS42rq/Gtxt3Y8DnnD68fV+znCBK9zgDg94wukF\nyLfj9wdXuMEdHnb8/uH0E2t9keFiq36ptuqnZqs+63bUf7bq02mrPk7Ho/6H\ni632pNrR/thqv7qt9m7Yal+nrfY7vRDtv63npWLrea7a8fxp63m423oeH7be\nD6Yd7x8nbH618u3TlW/rfa7a8f5p632323rfHrbe16et/oX0k/59K99W/0ax\n1V9U7eh/stV/1eFhR/+Xrf6xdOLqDBe42uqPa7b647p9n/LhCaef2hz9f7b6\nDwtc7eh/hDs84Amnk1ZnuNjR/2mr/7TZ6m/ttvpjh63+3Gmrvzf99OoMF7jC\nDe7wgCecTkY+XOAKN7jb0f9tq3982upfTz+zOfrfbfXXFzv6/219H2h2fH+w\n9X1i2Pq+Me34/vEi1y/Kt/V9pdj6PlNtfe9ptr4XdVvfq4at72PTPkf5P7tZ\n3/uyre+DxY7xJ7a+VzZb4yu6Hd8/7Rh/g7+nUzbr+2k+Zf17gSvcTln//Q4P\neMLpxevx5xevfy9wfTHyX7wef7dj/BU8bX1fTi/ZHOO/bH2PLra+Z1db41Oa\nre/l3Y7v73Z8/7c1HiH9nc0av5DtGH9nx/gHW+P7mq3xgB0e8ITTqZtj/CFc\n4Hrq+v83uMMDnnD6udUZLj+HfDvGX9oaT9JtjTcZdoz/sTWeNb3U7aPGv9ga\nz1JsjXeptsbDNFvjZ7od47/tGP8Np7/r9kP5tsbvFDvG38PN1vjubmt894Cn\nHfMPXub6WflwsWP8M9zgbsf8C3jaMf765aszXOBqazx3g7sd479tzY+Zdsy/\neYXbC+XDxdZ8oGprflGzY/6RrflLA572lcr/+c2aD5Xty5Rva/5UhZsd86/g\nYWu+1oTTaW6/lA8XuNofUj7c4QFPOL1ydYbLK5H/yvX4G9xfuZbfsDW/bL5y\nvV7p9PV65tPX611s3Q8VbnbMP7Bj/pOt+3faMf/o763Odsw/smP8nx3zf+z4\n/dsx/g+edsw/qGt9lW3VZ8XWeMBqR/1nq37sturTAU876t+/v1njBbMd4/9t\njc+vcLNj/L2t9mLY0f7A6Yy1Pc1wgSvc4A4PeJ6B/F9A+wsXW+1btdWetV9Y\ny6/bMf/jF9brN+2Y//Wq9X7KdtS/turLams+ZLP1++l21H+2fo/TVv2V/sH6\n+81wseP3Dze44/8fturDCadXb75E+XB59Xr8FW5wt1WfD3jC6TWo/+ECV7i9\nBvnweM16PvM1OP/Xov63NR+42Jo/XO2Yf2xrfnK3z1e+HfOfbc2PTv9ws+ZT\nZ/styrc1n7vaMf/bfp3y7Zj/bmu+/LRj/v3rVmdb8/ULXG3N72+21gPo8IAn\nnH5xdYaL/TLlww3u8IAnnF6/OsMFrnCDOzxej/N//Vp+6Q2r8xvW61FsrYdQ\n37Be3/YGXH871h+wdb9M+0zlv3G9v7Kt9QIKXG3dn83W+gAdHrbu72m/Vfn/\naHW29fsocIUb3OGBf3/C6cz1ePOZ6/mVM3H+Z67l1c5cy7OfuV6PYcfv78z1\n+qZ/jPvfjvvP1noe1Y71P+Bux/oj8ITTWaszXM5a//0KN7iftR7vsLV+yDxr\nPd/0Jtz/dtQ/b1rLq75pLc9mx/ofb0L5v2m9PvNN6/VLb8b1t3W/Frsp31Z9\n3mzV993W+hXDVvsw7Xcr/5+szrbal2K/T/lwgzs8bK2HMeH0ltXZVntX4Gpr\n/YwGd3jA01b7mv7pZq23ke14/4Er3Ox4/oEHPO14/zsb7T9czkb+2evxtrPX\n8+nwOBvnf/ZanumXVudfWq9H+SVcfzueP+Bu634a8LR1P6Zz1vs3w8WO+teO\n9V9s1ZfdVnsz7Fj/xtbvN/3y2r5lO37/tuqHasf6Q3a0v/CwY/0jOL11rb+y\nHfWfrfWgqn2C8m2tZ9VtrYc1bK2fNe2jlf/PNms9rgwXW+t5VbjBHR7whNO5\nyIfLuevxVlvrhTX7OOWfi/O3tR7YhNOvrOWX4QJXuP3Kej06POAJp4b8th5f\ngWtbz6/BHR5tLZ8Jp7et90d+21q+5W0o/7et16fZWi+u27H+nK3166b9dOWf\nt1nr5WVb6+kVW+vtVXtf5dtan6/bWs9vwBNO/3yz1gPMcIEr3OAOD3jC6Xzk\nn78eX4Er3OAOj/PX8plw+tXVGS6/upZ3hRvcf3W9XgOecHr7er0zXOAKt7ev\n/16HBzzh9I71+PM7cP7vQPnbeyrfjvUnba1POWytbzltrYeZ3rlZ62tmuNha\nj7PCDe7wwL837Vh/812r87vW4y1whRvc8e8NW+uDznetx5PejfN/93r8Ba5w\ngzs84Amn96zO70H5v2c9/vqe9fzae3D+dqw/aut+mXbUP+/F78/W/Vls1Y/V\n1vqhzVZ92m2tHzpsrRc6bdXP6V+szrbWAy226vdqR/tvq33ottqPYUf7Y6t9\nSu9b27dsR/trq72sttbjbHasv2nH+yc8bb0fpn+5Otux/iRc4WbH8x884Amn\n96/OcIEr3OAOD3jC6deQb0f/F1zhBnd42Hp+nnD6wGY9b2c7+p/gCjdbz/Md\nHrbWy5x2rH/565v1fp7t6H+y9X5R7Xj/sNWf0229rw9b7zPT1vt5umCz3oey\nrfelYuv9qtp6P2twt+P9F5623h/Tb2yO7392vH/a6q+ucLP1PaHb0f9tR/+7\nHd9fP7g627H+pB3rT9r6ftjs+P4BDzvWn4TTb67OttajLHCFG9xtfb8c8LT1\n/SZduDrb8f3bju8/dqw/acf3TzvWf7Nj/TU71j/5V6uzHeufwNXW99Bmx/pr\ndqy/Zsf3Tzu+f35oc6y/Z8f6a3asv2bH+mu2vq91W99HBzxtfZ9LH16d4fLh\n9f+vcPsw8uHx4fV454fX80kXrc4XreVR4HrRWn7Nju/P8LBj/MlF6/VKv7Ve\nz2zH9+/fwvW3Y/1PuNvx/d2O9Qdt3d/pYtz/tn6/xdb4gWrre1qz1X/V7eh/\ntFUfT1v1efrXqP/tWH/ZVv9utaP/11b/UYeHrfZqwqmvznCBK9zgbqs9HfCE\n02+v7XGGix3tP9zseP6w9Xw0bD1fTTv6/y9Zne1Y/9zW812FG9zhAU84fWR1\nhstH1uOpH1mPt9nx/eEjOP+PrOUzP7KWX7oU5Q8XuF66Xr8Gd1v3w8DfJ/69\n9FHkwwWuH8X1hzs8Porzh9Nl63+f4XIZ8uEGd3jA87K1PNLvrM6/s5ZfgSvc\n7Pj9wwOecLp8dYYLXOEG98tx/S/H+V++lm/6N+vvM9vR/2zH78/W+1qz1X/Y\nbfUPDjv6f+3Yf+KKzdq/Itt6Xy127H9h6/222fH+Cw942rH/xsdWZ7jAFW5w\nh8fHkA+nK9fzyVeu51vgeuVaPg3u8IAnnD6+On98vR4FrnCDOzzw7084XYV8\nuFyF84fbVWv59atw/W31n0xb/Yfp326O/j87+v/gakf/qx39v3b0/9jqD5xw\n+sTm2P/GVv9SsdVfWOEGd1v9VQOecPrk6gyXTyIfbnD/5Hr845Pr+U04Xb1Z\n+/3kq9fyK7b6z+rVa3k3uMMDnlev1y/9u/X6ZrjAFW5wh4et+2va0f98zeoM\nFzv6v+Fm6/7udtQ/dtQ/tn4v6d+j/rGj/oEr3OBuR/0DTzhdi98/XK5FPtyu\nXc+vX7uWx7h2La95Lcr/P+D623H/2bo/qx37X9mx/5Yd+3/Z2k9s2tqfLH1q\ns/Yzy3bsf2Zrv7Rqaz+1Bnc79l+zb1S+rf3c0n/cfJ3ybe0fV+zY/87WfoPN\n1n6G3dZ+iMPWfpfT1n6O6brNsf+j/Vrl26cr39Z+qc3W/q7d1n6xw9Z+tNM+\nWPn/yfe/8m3tl1vsrHw79t+Fu639egc8be3vmz7t+0/59t7Kt7W/cLV3U769\ns/LtR7X/sq39kqet/ZTTf/b9q/2X7Qe1/zJcbe3X3OBu3698W/tBT1v7R6fr\n/XtQvn2b8m3tX11t7XfdbO2H3W3tlz1s7a897c8q/79s1v7e2Y79v23tJ17t\n2H/cjv3Pbe23PuwPKd/W/u5pbI79323tJ1/gar9T+bb2q+/wgCec/uvqDBf7\nfOXDzT5P+XZTvn2u8u1zlH/D5jcr3z5L+fbrlG+/Vvn2Gcq3T1e+fZry7Vco\n/3c3v0z5cIEr3OAOj99d8yacPrM6wwWucIM7PD6zHs+E03/D+cPFfqny4QZ3\n+1Tlw9N+ifI/uzrDxT5F+XCDu/0i5cMTTv9988nKh4t9kvLhBnd42CcqH06f\nW53hYp+gfLjZxyvfLsqHp32s8v/H5mOUbx+tfPso5dtHKt8+QvnwsA9TPpw+\nvzrbhyofrvYhyrcPVj484Amn31v/vQwXuMLt95APD3jC6QurM1zsg5QPN7jb\nByofnnD6n5ufrnw7Kx+u9gHKhzs84AmnG1fnG5F/43p89cb1+NuNKP8b1+sz\nbN0/047773/h/rMPVz5c4QZ3eMATTjetzjetx1NuWo+/3rSeb7tpLY9+01p+\n4yaUv72/8v/35v2Ub++rfHsf5dt7KR/u9h7Kt3dXvr2b8r+4eVfl27soH65w\ns3dWPjzgae+k/N9fne2kfLjaj12+I99+dIe7/fAOD/uhHZ72gzucvrT5gR3O\n9v07XOBq36d8uMPDvlf5cPqD1dm+R/lwhRvc4QFPON28Ott3Kx+ucIM7/r0B\nTzh9Gflw+fJaPhVucP8yyh+ecLpldb4F1x+ucIM7POAJpz/E/QcXuMIN7vCA\nJ5xuRf6tOH+43rqWV4M7PG5dr8+0db+kP9p8p/LtqXz7NuXbtyrfvkX59s3K\nt29Svv0F5d+2+XPKt29Qvn298u3rlG9fq3z7GuXbVyvf/oTy/3jzVcqHC1zh\nBnd4wBNOt6/Hk+ECV7jB/fb1fAc84fQnqzNc4Ao3uMMDnnCayJ84/4nyt69Q\nvn258u1LlW9fonz7YuX/6eYPKd/+oPLtC5Rvv1/59juVb5+vfPtc5dvnKP+O\nzWcr336L8uEKN7jDA553IP8rm5vy7fOUb79d+fZ7lf+VtTz6V9byG/C0L1T+\nnaszXOAKtzvXf7/fuV6vYX9A+fb7lP/V9Xyy/W7lf3W9vhVuX13Lp8PD1v0w\n4XTXWt7Zfqvy71qvV70L199+s/Lts5QPTzj92eoMF7jCDe7wgCec7kY+XOAK\nN7jDwz5T+fYblf/nm1+vfLjYr1O+/Wrlw92uyrdPV759mvLv2fwy5dsvVb59\nqvLhZr9E+fCAJ5z+YnWGC1zhBnd4wBNO9yL/3vX8ClzhBnd4wPPetXzT11Zn\nuMD1a8iHOzzgCaf7Vme4wBVu963H123dTwOe9iuU/5erM1zgCje4/yXy4Qmn\n+3H/34/yhyvc4A4PeN6P8v86yh8uX1+Pr8IN7l9fy2PA047f/wNr/ZDhAle4\nwR0e8ITTN9bjyXD5Bq4/3OD+DVx/eH5jvR7pQfz+HkT5w9WO+gfu9inKh6f9\nIuX/1eoMF7jaJysf7vZJyoenfaLyH9p8gvLhYh+vfPsFyoc7POAJp79eneEC\nV7jBHR7whNPDm4vy4WIfp3y4wR0e8LSPVf43V2e4wBVu9jHKhwc87aOV/8jq\nDBf7KOXDzT5S+fCAp32E8r+1+XDl24cpH65wg7t9qPLhCadHV2e4wBVucIcH\nPOH0beTbhygfrnCDOzzgCafHVme4wNU+WPlwx38/4Amnv0E+XP5m/fcr3OAO\nD3jaByk/PW1xhot9oPLhBnd4wBNO37E6wwWu37EeX7Pj/OFhR/nDaafVGS5w\nhRvc4QFPOH0n8uECV7jBHR7fuZbHhNPOqzNc4Aq3ndfr0eEBTzh9F+4/uMAV\nbnCHhx33H5x2wf0HF7jCzX668uEBTzsr/7tXZ7jAFW5wh4d9gPLhtOvqbO+v\nfLja+ykf7va+yocnnL5n8z7Kt/dWPlztvZQPd3jYeyofTrutznCBK9zgDg94\nwulxyIcLXO09lG/vrnx4wBNOu6/O9m7Khyvc4A4PeCIvfS/y4QJXuMEdHvCE\n0x7r8WW4wNXeVflwt3dRPjzh9PjNOysfLvZOyocb3O2kfHjaj/3Ojvw9V2e4\n2I/ucIUb3O1HdnjAE05PWJ3h8gTk4+8Nf+/4+4AnnPba/LDy90I+/l7th5Rv\nP6B8+37l2/co375T+d+3eSrfvlX59k3Kt29Qvn298u3rlG9fo3z7E8rfe/OV\nyrevUL59ufLty5RvX6p8eNiXKB9OT1yd4QJXuD0R+fCA5xPX40/7rM5wges+\na3k0uO+zlt/YZy3faV+l/Cetzk9ar0+Bq3218p+0Xt/+JFx/+9PKt4fy912d\nbd1fBa5wgzs84AmnJyPf1v1c4Prk9Xzak9fz7fanlP/ktbzmk1H++63XK8Nl\nP1x/W/dTgzs84Amnp6zOcIHrU9bjaXbcf09Zj3/Ycf/Z8fvffy2fbF+r/P3X\n8qz7r+Xd9l+vR99/vZ7D/qzy7c8p//s3f1759heUb9+ofFv1YbO/qHz7ZuXD\n075F+Qes9W22b1O+rfq52nco31Z93u27lA9POD11893KhwtcbbUnDe72vcqH\nJ5zy6gwXuMIN7nk93gHPjPN/2lp++Wlr+Zanofzt25X/tPX6dXg8bb3eE05P\nX++PbOt+Kna0v7buxwZ3W/fvgCecnrE6w+UZ679f4faM9fg6POD5jPX80oGr\nM1zgCrcDkQ8PeMLpmaszXOAKt2eux9PhAU84HYTzhwtc4QZ3eMDzoPX6pWet\nzrbqw2Krvqy26tNmq77tdrT/drR/drR/B6P9sT+ofPsDyreb8u1zlG+/Ufn2\n65Rvv0r5P7C5Kh8ucIUb3OFhn6F8+7XKP2Tz65Vvn6l8+2zl229Vvn2u8g9Z\ny2fY5ykfTj+4+Xzlw8V+u/LhBnd4wBNOh67OcLHfqXy4wR0e8LTfrfxnr872\ne5UPV/t9yoe7/X7l27p/J5wO23yB8u24/+Fqf0j5cLcvUr59sfLteP/5oc3x\n/gEXO96/bD3fNbjDw47nPzgdvjrbqh8KXG09Pza4w8OO+gdOP7xZz5vZ1vNm\ngasdz592PH/ael8YturHCacjVme4wBVuR6x5HR7whNNzkA+X56z/fX3Oer4N\n7vB4zlpeE05Hrs5wORLlDze4wwOecPqR1RkucIUb3OEBTzgdhfyjcP5whRvc\n4QFPOD0X5Q8XuMIN7s/F9YcnnI5ene14/7bj/ocb3O14/7c/o3w4/ejqDBe4\nwg3u8PjR9XgmnI5ZneECV7gdg/OHBzyPWcs3PW91ft56PcrzcP3hZsf9Dw94\n2qpv07Gof+ECV7jZ0f8EDzvqfzj92OoMFzv6v2y1Rw3uttqzAU84Hbe2l9lW\ne1vs6P+xo//R7sq31d4PW88D09bzQnr+5guVb8fzB1xtPb80O55/bD1PDTue\nv+C/fcH+f47nP7jYeh6tcLP1PNvhAU9bz8fpxzfr+TnDxdb7RYUb3OFh6/l9\nwukFq7P9FuXDFW5whwc84fQTyIcLXH8C5w93eMDT1vtLOn51hsvx6/WocIM7\nPI5fr/eE0wvX+yPDBa5wgzs84Gnr/k0nrM5wgSvc4A4PeMLpJ/H7gwtc4WbH\n+xc84AmnEzfr/Srbqk8KXG29X0073qd+anWGC1zhZut9rMMDnnA6aXWGC1zh\nBnd42KqPJ5x+GvU5XGzV/xVucLfjfRKecDp5dYYLXG21Vw3u8IAnnH5mbQ8z\nXOAKN7jDA55wetHaPme4wBVucIcHPOH0s8iHC1zhBvef/f/P7/8ADfc/3g==\n\n      "
                  ]
                 ]
                }
               },
               {{}, {}}
              },
              AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
              Axes -> {False, False},
              AxesLabel -> {None, None},
              AxesOrigin -> {3.87611794*^9, 2634.2777777777837},
              DisplayFunction -> Identity,
              Frame -> {{True, True}, {True, True}},
              FrameLabel -> {{None, None}, {None, None}},
              FrameTicks ->
               FrontEndValueCache[
                {
                 {Automatic, Automatic},
                 {
                  Charting`DateTicksFunction[
                   Automatic,
                   DateTicksFormat -> {Automatic}
                  ],
                  Charting`DateTicksFunction[
                   Automatic,
                   DateTicksFormat -> {Automatic},
                   "TickLabels" -> None
                  ]
                 }
                },
                {
                 {Automatic, Automatic},
                 {
                  {
                   {
                    3.8761164*^9,
                    FormBox[
                     StyleBox[
                      "\"11:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.87612*^9,
                    FormBox[
                     StyleBox[
                      "\"12:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761236*^9,
                    FormBox[
                     StyleBox[
                      "\"13:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761272*^9,
                    FormBox[
                     StyleBox[
                      "\"14:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761308*^9,
                    FormBox[
                     StyleBox[
                      "\"15:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761164*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876117*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761176*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761182*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761188*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761194*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.87612*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.87612*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761206*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761212*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761218*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761224*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876123*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761236*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761236*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761242*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761248*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761254*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876126*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761266*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761272*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761272*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761278*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761284*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876129*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761296*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761302*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761308*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   }
                  },
                  {
                   {
                    3.8761164*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.87612*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761236*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761272*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761308*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761164*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876117*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761176*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761182*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761188*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761194*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.87612*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.87612*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761206*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761212*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761218*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761224*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876123*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761236*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761236*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761242*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761248*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761254*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876126*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761266*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761272*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761272*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761278*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761284*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876129*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761296*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761302*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761308*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   }
                  }
                 }
                }
               ],
              GridLines -> {None, None},
              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
              Method -> {
               "NoShowPlotTheme" -> Automatic,
               "AxisPadding" -> Scaled[0.02],
               "DefaultBoundaryStyle" -> Automatic,
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2,
                "TrackMousePosition" -> {True, False},
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2},
                 "HighlightPoint" -> {"ratio" -> 2},
                 "Droplines" -> {
                  "freeformCursorMode" -> True,
                  "placement" -> {"x" -> "All", "y" -> "None"}
                 }
                }
               },
               "DefaultMeshStyle" -> AbsolutePointSize[6],
               "DefaultPlotStyle" -> {
                Directive[
                 RGBColor[0.368417, 0.506779, 0.709798],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.880722, 0.611041, 0.142051],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.560181, 0.691569, 0.194885],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.922526, 0.385626, 0.209179],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.528488, 0.470624, 0.701351],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.772079, 0.431554, 0.102387],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.363898, 0.618501, 0.782349],
                 AbsoluteThickness[1.6]
                ],
                Directive[RGBColor[1, 0.75, 0], AbsoluteThickness[1.6]],
                Directive[
                 RGBColor[0.647624, 0.37816, 0.614037],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.571589, 0.586483, 0.],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.915, 0.3325, 0.2125],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.40082222609352647, 0.5220066643438841, 0.85],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[
                  0.9728288904374106,
                  0.621644452187053,
                  0.07336199581899142
                 ],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.28026441037696703, 0.715, 0.4292089322474965],
                 AbsoluteThickness[1.6]
                ]
               },
               "DomainPadding" -> Scaled[0.02],
               "PointSizeFunction" -> "SmallPointSize",
               "RangePadding" -> Scaled[0.05],
               "AllowMicroRanges" -> {True, False},
               "OptimizePlotMarkers" -> True,
               "OptimizePlotMarkers" -> True,
               "CoordinatesToolOptions" -> {
                "DisplayFunction" ->
                 ({Identity[Part[#1, 1]], Identity[Part[#1, 2]]} &),
                "CopiedValueFunction" ->
                 ({Identity[Part[#1, 1]], Identity[Part[#1, 2]]} &)
               }
              },
              PlotRange -> {
               {3.87611794*^9, 3.876129405*^9},
               {2634.2777777777837, 4510.}
              },
              PlotRangeClipping -> True,
              PlotRangePadding -> {
               {Scaled[0.02], Scaled[0.02]},
               {Scaled[0.05], Scaled[0.05]}
              },
              Ticks -> {{}, Automatic}
             ]
            ],
            "Output",
            CellLabel -> "Out[9]=",
            CellID -> 204138951
           ]
          },
          Open
         ]
        ],
        Cell["Compare:", "ExampleText", CellID -> 44293478],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[
             RowBox[
              {
               "AbsoluteTiming",
               "[",
               RowBox[
                {
                 "altitude2",
                 "=",
                 RowBox[
                  {
                   "FITImport",
                   "[",
                   RowBox[
                    {
                     "\"RH/ComputationalFitness/ExampleData/BikeRide.fit\"",
                     ",",
                     "\"Altitude\""
                    }
                   ],
                   "]"
                  }
                 ]
                }
               ],
               "]"
              }
             ]
            ],
            "Input",
            CellLabel -> "In[10]:=",
            CellID -> 12353131
           ],
           Cell[
            BoxData[
             RowBox[
              {
               "{",
               RowBox[
                {
                 "0.8062323`",
                 ",",
                 InterpretationBox[
                  RowBox[
                   {
                    TagBox["TimeSeries", "SummaryHead"],
                    "[",
                    DynamicModuleBox[
                     {Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
                     TemplateBox[
                      {
                       PaneSelectorBox[
                        {
                         False ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = True),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              {
                               { },
                               {
                                { },
                                { },
                                {
                                 GrayLevel[0.5],
                                 PointSize[0.125],
                                 AbsoluteThickness[1.5],
                                 StyleBox[
                                  LineBox[
                                   CompressedData[
                                    "\n1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt\nq3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW\nxcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5\n+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL\nTFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC\nixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS\nsiiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN\nUlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW\ng/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM\nvU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j\n0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi\ncRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa\n3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951\n\n                    "
                                   ]
                                  ],
                                  {FontFamily -> "Arial"},
                                  StripOnInput -> False
                                 ]
                                }
                               },
                               { }
                              },
                              AspectRatio -> 1,
                              Axes -> {False, False},
                              AxesLabel -> {None, None},
                              AxesOrigin -> {0., 0.},
                              Background -> GrayLevel[0.93],
                              BaseStyle -> {FontFamily -> "Arial"},
                              DisplayFunction -> Identity,
                              Frame -> {{True, True}, {True, True}},
                              FrameLabel -> {{None, None}, {None, None}},
                              FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.7]],
                              FrameTicks -> {{None, None}, {None, None}},
                              GridLines -> {None, None},
                              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ],
                              LabelStyle -> {FontFamily -> "Arial"},
                              Method -> {"ScalingFunctions" -> None},
                              PlotRange -> {{0., 50.}, {-7.030970816185017, 4.273359296964368}},
                              PlotRangeClipping -> True,
                              PlotRangePadding -> {{1, 1}, {1, 1}},
                              Ticks -> {Automatic, Automatic}
                             ],
                             GridBox[
                              {
                               {
                                TagBox[
                                 TemplateBox[
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Time: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      TemplateBox[
                                       {
                                        RowBox[
                                         {
                                          "\"30 Oct 2022 06:25:40\"",
                                          StyleBox[
                                           RowBox[
                                            {
                                             "\"GMT\"",
                                             "\[InvisibleSpace]",
                                             StyleBox[
                                              RowBox[{"-", "5"}],
                                              NumberMarks -> False,
                                              StripOnInput -> False
                                             ]
                                            }
                                           ],
                                           FontColor -> GrayLevel[0.5]
                                          ]
                                         }
                                        ],
                                        RowBox[
                                         {
                                          "DateObject",
                                          "[",
                                          RowBox[
                                           {
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "2022",
                                                ",",
                                                "10",
                                                ",",
                                                "30",
                                                ",",
                                                "6",
                                                ",",
                                                "25",
                                                ",",
                                                "40"
                                               }
                                              ],
                                              "}"
                                             }
                                            ],
                                            ",",
                                            "\"Instant\"",
                                            ",",
                                            "\"Gregorian\"",
                                            ",",
                                            RowBox[{"-", "5.`"}],
                                            ",",
                                            "\"SmearedUTC\"",
                                            ",",
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "\"Day\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"MonthNameShort\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Year\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Hour\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Minute\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Second\""
                                               }
                                              ],
                                              "}"
                                             }
                                            ]
                                           }
                                          ],
                                          "]"
                                         }
                                        ]
                                       },
                                       "DateObject",
                                       Editable -> False
                                      ],
                                      "SummaryItem"
                                     ]
                                    }
                                   ],
                                   RowBox[
                                    {
                                     TagBox["\" to \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      TemplateBox[
                                       {
                                        RowBox[
                                         {
                                          "\"30 Oct 2022 09:36:45\"",
                                          StyleBox[
                                           RowBox[
                                            {
                                             "\"GMT\"",
                                             "\[InvisibleSpace]",
                                             StyleBox[
                                              RowBox[{"-", "5"}],
                                              NumberMarks -> False,
                                              StripOnInput -> False
                                             ]
                                            }
                                           ],
                                           FontColor -> GrayLevel[0.5]
                                          ]
                                         }
                                        ],
                                        RowBox[
                                         {
                                          "DateObject",
                                          "[",
                                          RowBox[
                                           {
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "2022",
                                                ",",
                                                "10",
                                                ",",
                                                "30",
                                                ",",
                                                "9",
                                                ",",
                                                "36",
                                                ",",
                                                "45"
                                               }
                                              ],
                                              "}"
                                             }
                                            ],
                                            ",",
                                            "\"Instant\"",
                                            ",",
                                            "\"Gregorian\"",
                                            ",",
                                            RowBox[{"-", "5.`"}],
                                            ",",
                                            "\"SmearedUTC\"",
                                            ",",
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "\"Day\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"MonthNameShort\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Year\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Hour\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Minute\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Second\""
                                               }
                                              ],
                                              "}"
                                             }
                                            ]
                                           }
                                          ],
                                          "]"
                                         }
                                        ]
                                       },
                                       "DateObject",
                                       Editable -> False
                                      ],
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  },
                                  "RowDefault"
                                 ],
                                 "SummaryItem"
                                ],
                                "\[SpanFromLeft]"
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Data points: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["11376", "SummaryItem"]
                                 }
                                ],
                                "\[SpanFromLeft]"
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ],
                         True ->
                          GridBox[
                           {
                            {
                             PaneBox[
                              ButtonBox[
                               DynamicBox[
                                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
                               ],
                               ButtonFunction :> (Typeset`open$$ = False),
                               Appearance -> None,
                               BaseStyle -> { },
                               Evaluator -> Automatic,
                               Method -> "Preemptive"
                              ],
                              Alignment -> {Center, Center},
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ]
                             ],
                             GraphicsBox[
                              {
                               { },
                               {
                                { },
                                { },
                                {
                                 GrayLevel[0.5],
                                 PointSize[0.125],
                                 AbsoluteThickness[1.5],
                                 StyleBox[
                                  LineBox[
                                   CompressedData[
                                    "\n1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt\nq3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW\nxcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5\n+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL\nTFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC\nixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS\nsiiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN\nUlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW\ng/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM\nvU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j\n0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi\ncRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa\n3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951\n\n                    "
                                   ]
                                  ],
                                  {FontFamily -> "Arial"},
                                  StripOnInput -> False
                                 ]
                                }
                               },
                               { }
                              },
                              AspectRatio -> 1,
                              Axes -> {False, False},
                              AxesLabel -> {None, None},
                              AxesOrigin -> {0., 0.},
                              Background -> GrayLevel[0.93],
                              BaseStyle -> {FontFamily -> "Arial"},
                              DisplayFunction -> Identity,
                              Frame -> {{True, True}, {True, True}},
                              FrameLabel -> {{None, None}, {None, None}},
                              FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.7]],
                              FrameTicks -> {{None, None}, {None, None}},
                              GridLines -> {None, None},
                              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
                              ImageSize ->
                               Dynamic[
                                {
                                 Automatic,
                                 Times[
                                  3.5,
                                  Times[
                                   CurrentValue["FontCapHeight"],
                                   AbsoluteCurrentValue[Magnification]^(-1)
                                  ]
                                 ]
                                }
                               ],
                              LabelStyle -> {FontFamily -> "Arial"},
                              Method -> {"ScalingFunctions" -> None},
                              PlotRange -> {{0., 50.}, {-7.030970816185017, 4.273359296964368}},
                              PlotRangeClipping -> True,
                              PlotRangePadding -> {{1, 1}, {1, 1}},
                              Ticks -> {Automatic, Automatic}
                             ],
                             GridBox[
                              {
                               {
                                TagBox[
                                 TemplateBox[
                                  {
                                   RowBox[
                                    {
                                     TagBox["\"Time: \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      TemplateBox[
                                       {
                                        RowBox[
                                         {
                                          "\"30 Oct 2022 06:25:40\"",
                                          StyleBox[
                                           RowBox[
                                            {
                                             "\"GMT\"",
                                             "\[InvisibleSpace]",
                                             StyleBox[
                                              RowBox[{"-", "5"}],
                                              NumberMarks -> False,
                                              StripOnInput -> False
                                             ]
                                            }
                                           ],
                                           FontColor -> GrayLevel[0.5]
                                          ]
                                         }
                                        ],
                                        RowBox[
                                         {
                                          "DateObject",
                                          "[",
                                          RowBox[
                                           {
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "2022",
                                                ",",
                                                "10",
                                                ",",
                                                "30",
                                                ",",
                                                "6",
                                                ",",
                                                "25",
                                                ",",
                                                "40"
                                               }
                                              ],
                                              "}"
                                             }
                                            ],
                                            ",",
                                            "\"Instant\"",
                                            ",",
                                            "\"Gregorian\"",
                                            ",",
                                            RowBox[{"-", "5.`"}],
                                            ",",
                                            "\"SmearedUTC\"",
                                            ",",
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "\"Day\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"MonthNameShort\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Year\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Hour\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Minute\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Second\""
                                               }
                                              ],
                                              "}"
                                             }
                                            ]
                                           }
                                          ],
                                          "]"
                                         }
                                        ]
                                       },
                                       "DateObject",
                                       Editable -> False
                                      ],
                                      "SummaryItem"
                                     ]
                                    }
                                   ],
                                   RowBox[
                                    {
                                     TagBox["\" to \"", "SummaryItemAnnotation"],
                                     "\[InvisibleSpace]",
                                     TagBox[
                                      TemplateBox[
                                       {
                                        RowBox[
                                         {
                                          "\"30 Oct 2022 09:36:45\"",
                                          StyleBox[
                                           RowBox[
                                            {
                                             "\"GMT\"",
                                             "\[InvisibleSpace]",
                                             StyleBox[
                                              RowBox[{"-", "5"}],
                                              NumberMarks -> False,
                                              StripOnInput -> False
                                             ]
                                            }
                                           ],
                                           FontColor -> GrayLevel[0.5]
                                          ]
                                         }
                                        ],
                                        RowBox[
                                         {
                                          "DateObject",
                                          "[",
                                          RowBox[
                                           {
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "2022",
                                                ",",
                                                "10",
                                                ",",
                                                "30",
                                                ",",
                                                "9",
                                                ",",
                                                "36",
                                                ",",
                                                "45"
                                               }
                                              ],
                                              "}"
                                             }
                                            ],
                                            ",",
                                            "\"Instant\"",
                                            ",",
                                            "\"Gregorian\"",
                                            ",",
                                            RowBox[{"-", "5.`"}],
                                            ",",
                                            "\"SmearedUTC\"",
                                            ",",
                                            RowBox[
                                             {
                                              "{",
                                              RowBox[
                                               {
                                                "\"Day\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"MonthNameShort\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Year\"",
                                                ",",
                                                "\" \"",
                                                ",",
                                                "\"Hour\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Minute\"",
                                                ",",
                                                "\":\"",
                                                ",",
                                                "\"Second\""
                                               }
                                              ],
                                              "}"
                                             }
                                            ]
                                           }
                                          ],
                                          "]"
                                         }
                                        ]
                                       },
                                       "DateObject",
                                       Editable -> False
                                      ],
                                      "SummaryItem"
                                     ]
                                    }
                                   ]
                                  },
                                  "RowDefault"
                                 ],
                                 "SummaryItem"
                                ],
                                "\[SpanFromLeft]"
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Data points: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["11376", "SummaryItem"]
                                 }
                                ],
                                "\[SpanFromLeft]"
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Regular: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["False", "SummaryItem"]
                                 }
                                ],
                                RowBox[
                                 {
                                  TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["1", "SummaryItem"]
                                 }
                                ]
                               },
                               {
                                RowBox[
                                 {
                                  TagBox["\"Metadata: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox["None", "SummaryItem"]
                                 }
                                ],
                                RowBox[
                                 {
                                  TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   RowBox[
                                    {
                                     "{",
                                     RowBox[{FractionBox["1", "86400"], ",", "\"Day\""}],
                                     "}"
                                    }
                                   ],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               },
                               {
                                TagBox["\"\"", "SummaryItem"],
                                RowBox[
                                 {
                                  TagBox["\"Resampling: \"", "SummaryItemAnnotation"],
                                  "\[InvisibleSpace]",
                                  TagBox[
                                   RowBox[{"{", RowBox[{"\"Interpolation\"", ",", "1"}], "}"}],
                                   "SummaryItem"
                                  ]
                                 }
                                ]
                               }
                              },
                              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                              AutoDelete -> False,
                              GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                              GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
                              BaseStyle -> {
                               ShowStringCharacters -> False,
                               NumberMarks -> False,
                               PrintPrecision -> 3,
                               ShowSyntaxStyles -> False
                              }
                             ]
                            }
                           },
                           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                           AutoDelete -> False,
                           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                           BaselinePosition -> {1, 1}
                          ]
                        },
                        Dynamic[Typeset`open$$],
                        ImageSize -> Automatic
                       ]
                      },
                      "SummaryPanel"
                     ],
                     DynamicModuleValues :> { }
                    ],
                    "]"
                   }
                  ],
                  TemporalData[
                   TimeSeries,
                   {
                    {
                     QuantityArray[
                      StructuredArray`StructuredData[
                       {11376},
                       {
                        CompressedData[
                         "\n1:eJzdnXl8Tsf791NNNSXV0FRTDYIgiqIoirrsO6FoqqqpphpbRCSRTfZ9vbMg\nat9TTTXVVIOU1JpqEFtRe1F7UVuQ6nO+5z4f87yu+zWvcxL6/f2e56/3K9xn\nzsycWa65tmkwburwz56xsrLybmFldWN0afCnjp/S/P7zVge7eOty8qllj4K6\nPn1GZy0a8fCtytNo/SvK/EezrcrrWrL4u4xRIS9XnKc9U3PLbSrPG53tn3tQ\nPlVKp5XVv31wwZKuds9+9HD//zzDgx7YlP+oz7xzN/PLc4z//mlRVm9Zv6Lf\n8X3495aNHz7OMI75vBjxRk7Og76W7OKXOzxo+NOnc1Fe+f0xT4+21b9fGfh5\nxXl75HrX+9P0eXzxjw8CQipOXg7ey+uP74PviXFit/607aPQqeSdstfjnxFT\nyW3x8qIqV72owDfTwXqLF5Xe/NjJppcXubfu41ztOS+64dXCxXbHFMp5tdqR\nGj5T6EjEM9EvfTSFOo66ccyubeVpc7WslV2/Jyfqg/rxeuLv8K9rtagRJ+ja\n8/XwF+cLOh1tdND22ymP2wsWWbcPqX5sCpm+6Fpa7caUx/3SeseQgBfqeJHV\nmPdLbFp5UUDdacVVvQQvnkzcZv21F8VXmz/52cNeVPbL957P1J5K2fd22FmR\n6P/TQy65/50p5jFfFzHv+Dzj45+PP4yX3LeViqZ7U3bErrJ787zJ89UDg+7l\nCbqOO3zXf6M3OZWdGuBf6k02Pc/dvvObJW+kXFzod96bjhy52u/OdUsWNbr5\nl+8DOXO87sy/bT3tMbPW3+/j+5IlQ6wf3bj1mpweQ6vMm+4sf94oeX0qSqPv\n0WvPv0X0Ezjoi6q9b71pyXbnq1336STo2PqluX/1tOTV7a9eu+kmeNDOcc60\nT6dR4YdO3W9OmUYBXVp2804RdI9rc+n6nGnUb3/7zKlLp1Hruu90vZ5rSQfP\ndy94/SBo9V2P9D9/kvPi3306e5UI6v0e70F9QNNNl1k3IkX90S7r4Jd7+gyx\npF6/8P5A+egP9AMoaw9nab+B56/9+u+zIHNo2pQzgotPvtfp2pVplNzM7ezk\nu9NozGb3DpOr+1Cvap+dufKKD7UYOSFpkpMP2S+e0v7KG4Ln2vsnXO4mmP9L\n6IlLI3wo/hOl4yf4kHdu0jFPXx+iHlmtPBN8yCUl++iFTB+yOzI/6vOFPlRc\n8GXEHz/6UN6za5qPL/ah8Lnrwj474UOTz21odv6CD9nalew7W3M63Vbl/+mU\n2/lE4O+dp5On4+UZn3w4nVw//7PBmc+mk9Pfd/1OB00nm34P67vHTKcjJ571\n/fiL6ZQz3bZ47DfTybTJzufk+unkMeK1HSf2TKdBi+p6f3R0OrW73KDOibPT\nybF9k21j/pxOV3e96TDmWV86+ErbLcde9KXlX3WufayhLyXf7VY0uqUv+Xbv\nNfG3Dr7U7/CgTUcH+ZLDlJG1jn7iS1YFHxS6Tfal0sHj7NwifKkge/yGw0m+\nFP/m1BqHF/vSmG0zxv36vWCL0eHrDu0StF8R7T7ykC+VX4+vduiUL5XEpI89\neNuX8ktn2Yz4x5fmv/7F2gMv+FH0+IVj3rP3o8nfLq16oJ4fUd+vRu9v60d2\nJ75bs6+fH5U1LXAb9p4fnfYprLLvI8E8m+2jSn38KHzh7tV74/zItd2vj/bM\nF+wS9lvOkFV+5Lzr5PA93/qR7StnywcX+tHtjy+s3L3Dj46vvuI6eJ8fbbtz\n/UHJMT/KpdvLB/3hR1lJZUNKbviRR4Nnlv3ynD8Nmvzc4IF2/tTxhxfu7arj\nTzaDaw3c1cqfbsypfaf/O/505Pc6i37u5U9FLev37z/Un0xbmy7o5+FP7h+0\nvtk30J/6LW83b2eUP7W73rF331RB65juc/ssE7y6t3fPHV/7U+FnQ+Zs3+JP\ny/OGd++925+SH466su2woG+fD2f1+t2feh3/9FLPe4Ktm3pmbn1mhgUdfCZ3\n7Wk7g6x+9L6wpbbgxef90ns0mEGlwwM7b2k+gwoWzDzf/e0ZtPhiRNpPNIPi\n28Z26j5wBnmHJp4tGino9nNqCrkLkn1mh6KJlnT5eM6Zbn6C9qvnJW0OEyy/\nvah9t0TBc92Wn9qUJViSmJPw7iLB/EO5bTd9WXnOd/r2RNd844ye9H3cj5ue\nnLLyef14e3l/oJ/Qf+hXWf/rfRf+7/y76n1f2Xc2Stk44OOBf3/06+R169t0\n/XkGjXhm07HCAzOoy6AtMV1OziC733cd7XxrBpW12Bu18e8ZVLzl8OENtQIe\nM9vtdPMNTQMofNm5Q53eCiDPPy+Gre8SQB2jbx4oGBZATnvvzOw4JoBs6zxo\nWjBe8Pg3VUJ+CA6gbQ+qNukQG0C5vauXrjMFUMixl53XrQggjyYOe9rnBdCg\n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\nfl15bl9KXk5gJLndS4u5GBqp6dkjKf/z2dY5qZE0f60ygOdGUlnDJS0v5ETS\n5H7LqjRdE0kjMlflriyIpBJV/648d/KrUU22Ks+pevhIcmmWZ7VydyRFq/p4\nwbJNBSNW/B6p6ecj6fQLPz5yvqaU12rzAY+/BLsEbZ15rlwwb9H24c5Vosh5\n+86mHs9HUfbln8uX2UZp+v0oCm+/Z2WjV6M0PX8UeYbvd13WIIqOrzjY+GyT\nKCq+cWTvuDaCeaodQCnvk1NDGna3pG3u2bIlA5Xy7l5Y2mBUlGYviNLsBVG0\nLfnGXadJUdRx7V+/uHtHafaDKMpqeH+AU3gUhUz5+/aixCjyKHhmUf1ZUZo9\nIYqKXGzqnVoumKvaF5Tn59ZYsDA/imzO1epbb3MU3Xjz1ZsLflaeC3x9Xt2D\nyu+31e+94GSUZm+I0uwNUWQa7TJ3/q0osg5/w+t4WRS532h9bZ5NtGZ/iKZC\nZXh96BBN7ZTjyby60ZSj2iOiyXFf1yt1XKLJ2rHHrC/eiqar4/t0q9M1mtyT\n+9mP7qE8/+2AS3P7Rmt2imhq3XCY5wfvR2v2CsHkjPcvOHwerdkvosn3xIfp\n2dOiaYyLe2eHkGjNjiHYepNn2qvp0bT87ESP92cLOrwwpdOceUp5qr1DKW/E\ntLO1VyrlBU4vGPVVNCmrVsrsvGjN/hFNpZcCO9TeGE29XgqxHVWklN8u9Mys\n7dGaPSRas4dEU/yu2PazfovW7CLR5P1K0in784Ju7mkJWdejNXtJNNFXmW3t\nH0RrdhPBxar9JOYx7bvPj3v5JUvGq/YV48RzvHyXu3NOZFoLoh6oH+qL+oPn\n3knJH3FZkLcXRH9wyn6P8vBe1Av19VbtSTHkVr4yb3gzpb6Tv25Vq1MMzf/h\n26PpPWMousq6qJpDYmiysrymu8VodqUY6nJ2S4RpSoxmX1J+/97PVq4zld+r\ndibB0zUONkubE0MjVD1UjKaHUp5bfnxmam6Mpo+KofB3zu9L+UnQM+ZS8Isl\ngmY9VAy5ll5rnPKroFkPJWjWPwk6jb8bmHwlRtNHxZDttw8a2d5V3qPqpQRv\nP1QETqtY8lT1U7F0vM+zAdWrx5KrqoeKpW3pzzdMeiVW00fFUu7x6iXVnGI1\nvVQsZTW18098o+LE8ygP5YN4L+qD+qHeaBfaj35CP6J/0d/4Dvguky/tGzE0\nQ5/8O6I8s75QfA/e73r9bZR4DuWBaD/eB/Jx0PH1v/banrEcLzLi95xGxxfq\nje+mN574ODLrNQU9fnTYldBNcJBNXd8XBsRq+s5Yavdeg3oJI2I1/bqg2c4a\nSzaXmvnET4ilEFUvqpSj2l1j6UjoWzviQpVyfn7b+/mEWE1Pqjz3cbdtVRfG\nUsDqnl6xOYJmvWksud/p61D1O8GDdQZc611gyX40aEvMj5Y0610rT14e6oH6\nof6DVP2vaC/6A/1l1htb9i8n/x5GGeJj71Stvf58x3jA+ODzHZTNi3+LfF2U\nEfVG+8x6etH+io5bx4WNi20+FuP2Rts3HW18xXgF8X0xfnPsO9eJy4zV7E6x\nmr5ffxxjHLVOUlpSHKvZs2I1u4BSToMPiqxPKM9N+mhi9AXlOdUuoDyn+hXE\navrwuMdcPmii57PPW5L/rvCZ8ZuiymMfE+WBB9d9Ym/9lyXxfk7UzyjxHMrF\ne1Ef1NOs54/T9PuCvr8rAoGj4JiWM8ZHNhE06+HjqFdAsF2VNoIttoZtiOgc\np+njBe1rRHs800fQrJ+Xs9wtvkaEqz7xe5TL34v6mO0FluT1R7v+bfL38nqh\n3nrU62c9yvrbV7ULx9HFZckFVh8q3121owiW/mkaF/6ZYEGnWbZW3oItVHuL\n4OL/HDiDBM12GOX9exe4/xMdp/k9xGn2mDjN7yFOs8vEkV2f79bOXB+n2WWU\n3x3bWHXmHuV3TYryyo/EEan2GeX307aNDjkbR/MLi63Lr8VpdhrB6Od3rwku\n06fZrq/PycP3uT2sEv+YIxYcqhL8omCXi0dzH7war9mD4jV7kPL/qj1I+X/V\nHqT8/+17wwM+idfsQPHkmWi1aoZ/vGb/iaeOTi889E+KJ6dJL664O0vQbP+J\nJ5t1NYf6L47X7D/xdMOq9v07qwXN9p94clXtPoLbZtcbfGezUr5qB4qn3DMN\n7/nuUspX7UBK+S2aLrl9UCl3RvOBvqcEPba0unPrUrxmD4rX7EHx1M6tY/9b\nj+IpZ+Y79dpaJ5Djsi63fF4QNNuJEuiqIo741EugI1H9b950SaBBXw7c0ebN\nBCraM3jetLbK71X7UQKZPEZd9+6nPPfN6Lk3hieQ+4OxPb0/SqCD9T9xyBuX\nQP16f3rt+ueCZjuTnK1Nn8+Z6mNJvef0yjPbtQQdjk3qfj1EMNnKq3arSEGr\nJt5XvOIEfVV7mOBFb99Zf6Yn0BjVPpZApRsDunnNF+T/3u9MkP2aJUq9qs68\ndG1lgmZPE3/zf39S8nJB1ENG3g4Z0T49Gi2P95OMvD3Lh0VkTvk2QbNLKt9v\nfkzXaxuV77YlrlbLn5TvdSHhwuQdCZq9UqnXW6npV0sFzXZLwRbFs89fOZ+g\n2TErTpTTa2ZG58nHxHtRD9QT9db7XrLxged5e9Eus11W1APtsn95XtqkGwma\nXTaRzuUsOzvxuUQqubUq5fJLluyl2msF8e94DuWhfLyP9zP64UkpKw/tR7+g\nvzBPMY8x/yu6ruA5lINyMW7xPnxf1Af1Q79gfKDfzHbyBCr/aFGnKw/EdzHb\nyy37v4XHGtvV9QUXJ+SdueSsfAfVnp5I8Qfzkya0SqRy1a6eSN7117e/1En5\nXqp9XSl34o+nPHsp31G1sycSff9TwsUhgvm/bR3rMkLQxWpHW88PEmm+ao9P\nJLuBu05c+DSRJqv290Q6fXp/mwsBiVTc/PCx8VGJmr1d+f1Pp1qNz06ksjZ/\nrGmco/z+/YtRn32dqNnbEzV7eyJlf3RvlPP+RLq9++9DZ88kanb3RHJ913rk\nspuJtO3Tqm+cvZtIzqr9PYmy79cI/b16EoX3etllXO0k8kx7df8ZpyQ6nv/a\nqgZNkqhjY6cmZ9onUa5qf0+iLNX+nkQhqt09iW4819LZfWQSeaj29yQ64tpm\nz6mPk2iQaocXLJrXPuDjiUnUTrXHK+X90anhKV+lvDbvlowNS9Ls8kq5IT38\nTyYo5e3s4zQ2S3lO+Xnd5UnkmPNevRPfJWl2+SS62nWMz/FiwYPx7o5jDiRR\n4QGPHcdOJGn26iTKqTfB+8OLgo6qHVopZ8KUOsf+SiJr1b6tlKPapZPJ/R8/\nr9+eT6Z+A4IcRtcSXK7aq5MpWbVXC170Sypy65JMY1T7dTIVVM+ydxuWTC1U\ne2yyZo9N1uy6yZqdV/l9hxWFo4KTNTut8vvdX9uNMiVrduFkzV6dTCX/MVhs\nSNbsxsk0P3Wn7Yi9yWSf//OZzIPJVK7al5PpnGrXTSa3qQerHfgzmVyeOzF2\n/7MpNF+1U6dQtN/ZE+kvp9Dp85fGDGuUQsWt/6y6r2UKdVHj21IoL/ivPNeO\nKZS94+7o0h4pZKvahZXnaj60dh2cotmHU2jEqmc/GDpOeb7kuTfTPleeU+PV\nlOfG1YhMDUnR7McpdHu//TNDklPoeN3Xvto9O0WzJ6fQNs+6IwcvSaGOqfXf\nSFmZosWxKc/1f+O9kiLlOdXOrDy3vvX+pFLBbardOYVyh3ZqknReec6v88Nd\nl1MoRLU/p9CNar2G7vonhTzUeLdUOjKy3/3+1VKpnRr3lko5V1wH96+fSo6q\nfTqVTG+PvFfcTNBajYtLpZCID5b0a5eq2a9TyaPko4HF76ZqduxUGvTquDt9\n+6dq9myl/HHjF+18T9Dx64n9+461pHWZ160dnqma3VvQ3dPPJzZA8GDKjL47\nZqZq9vBUKjwSfLN3fCq1fjRzR0xKKi1vFD5ve0aqZh8XTPaK7t17QSpZZcXW\niVkq6Ls+/vq2Val0VbWjK++xTpnba63ynmZpXtE/KOWrdnWl/C9mXeu5Uylf\nta8r5Z6fO2frPqVcNR5QKa/1wu49jyvlqXZ3wdLtK2f1uJlKvVS7eyq1UO3u\nabT4w28uda+aRuVqHGGaZmdPozFdCi8UNU7T7Oxp1CuuKJ1ap1GL/ds6F72T\nRvZ1fz7frXcaxff4ZUPYAOX5z3enbR6aptnh0+jc2n2duo0WLFGWuU0eaZTf\n77eUd6cKmu30aTQ/82SHTYFpmr0+jcqePb9uZkKaFseYRm6+V9p3nauUo9rx\n04g2Xz9VuEx5vtrthC5rlOdGlrUtLEijaNWurzy/qPxE561pNEK176dRlw+f\nfz74RBpl//Ji7DvX0shWtfOnUXjtWq033FPq07r6NcdnTOSl2vtNmp3fRAuD\nX5ozv7qJStR4VxPF7ni5u2Ntk2bvN2n2fuW5mg5X5jmZaNQYx1mvNzfRroh6\nEz9sbdLiK0307iqnbvPam2htSUP7Y++YyOUv50t1yES/q34AynNqHLPy+3HN\nPX8baqKyuJZd64xUfq/6BZjoP2aS0aNN9J9tZ+7HJhqhNPeoh4lqqH4CJurS\ns+P4D6aa6K7qJ2Ai59QudkcDld+r8ZomzV/ApPkLmDR/ARPlqXGcJlJGfyeH\nLJMWz2miHesHFxxeZqLwkj1LZ6w00Rrr4ePeX2PS/AdMdLLLoQYd1im/HzrK\n9nCB8vu4o7+sKzLR7c1jkmYXK7/ff8Lv7V9M1FD1KzDR8WqftK99wESz6/5e\nf90hE20b+dmpWSdMFOr5x8/tT5voL9XfwES5iyckvHJR+b0a/6n8/sqUtrP+\nMml+CMrv3/Y5Yf+3iZTT3M78f5Tfq3GT6ZpfQrrml5BOQ0qC2tjXStf8E9Lp\n7VfDjmU6pmv+Cela/KLy+7iY0e+1UH6v+isov/86rlVmm3TaovotKM+pfgvK\nc/eSjtbqojxXN3XN8O7pVE/1Y0inIz1MURl90ilD9WdIp0GeGW77B6ZTkOrX\nIPin6t+QTjlHsg+nf5hO4668tqXN2HRyfPRF7j53wYxGCyJqjk+nqv0XjRo2\nSdDsB6GU57Wkebq3Ul7mMqt9fumaP4RS3voVh+yC0+nXk6tWu4YLmuMF02mA\n9eowU0w6bWqWO6I0MV3zl0int4auaWZnSqern7Syz8tIp5W+eY+GzkqnOl+s\nPZD2haDZn0IpR40zTCdrZXq+tEIpT/WvUMqrtn740NVKeaqfhVKO6mch6D7y\nx/I9+Up5qt9FOqWqfhfp1G/xTyuHbE6nKqr/RToVbt8anLotnfxV/wtlybmy\n3XXPz+l0WfXDSKexqh9GOu1X/TDSKfnDkr0pR9M1fwylnIg9y3efTNf8MpRy\nVpYGvnguXfPLSNf8MZRybh5slPJnuuaXoZRX+3BZya10zS8jXfPLSNf8MTI0\nP4wMWpp7alCJTQbV3n+mgW0NwT6qP0YGbVD9MDLIt8fFxb/UzaA3VX8M5bmg\nSe5fNc4gpbQBA10yqHTtn/WTWmZQouqfkUGPLk87NbF9BvmofhoZ9Ifqp5FB\no1U/DcH4zId1qw3OoB6qv0YGFahxkMpzJ//ZmfB+hua/kaH5b2TQniFV+/b/\nPEPz4xAsj02o2myq4Lq51W4WT8vQ4igF39hsu8NmRobm/5FBC8/VmNcvJINq\nVavpHR8haPYHUcpR/UGU59T4S+X3ql9IBrltf33uznkZVHK5rtfzSzIo9u+F\nbquWZdAD1V8kg/LbN3SI+yqDfp+y4vD47zLIbqXLnD4bM2iX6jeSQe+qfiMZ\nVHajRfcd2zM0/5EMzX9EcP6QtYfO78+gUZ+0LYo5lKH5kyjP53aY+NzpDM2v\nJIOa3OtsH3M5Q/MrydD8STKoRg/aZH0ng4pH/JSz/F4G3U3u5Rn9TwatVf1K\nMmny2j5dt1kLNlH9TDLp9OF+tayrZVIN1c8kk7r0G5q+9bVMuqv6mWTSRNXP\nJJOcM9/r3NM5k7ILRtpFNcsk25Pvn9/ypuAO1e8kk8KfHb2hSrtMzf9EeX7I\nWI/IdzPp5HT3Tlt6ZtLwueNqVOmfqfmfKM9t8jjbfYhg+L7zu8+4ZtKaFyak\n/OSWqfmlZFLDVpPGPTM2k2aPmNKh+6eZVC1oqm2EZ6bmp5Kp+alkUu7h24sX\n+ynPXfZLogDBhqr/SiYdfynAPXxmJrm2D2pfFKk8PzqkmlV8JoWq/ixKOeGh\np7qlZNJfGf/8fCpNKW9FeH5YRiY5/RKZsHlOJv2m+rlkUtaN6LH/zM+kIc8q\nK92iTLKpHde229JM2qL6vWTS20Oq3aq3WnC16geTSeNjU9Y++jZT84cRzFLj\nbzM1/xjBkBdecRy7TSnHcXbVRzuUcrpnH+takqn5zWRSRvL8mB9/zaSqaxeO\n/vuYYNDhxa26nsnU/GkyKecl5+uOlzKpnupXI5ih+tdk0qApX0Z1uas8r/rZ\nKM+vaNHT8ZHgn2rcbxblnPimSvlzWeT47NrDnatn0a+qH04WmVzyc4PtsmhA\n5/ZzXn85i6yHrIvY+EoWvaX65WTR1ewNzTs7ZZG7IpYFN87S/HOU589uOrTh\nDeW5F35a/aCV4KY3t4a90z6LAtR44izNfydL898RNPvxZFHqtl8OdBqQRVUu\n784JHJpFheVDMl8bnkX+L5XOXD8iS/PvyaLL7fYPv/9BFo0dfbBpp4+zqI7q\n56OUE/ZreYCH8rzq56M8v+u3lWVeyvOqv4/y/I3jwR19s2j5K6dcAwKV51X/\nH8H9alxzFiW7n31wLyqL+kz3OD8nNos2qH5Bgm+q/kGCY+5eGXIv25K1VX8h\nQf7/S1W/oiy6WHop8IdMUZ7vVxeWz0gV77OKPb+3Q4KoD+rn0PlM44JQUX+0\nE+1Hf6Df0K8rA3c229AtS/OrEt91k+qHJcaHR8MVRwuvZGp+XWL8DtmXPia0\nUBnXnRNswlaJ+YN5hnn5eL52vzpoibtYD7JjzzQa10esM8N/+fVBwxbKejNl\n2Phn62dSccPBhVH2Yn3DOoj18j/bVOMjynrduc2V3qVi3SY7p559V4r1H/tC\niaMyQ6LFPoN9aHQza58Xxol961HB33/1H6783e/e9MQeYl+8+Pllv+qNxP5q\n9oNU/v7k2NJBj9KpT5eju23vi3398i/7hwy+JOQByAeQHyBvQA6BnAI5JnVz\nfs7eRUIugtwEOQvyF+Q2yHeQByE/Qr6EHAo5Vdk2bQ7dU+TY4M/zD/2uyLet\n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\n7wl5o7LPr93XaZzIT4U8Vx1V/1iRFwvMbnV3bMh3+sTvPbc/WhtcLPJoIT8W\n8mKVrV/SrHNHkQfLfM+IZb4rnt/K7Jcqz2cFHlft5oLIc7VN9U8VRN4r9BPy\nXkFfA/0M9EJmP1Oh/4Aehee3gp7JfL+DyGvlofp76ue3cvyPIWampf7E7Idg\nmd8K44LnudLLbyXLa8XzWcnyV2F88jxV0Mvo6WeM5qfCvICehuengl4Gehjo\nXbiehetRKpunqrJEuVzfAv2mHvH84/VD08NgXeF6aq5XMZofy2ieLJCfX/X0\nL5UlyuH6adRfpmdGf0D/xO0M+A4YDxg/GFfQEy5W/XfFeIY+EvOA53UD9eYN\n5gPXT3J9JB/nXN/I9Yx6+kY94jmUj/dBH4r5h3mJeqMdaBfWAbQf6w7WJ6xr\nWO+wTuZUe3Hb2nfFvoZ1Ges29gPsD8ifiH0N+w72J+SBRN5I5KE0+xOFavdv\nhT7Om4n8msi36Vr9apt0F+Xf1fgsy7yiyEv636YsD2pF86PKiPZyIi8p+oXU\n+LSZ5LLkdoypqyDylpa9/ffRtOEzNb+qmVo8mmUeU3O82Uwt3kwQ+U2PqHFm\ngjmqH5fIc4rviDynyG+KvKY5cZ6+z38gvjvPZ4o8pqVq3JVl/lKenxTjyewv\nJ6iXjxQ0xzeJ/KQyeQr5SUGenxQ0xylZ5iHl+UhBc3ySkMtA5CcFzfcsygk5\nDsR8BCF3Qs7TI+RAyK0ymuObLPOg8r9Bc7yTWD+4XGmOdxLyJZcjudyIvKlZ\nalyTIJcnuf0PdkXY/yBf6uVX5XIn1knY33g+VZncyfOpcrkT6zLkTL18qpAz\nQS5n8rypkC/5/sjtfMh7KpMjsS9ze58szyn2VRD7mEyelOU7xT7J7W6QJyG3\nGZUruV1Nzx+B06jcJ5P/KupXIJMDZXIfzsUy8nM0ztt6dgtur+B2CW5ngH2L\n2xlk9imuV4GeAXoH6CO4XYrbn6Dn4foW6EO43QF6ItgbZHlXef5VEPomPfsE\n/H9A+AVxO4VRuwQn8rJyQk/2pOTloj6oH+oN+8qT8rFej7VTlndWZo8xak+R\n2VV4HlZuT+F2lYoS+k2UD/sN6ol2od/RLxg3GF/I/4vxh/GI8Qli3GJ8Y7zD\n7ob5gPnB9ZTQJ4LcrmeUeB7zEnpLbgfk8xDtkNn/MK8wHvm8MZqvWGZfM0o8\nD/Jxhvfh/agP6sfnHerP55nMv9Do9+Z6Y/5dsc5Cr411Gf4E3E7P/RK5Phf7\nFfYx6BmwD3K/RezH3D8R+zr2fcgD3E/HqL+PzJ9Hz1/HqH8O2qHn78j9dbh+\nBZQ9z/9f7z1G5Rcur+jldZfJIzJ9vkz+kPn3yPwiZH4QRv169PxzZP44Mj8K\n5JXn/hQg5pEszzzkHu6HA7mHyzuyfPMyuYfLP1wO4vIQp1H5SEbsU5zYx0Ce\n316P2Bc4kQ9fRi6ngdy/xChl5elRr54yytpdUcr6ld83IJM7OGVyiFHycQbK\nxuXTouy9svEuG/dGx7mMsn7/f4W8PXxc8O/M5RTIhXw9wzqHdQ/roczvkPsx\ncmKdfVLinAq56WlT794Rvi/I9gd+Pubk/S3zW5D58XF/Ptn+YpR4np9X8F7U\nB+1Cu9Ev/Ltw/wboH7AvQz+B/Rr7OMjvj9Ejf57LA9zfkssH3O+E60lAPb9e\n2biRjRPZOU1Pf8LXRb7u6d1bo7cP6+2bsv3M6LpVWXnDqHxRWbmisv3wpDQq\nL1W0nTjHyvRiMj9eo+TPo3zeX3y/wn6E8c39yrAO8nWG7yeYdzLy/UO2P3G/\n+6dFo/77en79nLL9Va8/jPaXXjwC9kG9cxLf9/T0w0b90vn9W9w/nVNvfPN7\nuv5/pUz/zamnD9fz3we5Pk6mD9Tzu+d8WnpDmb7QqN4Q5P0n09vL1ku+Tv9b\n51+j52Kjz/F9Be3Ui/eoqF1Bj7wcve8os7/ofVdun9Gj0XlZ2f1WNp5k5ONM\njzJ5D+sz1mucG/j5ke/bkJchT0P+htwO/R70fVwPyPWERsnL0Yv3k+kXcW7g\ncX/8nMD9vWXyiN75sqLnSqPk5eF9fF/X82/n52e0H/2D/sN3gD4YemXom3m8\nIbdryOwZsrh8bhfg8fmwM8DeAfuDzK8VdgvYMThl9hHujwg/DO6XyOOx4ccB\nvw74UcJfEX7F8A8B4UcCvxIQ/ibwP4E/SmXJ7+2V3ePL6wHCf5qT+8EYJZ7j\nRLl4L28//Du5Hyz8xuFPDr8f+AHB7xz+QSD8huCvDnL/IviP/lvkfvMgry/a\nUdn7oeH/JLsfmvsNy6h3f7SM8K/6n6LRelaW/N5sGSs6TzE/+TzVi2vg921X\nNq5B775tmT2YxwuA3M4KfzDu/8X9vfTyKnB7KY8f53HisvuxnzQunOsluX6S\n6yVl5/nKyhlG9dI4z8v8S2Tnen7u4HIo9+OS+aHwc0Zl782GP5Levdn8fmjZ\nvdk8HhzEfdKI0+REvDjyYvG4ccR58vhxHjde1rTAbdh7grI4clk8ufObO5vb\nBSjlBv5yKC1SkMeXIz5V7/7q7Ounm9b4QcS18vusEX/O77GW3Tcsu2eYx6dz\nVvQeZNQD9eP3RiO+Hu3n90IjLr/4x6JcV0/R3/gO+D74fvie+N4YFxg/GIcY\nnxjPGP+YH9AbQA+LeYr5i/mPdePxeqKtT1jHHseVanI45G348WAdR54h7AvY\nN4zKY5yV3Z/19s3K7qtPyqfVvqclr8jiwWTxYVzugzzI5USZ/MzlaKPkz8vk\nVFncp8w//2mNF73vabTfZf0r62fe3zKiv4yS9/d/m7w+svOI3vlDj7yfeX/x\n8x7Oefw8h7gSEPEmiHMGeVwKJ+KkET+NfICIcwER/4J4GBBx2SDiZhBHg7ga\nxNmAiP9GPA7iwkHE7cjy83HyPH2yfH08X6BRIs4IRPwRJ/+djLx8Wd5AHsfE\n4+Z5HJMsbgnxSvi+iFvi8fJG4+Y5Ed8kI/89ysX7US+MI4wbtA/tRfsRz6U3\nXmR5HDn5eEJ5oF7cGPqdx4ehXehX3p+Yz9CbyPIMYL2Q7S9cjjB6zuZ6PR4H\npkf+HMoF8T6wono1rl/jlOkfuRzE90O+HmN9R//zdZePY9l6a3Td5fPraVFv\nnTfKJ60n+qeiRD/zecHzcuiR60P5von3oX1Yh7APYv4a3f+w32Fd4vlzsc4j\nfhX5Ung+XZ5XlxPxsDzfroyIpzVKHneL+vL9iq+XWB+xPvN1ksfVyvYpHmer\nR/4c/y5cHuH1wPotI68vz0MjiwvGug9iXOmR78uyfDZ68cWYB7J44sruJ0bz\nBXO9Lc/TweOJeR7hypLbsUAez8zro0dZfXm+Y573mOcf4XHRPG7JaB4bxCVV\nNB5Ij/x5PerlyYFenOcfhr2VxxVB78PzrMrig3jcj1E9uMyf16h/L9efy/Kr\nyvx+/7fRaN487pfA28/9rWV+1zL/C3w/fF+MA4wLbqfneY1kefIxjzC/MO8w\nD2Ev5/ZwyLGQN3kefZzTuXyI9RrrP/YFvj/hXAO5AecVyAXYl5FPA/k1kJ8D\neT2QB8S5KK/8/hiRXwR5S5DXBHlR8tR7zUReFWp0pODRBJGHBUR+FhlleVuQ\n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\n/82bLgk0SPWHTqCiPYPnTWubQO1Uu6vy/GvDe9/smkCOqt1V0OQx6rp3P0Gz\nn7Xynm9Gz70xPEGzzyrveTC2p/dHgmZ7bQL16/3pteufJ2h22wRqbfp8zlSf\nBM1+m0AOxyZ1vx4imKzacy1p1cT7ilecoK/qb55AF719Z/2ZnkBjVPuvYOnG\ngG5e8wXNduEEzd9def+wiMwp3yZodmLlPfNjul7bmKD51ydo9mJBs904gXrN\nzOg8+ViCZj9O0OzHCWT/8ry0STcSqPyjRZ2uPBA8l7Ps7MTnEh/TbE9OpJJb\nq1Iuv5RIvVS7ciIVvJvbYWKdRGqh2pcTaXFC3plLzolkr9qXBeMP5idNaJVI\n5ap9WSlXtSsr5U788ZRnL0H6/qeEi0MSKV+1JyeSi9WOtp4fCM5X7cmJZDdw\n14kLnwpGq3ZlwbJZe+I+9xKcrNqbBU+f3t/mQkAijVDtz4lU3PzwsfFRiZod\nWnm//7GYP1IE5/90qtX4bEGzfVow2vbc0fNLBc32asHJ71+M+uxrQbMdW3n/\n0qstz/9gyeKdf1Zp/KMlu1y7cdhji6DZ/i3o3PFOxLkSObM/ujfKeb8lbaPu\nN/c4bElzPIwlb+/++9DZM4Jm+7ug2Q4vuO3Tqm+cvZtIHRNs/mlYrtR3TbWD\n455JIueDtl8urSqYfb9G6O/Vk8hWtd8Lhvd62WVcbcHbql0/iTzTXt1/ximJ\njqv2/SRy/e31kE+aC277p+6wJa2TqGNjpyZn2gvmDmj40KmzoJO3c6k7WTJL\n9RcQtNnoEnR6gGCI6kcgeOO5ls7uI5PIQ40zkvOIa5s9pz4WHOTfdln9zwSL\n5rUP+HiiYDvVT0Gp7x+dGp7yTdL8FQSz2rxbMjbMkmZ/BqV+IT38TyYo9VvS\na2C9NKUeO/s4jc0SNPs7KO9XxPITC5M0vwfBdh8N9f3oS8GcyGH9F6wRdMx5\nr96J7/Rpfev94jGbLGnaPfKW43o5jZbP64X6oh1oHyfaz/sF/QWiHznRz09K\n2Xfk5N8f4wLEeMF4wjjD+MM4xTjm4x7zBPMH8wvzDvMV8xvzHusS1jmsn1iH\nsY5jP3i8fxTPPn/lvLIPvpWafrVU7HPYN7HvYt/Gvg55weyflfBY3oBcBHmJ\ny1mQv7hcxsnluBtWte/fWW1JyH+QD0EuPxol5E/Ip5BbIcdCzoXc+98i5G7I\n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\nMQ8ry4qeGytLvO//AFUzjg8=\n          "
                        ],
                        "Feet",
                        {{1}}
                       }
                      ]
                     ]
                    },
                    CompressedData[
                     "\n1:eJxc3c3KtVdWhtESbHkW9m3U/F/PIRTY8hBsCLYUyvPHnZaOJOQjk5D93hvC\nlZXGIP/87//1b//xD3/5y1/+/o+/X/71P//+P3+6/vtf/t/1t3/6/Um9279+\n39d/9QzP9CzP9hzO8a/Oen6c64x1xjpj/UF7no/z/OTnV3iOfH7yc/PzBz1/\n0PMbff7cz2/0+Y0+V32u+lz1uepz1eeq7/9WxV//+M0zPNOzPNtzPNfzPJ+n\nq8JV4apwVfhR4UelH5V+VPpR6RdMv2D6BdMvmH7BdFW6qlxVripXlavKVeWq\nclW5qlxVrmpXtavaVe2qdlW7ql3VrmpXtavGVeOqcdW4alw1rhpXjavGVeOq\nddW6al21rlpXravWVeuqddW66lx1rjpXnavOVeeqc9W56lx1rnqueq56rnqu\neq56rnqueq56rnqu+lz1uepz1eeqz1Wfqz5Xfa76XGWQwyCHQQ6DHAY5DHIY\n5DDIYZDDIIdBDoMcBjkMcoSrwlXhqnBVuMq2h20P2x62PWx72Paw7WHbw7aH\nbQ/bHrY9bHvY9rDtYdvDtodtD9setj1se9j2sO1h28O2h20P2x62PWx72Paw\n7WHbw7aHbQ/bHrY9bHvY9rDtYdvDtodtD9setj1se9j2sO1h28O2h20P2x62\nPWx72Paw7WHbw7aHbQ/bHrY9bHvY9rDtYdvDtodtD9setj1se9j2sO1h28O2\nh20P2x62PWx72Paw7WHbw7aHbU/bnrY9bXva9rTtadvTtqdtT9uetj1te9r2\ntO1p29O2p21P2562PW172va07Wnb07anbU/bnrY9bXva9rQqaVXSquT86e/1\nG1mVtCppVdKqpFVJq5JWJa1KWpW0KmlV0qqkVUmrklYlrUpalbQqaVXSqqRV\nSauSViWtSlqVtCppVdKqpFVJq5JWJa1KWpW0KmlV0qqkVUmrklYlrUpalbIq\nZVXKqpRVKatSVqWsSlmVsiplVcqqlFUpq1JWpaxKWZWyKmVVyqqUVSmrUlal\nrEpZlbIqZVXKqpRVKV+M5YuxfDGWL8byxVi+GMsXY/liLF+M5YuxfDGWL8by\nxVi+GMsXY/liLF+M5YuxfDGWL8byxVi+GMsXY/liLF+M5YuxbHvZ9rLtZdvL\ntpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay7WXby7aXbS/bXra9bHvZ\n9rLtZdvLtpdtL9tetr1se9n2su1l28u2l20v2162vWx72fay7WXby7aXbW/b\n3ra9bXvb9rbtbdvbtrdtb9vetr1te9v2tu1t29u2t21v2962vW172/a27W3b\n27a3bW/b3ra9bXvb9rbtbdvbtrdtb9vetr1te9v2tu1t29u2t21v2962vW17\n2/a27W3b27a3bW/b3ra9bXvb9rbtbdvbtrdtb9vetr1te9v2tu1t29u2t21v\n2962vW172/a27W3b27a3bW/b3ra9bXvb9rbtbdvbtrdtb9vetr1te9v2tu1t\n29u2t21v2962vW172/a27W3b27a3bW/b3ra9bXvb9rHtY9vHto9tH9s+tn1s\n+9j2se1j28e2j20f2z62fWz72Pax7WPbx7aPbR/bPrZ9bPvY9rHtY9vHto9t\nH9s+tn1s+9j2se1j28e2j20f2z62fWz72Pax7WPbx7aPbR/bPrZ9bPvY9rHt\nY9vHto9tH9s+tn1s+9j2se1j28e2j20f2z62fWz72Pax7WPbx7aPbR/bPrZ9\nbPvY9rHtY9vHto9tH9s+tn1s+9j2se1j28e2j20f2z62fWz72Pax7WPbx7aP\nbR/bPrZ9bPvY9rHtY9vHto9tX9u+tn1t+9r2te1r29e2r21f2762fW372va1\n7Wvb17avbV/bvrZ9bfva9rXta9vXtq9tX9u+tn1t+9r2te1r29e2r21f2762\nfW372va17Wvb17avbV/bvrZ9bfva9rXta9vXbuz96a+62W6s3Vi7sXZj7cba\njbUbazfWbqzdWLuxdmPtxtqNtRtrN9ZurN1Yu7F2Y+3G2o21G2c3zm6c3Ti7\ncXbj7MbZjbMbZzfObpzdOLtxduPsxtmNsxtnN85unN04u3F24+zG2Y2zG2c3\nzm6c3Ti7cXbj7MbZjbMbZzfObpzdOLtxduPsxtmNsxtnN85unN04u3F24+zG\n+SY834Tnm/B8E55vwvNNeL4Jzzfh+SY834Tnm/B8E55vwvNNeL4Jzzfh+SY8\n34Tnm/B8E55vwvNNeL4Jzzfh+SY834Tnm/B8E55tP9t+tv1s+9n2s+1n28+2\nn20/2362/Wz72faz7Wfbz7afbT/bfrb9bPvZ9rPtZ9vPtp9tP9v+bPuz7c+2\nP9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2\nP9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2\nP9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2\nP9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2\nP9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+bPuz7c+2P9v+2fbPtn+2\n/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s\n+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z\n9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z\n7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn\n2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbP\ntn+2XSIXErmQyIVELiRyIZELiVxI5EIiFxK5kMiFRC4kciGR+/3uqnBVuCpc\nFa4KV4Wr0lXpqnRVuipdla5KV6Wr0lXpqnJVuapcVa4qV5WrylXlqnJVuapd\n1a5qV7Wr2lXtqnZVu6pd1a4aV42rxlXjqnHVuGpcNa4aV42r1lXrqnXVumpd\nta5aV62r1lXrqnPVuepcda46V52rzlXnqnPVueq56rnqueq56rnqueq56rnq\nueq56nPV56rPVZ+rPld9rvpc9bnqc5VtD9uutgu1XajtQm0XartQ24XaLtR2\nobYLtV2o7UJtF2q7UNuF2i7UdqG2C7VdqO1CbRdqu1Dbhdou1Hahtgu1Xajt\nQm0XartQ24XaLtR2obYLtV2o7UJtF2q7UNuF2i7UdqG2C7VdqO1CbRdqu1Db\nhdou1Hahtgu1XajtQm0XartQ24XaLtR2obYLtV2o7UJtF2q7UNuF2i7UdqG2\nC7VdqO1CbRdqu1Dbhdou1Hahtgu1XajtQm0XartQ24XaLtR2obYLtV2o7UJt\nF2q7UNuF2i7UdqG2C7VdqO1CbRdqu1Dbhdou1Hahtgu1XajtQm0XartQ24Xa\nLtR2obYLtV2o7UJtF2q7UNuF2i7UdqG2C7VdqO1CbRdqu1Dbhdou1Hahtgu1\n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\nXWroUkOXGrrU0KWGLjV0qaFLDV1q6FJDlxq61NClpi41dampS01daupSU5ea\nutTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41\ndampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q\n6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU\n1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWp\nqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupS\nf2d4pmd5tud4rud5Pk9X2XZdaupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU\n1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWp\nqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupS\nU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSl\npi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalL\nTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOX\nmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYu\nNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01d\naupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q6\n1NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1\nqalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrq\nUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTU\npaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41damp\nS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJT\nl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU3+kq\n265LTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrq\nUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTU\npaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41damp\nS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJT\nl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWm\nLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtN\nXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5ea\nutTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41\ndampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q\n6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU\n1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWp\nqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61FzbrktNXWrqUlOXmrrU\n1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWp\nqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupS\nU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSl\npi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalL\nTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOX\nmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYu\nNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01d\naupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KX+TlfZdl1q6lJTl5q61NSl\npi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalL\nTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOX\nmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYu\nNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01d\naupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q6\n1NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXervdJVt16WmLjV1qalL\nTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOX\nmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYu\nNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q61NSlpi41dampS01d\naupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1qalLTV1q6lJTl5q6\n1NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrqUlOXmrrU1KWmLjV1\nqalLTV1q6lJTl5q61NSlpi41dampS01daupSU5eautTUpaYuNXWpqUtNXWrq\nUlOXmrrU1KWmLrV0qaVLLV1q6VJLl1q61NKlli61dKmlSy1daulSS5dautTS\npZYutYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKgl\nRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFL\niFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiPo707M823M81/M8n6erjLkQtYSo\nJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglR\nS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKi\nlhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVE\nLSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuI\nWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQ\ntYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0h\naglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC\n1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWE\nqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJ\nUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQS\nopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKgl\nRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFL\niFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSHq73SVbReilhC1hKglRC0haglRS4haQtQS\nopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKgl\nRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFL\niFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4ha\nQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1\nhKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFq\nCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLU\nEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSo\nJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglR\nS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKi\nlhC1hKglRC0h6u+/Sl1l24WoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFL\niFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4ha\nQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1\nhKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFq\nCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLU\nEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSo\nJUQtIWoJUUuI+jtdZduFqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4ha\nQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1\nhKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFq\nCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLU\nEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSo\nJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglR\nS4haQtQSopYQtYSof/zq6SrbLkQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFL\niFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKW\nELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJUQt\nIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1hKglRC0haglRS4ha\nQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFqCVFLiFpC1BKilhC1\nhKglRC0haglRS4haQtQSopYQtYSoJUQtIWoJUUuIWkLUEqKWELWEqCVELSFq\nCVFLiFpC1BKilhC1hKglRC0haglRS4haQtQSopYQtYSoJURtIWoLUVuI2kLU\nFqK2ELWFqC1EbSFqC1FbiNpC1BaithC1hagtRG3/B6mtS21dautSW5fautTW\npbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damt\nS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jb\nl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2\nLrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUtt\nXWrrUluX2rrU1qX+zvJsz/Fcz/N8nq6y7brU1qW2LrV1qa1LbV1q61Jbl9q6\n1Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1\nqa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrr\nUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTW\npbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damt\nS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jb\nl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2\nLrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUtt\nXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fa\nutTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61\ndamtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q\n61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWp\nrUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautS\nW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nal\nti61dam/01W2XZfautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q\n61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWp\nrUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautS\nW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nal\nti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1L\nbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX\n2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYu\ntXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21d\nautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q6\n1Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1\nqa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWpv5eLq2y7\nLrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUtt\nXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fa\nutTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61\ndamtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q\n61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWp\nrUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautS\nW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61J/p6tsuy61\ndamtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q\n61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWp\nrUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautS\nW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nal\nti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LvV3usq2\n61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU\n1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWp\nrUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nalti61damtS21dautS\nW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1LbV1q61Jbl9q61Nal\nti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX2rrU1qW2LrV1qa1L\nbV1q61Jbl9q61Nalti61damtS21dautSW5fautTWpbYutXWprUttXWrrUluX\n2rrU1qW2LrV1qa1LbV1q61Jblzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4u\ndXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d\n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\nOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4u\ndXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d\n6uhSR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq6\n1NGlji51dKmjSx1d6uhSR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0\nqaNLHV3q6FJHlzq61NGlji51dKmjSx1d6u90lW3XpY4udXSpo0sdXeroUkeX\nOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4u\ndXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d\n6uhSR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq6\n1NGlji51dKmjSx1d6uhSR5c6utTRpY4udXSpo0sdXeroUkeXOrrU0aWOLnV0\nqaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTRpY4udXSpo0sdXero\nUkeXOrrU0aWOLnV0qaNLHV3q6FJHlzq61NGlji51dKmjSx1d6uhSR5c6utTR\npY4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damr\nS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJX\nl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWu\nLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0td\nXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6\nutTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qX/8i8NzPc/zebrKtutSV5e6\nutTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51\ndamrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q\n6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU\n1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWp\nq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upS\nV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWl\nri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatL\nXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleX\nurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4u\ndXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d\n6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q6\n1NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1\nqatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerq\nUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTV\npa4udXWpq0tdXerqUleXurrU1aX+TlfZdl3q6lJXl7q61NWlri51damrS11d\n6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q6\n1NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1\nqatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerq\nUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTV\npa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damr\nS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJX\nl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWu\nLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0td\nXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6\nutTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51\ndamrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q\n6lJXl7q61NWl7tp2XerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51\ndamrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q\n6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU\n1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWp\nq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upS\nV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWl\nri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatL\nXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleX\nurrU1aWuLvV3usq261JXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWp\nq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upS\nV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWl\nri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatL\nXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleX\nurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4u\ndXWpq0tdXerqUn+nq2y7LnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upS\nV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWl\nri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qatL\nXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4udXWpq0tdXerqUleX\nurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d6upSV5e6utTVpa4u\ndXWpq0tdXerqUleXurrU1aWuLnV1qatLXV3q6lJXl7q61NWlri51damrS11d\n6upSV5e6utTVpa4udXWpq0tdXerqUleXurrU1aWuLnV1qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9Xerp\nUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTT\npZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmn\nSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJP\nl3q61NOlni71dKmnSz1d6u9cz/N8nq6y7brU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9Xerp\nUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTT\npZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmn\nSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJP\nl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06We\nLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9\nXerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6\nutTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71\ndKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q\n6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU\n06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSp\np0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulS\nT5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOl\nni71dKm/01W2XZd6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q\n6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU\n06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSp\np0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulS\nT5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOl\nni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadL\nPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+X\nerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u\n9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d\n6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpf/zh6Srb\nrks9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulS\nT5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOl\nni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadL\nPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+X\nerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u\n9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d\n6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+X+jtdZdt1qadL\nPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+X\nerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u\n9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d\n6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpv9NVtl2X\nerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u\n9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d\n6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0qadLPV3q6VJPl3q6\n1NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9XerpUk+XerrU06WeLvV0\nqadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTTpZ4u9XSpp0s9Xerp\nUk+XerrU06WeLvV0qadLPV3q6VJPl3q61NOlni71dKmnSz1d6ulST5d6utTT\npZ4u9XSpp0s9XerpUk+XerrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdL\nfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdL\nfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdL\nfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdL\nfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdL\nfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdLfbrUp0t9utSnS3261KdL\nfbrUp0t9utSnS3261KdL/Z3n+TxdZdt1qU+X+nSpT5f6dKlPl/p0qU+X+nSp\nT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSp\nT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSp\nT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSp\nT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSp\nT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSp\nT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+nSp\nT5f6dKlPl/p0qU+X+nSpT5f6dKlPl/p0qU+X+v63ans1liQKYijo0qo/tyX/\nHdt5MElFFBM6LHWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd\nanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd\nanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd\nanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd\nanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd\nanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd\nanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd\nanWp1aVWl1pdanWp1aVWl1pdanWp1aVWl1pd6u91lW3XpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpfbYdl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaX\nWl1qdanVpVaXWl1qdal/x9dVtl2XWl1qdanVpVaXWl1qdanVpVaXWl1qdanV\npVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanV\npVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanV\npVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanV\npVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanV\npVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanVpVaXWl1qdanV\npf5eV9l2XWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1\nqdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1\nqdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1\nqdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1\nqdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1\nqdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1qdWlVpdaXWp1\nqdWlVpdaXWp1qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0\nqdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0\nqdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0\nqdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0\nqdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0\nqdOlTpc6Xep0qdOlTpc6Xep0qdOlTpc6Xep0qb+3vq6y7brU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU\n6VKnS50udbrU6VKnS50udbrU6VKnS50u9fe6yrbrUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUndsuy51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51utTpUqdLnS51\nutTpUqdLnS51utTf6yrbrkudLnW61OlSp0udLnW61OlSp0udLnW61OlSp0ud\nLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0ud\nLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0ud\nLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0ud\nLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0ud\nLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0udLnW61OlSp0v9\nva6y7brU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKn\nS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKn\nS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKn\nS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKn\nS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKn\nS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKnS50udbrU6VKn\nS50udbrU4VLzD5f698b38r19H9/X9/h+vvV1VVwVV8VVcVVcFVfFVXFVXBVX\nXa66XHW56nLV5arLVZerLlddrrpcdbvqdtXtqttVt6tuV92uul11u+p21eOq\nx1WPqx5XPa56XPW46nHV46rHVa+rXle9rnpd9brqddXrqtdVr6teVx1XHVcd\nVx1XHVcdVx1XHVcdVx1Xfa76XPW56nPV56rPVZ+rPld9rvpcVVfVVXVVXVVX\n1VV1VV1VV9VVc9VcNVfNVXPVXDVXzVVzlW2PbY9tj22PbY9tj22PbY9tj22P\nbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9t\nj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22P\nbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9t\nj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22PbY9tj22P\nbb9s+2XbL9t+2fbLtl+2/bLtl22/bPtl2y/bftn2y7Zftv2y7Zdtv2z7Zdsv\n237Z9su2X7b9su2Xbb9s+2XbL9t+2fbLtl+2/bLtl22/bPtl2y/bftn2y7Zf\ntv2y7Zdtv2z7Zdsv237Z9su2X7b9su2Xbb9s+2XbL9t+2fbLtl+2/bLtl22/\nbPtl2y/bftn2y7Zftv2y7Zdtv2z7Zdsv237Z9su2X7b9su2Xbb9s+2XbL9t+\n2fbLtl+2/bLtl22/bPtl2y/bftn2y7Zftv2y7Zdtv2z7Zdsv237Z9su2X7b9\nsu2Xbb9s+2XbL9t+2fbbtt+2/bbtt22/bftt22/bftv227bftv227bdtv237\nbdtv237b9tu237b9tu23bb9t+23bb9t+2/bbtt+2/bbtt22/bftt22/bftv2\n27bftv227bdtv237bdtv237b9tu237b9tu23bb9t+23bb9t+2/bbtt+2/bbt\nt22/bftt22/bftv227bftv227bdtv237bdtv237b9tu237b9tu23bb9t+23b\nb9t+2/bbtt+2/bbtt22/bftt22/bftv227bftv227bdtv237bdtv237b9tu2\n37b9tu23bb9t+23bb9t+2/bbtt+2/bbtt21/bPtj2x/b/tj2x7Y/tv2x7Y9t\nf2z7Y9sf2/7Y9se2P7b9se2PbX9s+2PbH9v+2PbHtj+2/bHtj21/bPtj2x/b\n/tj2x7Y/tv2x7Y9tf2z7Y9sf2/7Y9se2P7b9se2PbX9s+2PbH9v+2PbHtj+2\n/bHtj21/bPtj2x/b/tj2x7Y/tv2x7Y9tf2z7Y9sf2/7Y9se2P7b9se2PbX9s\n+2PbH9v+2PbHtj+2/bHtj21/bPtj2x/b/tj2x7Y/tv2x7Y9tf2z7Y9sf2/7Y\n9se2P7b9se2PbX9s+2PbH9v+2PbHtj+2/bHtj21/bPtj2x/b/tj217a/tv21\n7a9tf237a9tf2/7a9te2v7b9te2vbX9t+2vbX9v+2vbXtr+2/bXtr21/bftr\n21/b/tr217a/tv217a9tf237a9tf2/7a9te2v7b9te2vbX9t+2vbX9v+2vbX\ntr+2/bXtr21/bftr21/b/tr217a/tv217a9tf237a9tf2/7a9te2v7b9te2v\nbX9t+2vbX9v+2vbXtr+2/bXtr21/bftr21/b/tr217a/tv217a9tf237a9tf\n2/7a9te2v7b9te2vbX9t+2vbX9v+2vbXtr+2/bXtr21/bftr21/b/tr217a/\ntv217a9tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b9\n2PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b9\n2PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b9\n2PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b9\n2PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b92PZj249tP7b9\n2PZj249t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/\nbPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+\n2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7Z9s/2/7Z9s+2f7b9\ns+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2z7Z/tv2z7Z9t/2z7\nZ9s/2/7Z9s+2f7b9s+2fbf9s+2fbP9v+2fbPtn+2/bPtn23/bPtn2z/b/tn2\nz7Z/tv2z7Z9t/2z7Z9s/2/7Z9tr22vba9tr22vba9tr22vba9tr22vba9tr2\n2vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba\n9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr2\n2vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba\n9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22vba9tr22fbZ9tn2\n2fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ\n9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn2\n2fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ\n9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn22fbZ9tn2\n2fbZ9tn22fbZ9tl2XWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGl\nRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGl\nRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGl\nRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGl\nRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGl\nRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGlRpcaXWp0qdGl/v2+rrLtutTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjS41utTo\nUqNLjS41utToUqNLjS41utToUqNLjS41utToUqNLjdQ0UtNITSM1jdQ0UtNI\nTSM1jdQ0UtNITSM1jdQ0UtNITSM1jdQ0UtNITSM1jdQ0UtNITSM1jdQ0UtNI\nTSM1jdQ0UtNITSM1jdQ0UtNITSM1/b2uMtdS00hNIzWN1DRS00hNIzWN1DRS\n00hNIzWN1DRS00hNIzWN1PT3vv8B5qct6g==\n      "
                    ],
                    1,
                    {"Continuous", 1},
                    {"Discrete", 1},
                    1,
                    {
                     MissingDataMethod -> {"Interpolation", InterpolationOrder -> 1},
                     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1},
                     ValueDimensions -> 1
                    }
                   },
                   True,
                   13.2
                  ],
                  Editable -> False,
                  SelectWithContents -> True,
                  Selectable -> False
                 ]
                }
               ],
               "}"
              }
             ]
            ],
            "Output",
            CellLabel -> "Out[10]=",
            CellID -> 135738153
           ]
          },
          Open
         ]
        ],
        Cell[
         CellGroupData[
          {
           Cell[
            BoxData[RowBox[{"DateListPlot", "[", "altitude2", "]"}]],
            "Input",
            CellLabel -> "In[11]:=",
            CellID -> 247201763
           ],
           Cell[
            BoxData[
             GraphicsBox[
              {
               { },
               {
                { },
                { },
                {
                 RGBColor[0.368417, 0.506779, 0.709798],
                 PointSize[NCache[Rational[1, 360], 0.002777777777777778]],
                 AbsoluteThickness[1.6],
                 LineBox[
                  CompressedData[
                   "\n1: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\nB930dKENmnzcevkLbX/8kHzh4DrOz1bxwvVfky+scJG3BkT3rScfn9w/qMD6\nbeTjVS+PbLPuMPl4weqx+Zv/Rz6edPkb83845zmbjwe0n9L63iLWQWnOn/en\n5/uhhHWIVd13Wq2taK1w4a0fzF1TzzrCx69b1PKee61jnHTNybPmIWstbPC8\n/F+0WN2VfBxP+Xb29wPJL8P5VunHU99NIl9Y4er9fprV+G3ycamvf2723fvk\n44IX/3qyUQ75+PDDO2d+u4J8vGX2nqaN1pCPlx/Zf2LVZvKv53pQh2c0/J18\nPGbI8carDpCP2111xpvfnPW8zccNO53V6O7C1jGu8tE5x76+zFrj/I0uvPvr\nctYGHxhX9Ej926wTvPGXy6Z+Vcc6uMHa3Hhl/fpNrEM84vPrJtdrZ61w9ED5\ng3V7kI/rzag08cuXyMeV9le5s+5r5AsbnPflWhPuepN84aAs19P3d9Ze8S75\nOOexxuO+WEY+njGvWa07vyUfD/2nxZ7lG8gX1rjbXQ+OrfML+bjOlkd31z5G\nvnBwo3X56zqM/vyMF2y+sBKOcLGunWrULmgd4+CTLjuXFbXWwgbvOvu5kXdc\nZZ3g1c16VFt2g3VwE9fv5D47at1CPta7+g//TJGPB1V8pWqtu8nHXfq++qu5\nj3xhjVt+9dowFZEvnGBVZPStpiP55XyHwgqXfnjc9prPkS8c4yKzJw75tB/5\nwgafPDy1cs1XyRcOynN/qzlj29Ix5AsrvOrVWYNvn0q+cIwXrJ9Tcen/yBc2\nwolwUMF3KKyEI+EYTwrf31pjAfnCRjgRDm72HQorPODJDwd+spR84VhYCxvh\nRDio6DsUVsJRRX/7YmEtbCqK/S8cVPKPZyisKvnnQyQcV/LPJ11JnH+V/PM1\nqSTO/8ri/BdWwpFwLKwr+3lG/HsiHNziX5+hsBKObhH5wlrYCCe3+NsX3Oo7\nFFbCkXAsrIXNrf7xSG4V138V36GwqiKOfxVx/VcR138Vcf7jTgsXV6jxFfm4\n+RlLN+f8QH5V7u8Nl71c/WfyceFfvt5U7RD5+HjZ71/6+F/y8cplGzYsubC7\nzRfWeHzL5IYl11kbHL/52/qqN1snuMOfu/otrm4d3Mb9e8DBHxbdYx3i8Psj\nfaq0tla44GUnrlvU3joSjvGW9/L0/qgX+Xj5iXzX3voK+XjOneeuXjiCfNx7\n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\n4+8vPcbfvyb9POqT2P+45cmZ85qVYf+PZf92erfchVXZ/3jSR+9vGlmb/Y8H\n5Fn40gWNOf640+nH15EtOf44rVciH1f/dVn/EU+Rj9P6JfLTz7/3q6BpH/Jf\n5/OpZyJfWOGk0Loyw8eRj5szHop8nI6HIh/Pm7Glz2tzyMfp+CjycXzbjjXD\nPiN/nO8Qd3h5d6/zVpEvHOF0PBT5uOnqfdcM+5F8YYPT8VDkCwfjuV8y/ol8\nYYXD9kd7DN1DPk7HR5GPC75/4uqCR8nHMeOlyBdO8OF/Tn07JHjF5k/g+zF+\nyjrEW+46s/u551or3JTxUNYRXj7y7JJDLraOcTo+ylrjOVvOXVUgtDY4HS9l\nneAx1xV+/tXryX/DdyishCPhWFgLmzdE/hv+9gUT/e0PhdVE//tGE/39E0/0\n95+eKPb/RP94JRPF8Z/kn0/hJP98VJP88zea5J/f8ST/etCT/OvF4E671zRv\nMop84WCy71BYCUeT/c+PJ4v8yeL6w+n4QvIn+9dHMEWc/1P8811N8c/vaIq/\nf2NhPcU/v41wIhxM9R0KK+FoqsifKq4/YTNVHP+p/vcLtO9Qi+tfOMJVLv/r\n+4Lbydf++aSFjXAiHEzzHU7zP18JR8LxNH/7tLCZ5n+/ZJq/P4Lp/v4Kp4v9\nP92/3iLheLrfPunp/vVqpvvXczLdbw+CN0X7g9PxmuQLR7jdJ8W+HlyTfGGN\nG+a/ots5DcjH6fhO8nGle68qMbg5+TOs0/Hr5AsrnNazko/z7y7TddAT5OPe\njBclH7ej3pV8vLHvzSsG9iUfm69u6XL2YPLfYnsYT0o+HvFwzeX5ppCPu8+u\n3fmVWeQLxzgdb0o+jo7ULZbvA/KFE7zusgb77lxE/kzfobDC9VTDZS9/Qr5w\nLKxxOt6VfOFEOHjbdyishCPhWFi/7W+PEU7e9vdHMMvff+Essf9xQ8b/kj/L\nP77xLP/80LP888vgdLwx+bP88zX4n+9QWAlH//Ovh1hYCxvhRDiY7TsUVrh3\n1yJhgcrkzxb3/9n+9axn+/d3M1tc/7P99iF4x28/wnf89kW949/fI+H4Hb+9\n0sLmHf9+kQgHc3yHwko4Eo6FtbARToSDd0W+sHpX3P/eFd9fWAsb4eRdf38H\nc/3jF+J0PD37f644/nNF+zvXb2/1XL+9NXP96yGZ67evwXui/cXFp1yzMv/D\n5L/nt7cRPlDxpuL5u5H/nt++amHznn/9Ju+J9nce+UWqXTZwNPk4rXciH6fj\n+8mfJ9pfYT3Pb0/MPNH+zvPbo+B96/JDTh+RleTjtD6LfJzWC5CP8171gMm7\nlXy898mHOg7YST6OqBcgH9djvgLy0zzGhw+0+fN9h3hGw44dzjzbWglHwrH4\n/7WwwTlntF/60knyhYMP/O0LhRVet/CRInn/4vsLx8L6A/H9hRPhYIG//0Jh\nJRwJx8Ja2CwQ+Qv87Q0+FN//Q3//qA/9/RnhdDw/+x+n4/fZ/8IGd/ula06e\n4taJcLDQuvWNL7R/8VqOv7DC6Xh48nGd7r0K56lAvrDGZT/vt6R/NfJxOj6e\nfOHgI+sihQa0O+Mu8oUVTsfPky8cC2thg0+2HFSof1PyhYNFvkNhJRwtEvmL\n/O3Vi/zvZ4STRf7+CRZbp/UF5Asr4Wix2P/CerF/vIxwIhws8R0KK+FIOBbW\nwkY4EQ4+FvnC6mP/+0XC8cf+/tHC5mN/fyfCQY7vUFgJRzn+8YyFdY5/Phjh\nRDj4RJz/wko4+kScf5/456cWNrgb9cLk411vDl0UPEj+Uq536lHIF1Z49Z8j\n2saPkS8c40VVxxYMupAvbHBZ6lvIFw4+Zf/ZHzh7ki+scFoPQz4e9P3k6L8B\n5ON0vgfycVofQz5O53sgH6f1MuQb68J3fTC/z2LycVovQz7+bfPH+fp8Rz5e\nda2Zd3Ij+VhRP0M+XvDM8la9fyUfT8pZmffkPvLTPOppyP/Md4gHnP3t3F7H\nyReOhGNhLWxwWq9PvnCwzHcorIQj3KnZmpb/5Blk84U1bj55fZ5e51kb4QRX\n37VpzolLrIPPrdP6IOsQp/VB1go3pz7IOsLVqQ8iP/3/Dx9r1v0R8nFaD0Q+\n7vBq8PYLz5OP0/of8pdbVwnP+ef5IeTj8Mnz3jo6lnzhCKf1P+Tj/AsvaPK8\nJh+n9T/k4wNB0b+PzCZfOPjCOq3/IR83pd6HfOEIL3+9RKMjn5KPq1APRD6e\ns73ksW5fk49D6oHIx2PKXjft8DryV7C9L9xwd7dt5Asr3G5ZuSOHdpOP0/og\n8nFaH0Q+rtSySv1Dp8jHs/rcVqJi3sE2Hxd/s/qhrudYB1/6DnFaT2St8N4q\nd9btWsI6whtfqn/wYGnrGDf8390rKtxkrbH5rtHEZypam/TzqT8iH49o12J/\nl3rkryTvvVYTDjQjH0cn2tTu8hD5eN2VjxSb15Z8XO/OR/ftf5x8YY3Teiby\nhRPh4CvfIS4/4vFxT3clXzgSjsX/r4WNcCIcfC3yhZVw9LXIx2m9FvnCBhfb\n/GSt/b3JFw6+sR4adC5a7kXyhRUOru2yp/NA8oVj3I36MPKFDd7VpdvYP0eS\nj1tTP0b+Ku5nH3ev2XkS+cJqlf/3kfj3GNfb3rPI3Gnk45x8fXbvm0k+TuvT\nyBf/HnzrO/zW/3slHAnHwlrYCCfCwXe+Q2H1nb99kXAsrL/z94cRToSD732H\n34v9LxwJx8Ja2HzvH79EOFjtOxRWwtFqkS+shY1wIhysEeffGn9/KOFIOBbW\na8T5J5zgGff0H/3U++Sv5XqkXpJ8PHTSyzX2fUw+DpYNvPDGz8jH3XYO3tlp\nBfk4ra8kH7e++bWRe1eTL5zgtN6S/B98h7jsytd37NlBPk7rMckXjoW1sBFO\nhIN1vsN1/vYoXKfPqGqdNpO/zv++8Tp/f+h1/v406/z9nawT1996cf0LK+FI\nOBbW68X1v17kr/ePb/Cjf3zDH/3jpXBaL0v+j/7+iH/0j5fGRS6aOPzJA+Tj\ntF72VZuPf5v15q8dz7IONlivOvT2sD/Otw6FlXCE61Bfax0La/H3ZoOfl2zw\nty/Y6G9/uNH/fmqjvz8i4XijOP+FjXAiHGzyHQor4Ug4FtabxPUn/j0RDn4S\nx/8n/3xRP4nz7yf/fhr/5N+P9U/i/o/d80KSfp57/tjsOxRWwpFwvNnP05v9\n7TGbxf1/s2h/t4jrb4t//aotov3bIvb/Fv980Vv89sNs8c+3BKf15ORvtT75\n0NSqe06Qv9W/XhRO68s5/7eK819Y47Lt5hacfSXnv3CC9eB523eX4vr7me2j\nPp3rDw9at2DIE+XIxyepVycfd7lyceXdVcnHv1G/Tj5u2fGTbR3qkI9XUc9O\nPlYffjZ4V2Pyt/kO8YKfPm9Tujn5whEuHayo2OEB8vEk6uPJx4Xv/nrrzkfJ\nx52ofycfJ8naCju7k59Yr7xhw+b2L5GP0/p28vGkz7aVaz+efHy8wu9zr5lF\nPu50/66XHnuX/PTzqG8nH6f17eTj8Q8da1FqLfnbrQ9/++/6X7eTj9N6d/Jx\n09vz3vfmQfLx8kfzXf/rUfJxKerfh9h8PP7vQn1/Odfa4LjORaXbFrVO0s8f\nfsna7aF18Iv1lgWXvn3VtdYhrnJNeO32ytYKz6H+3TrCY6h/t45xb+rdyccH\nzrqxVHQf+bgd9e/k441NK3y37WHyf7VuSD08+cIKm4mVuz/ckXxcifp48vGc\n36uW3NaNfDymwu2r2vQjH6f18uTj3r3veP7nweT/xvZ9eVfYZgz52Jz++Ctm\nkI+Lz7q3xNYPyMdpvTz5eG+N1l23rCRf2OB1g6LirX8gH+f80G7F5q3k76B9\npL6afDyrxBNdHtxFvnCEi1MPTT4e8cRTl23+i3ycl/pt8vFe6qWH2nwc/fdc\n55/Otg5+t67XoGexVhdah8IKz6C+2jrCQ6mvto6FNd713BDTsrq1wa2pvyYf\nLzp3TJGW95C/k/aJ+ljycVofSz5O63XJx2k9L/m49a1v5bToRT5O62nJTz//\n23cLtxhBPk7rhcnfRXtGfTX5eJUtsFhCPk7rjcnHk177smDz78nHRRZ8tX30\nOvLxSeqXyce/Ua9LPm759LoCP/xJ/m7as7O2tll75jCbjydRT22t8IDnft06\n8iLrCCc7dre+52rrGK8s/2e+NTdaa1yd9dusDZ7X6695TatYJ3j8iqOtVt9h\nHfxhXZB6YfLxgAv+ydu0Efk4rR8mHzd/+8wHmrQlH69cddZNwx8nH89jfTXy\n8fi2hV58rTf5OK0/Jn8P7d/aImc0Hko+3nLFpe98+zr5OK1PJh8v73DFfY2m\nkY+rvHbl9cNmko/T9djIx3H96+9dZchP86hnJn8veYvLrx2ymnxhhZdT70w+\nntOk6rVDdpCPw+eq/fP1H+Tj3tQ/k48PFKjT5Ov/yMftWN/tNZu/j/bwvnp/\n1y9gHeJKrPdmrfCsPU0b1b/SOsLFqZ+2jvGIW+47trKMtRY2OC/rxVknuHf/\nB6bVq0T+n2wf9dfk43arHrp75e3k47Qem3zc8JK2R+rWJx+n9dnk40pt20/9\n8l7yhRNc/N2O9eu2IX+/71BY4bzHOx9a0YF8nNZ7ky+scdThua6vdCdfOMHr\nhr1Qd0Uf8g/Q3lEfTj7O2djr4J2DyMflT/VZ8fIw8vGMq+OJX4wiH6f14+QL\nGzy084A775xMPg7GvHLZy9PJP+g7xN0WD9q//G3y8V7q0cnHUd5hE+rMJx+v\nKzO884CPyMc51KuTj8u/MXZf7S/JxzOoXyf/L7Z3x4Rxn68hHw9lfUDycVB+\nSq3aW8jH3ah3J19Y49VfzBx7x0HycR3q3cnHZal3H27zD1nrB9/bXSufdYhP\nsh6htcJpPbt1hFtXz9lprrGOcVrPbq1xnYFmpCpvbXDZtcurmdusE1zkiq92\n1LyT/MPcD+74Zkm/BuTjk49/O/zTJuTjtB6efPzb/DVVa7YiX1jjVacf55a2\nIx8vqPfTsNufJl84OEL7Tz09+XjS6J9vXdqDfJzW15OPj5+5Y2GfweTjdD1G\n8nHLbnsq15hAPl5FPT75WH26f1vOm+QfJb/A4cHV55KPC993vGLOIvLxAOr1\nycfHp57cWu1z8nFz6vfJx9UfPPvsXlvJx+O/Oe+V2/aRjwtSz0/+MdrnoheW\nX3KMfLyg/Ln7ip8xwubjztT3W0c4ree3jvGUXuePm3SutcarWN/V2uBXVlxU\nq3hR6wSn9f3WwXHyqO+3DnHnC4rtmRiSj1u0Lj728hvIx1/3L9HxwfLk43T9\nSvLx7W+HNSdWJh/PX1WyyObbyMel/yq1+zJF/t/WvzAfAPm4Besxk48HtL2h\nw09NyMfHB95Y47L7yMfzmS+AfGzLSVq1Ih/b150JD5OPm58+vJvakX/CuhDz\nCZCPq9eu0v6Bp8nHR5lPgHxc6rXqhTf1IB8nrK9JPk7nFyAfp/MLkJ9+PvML\nkP+P9TzW4yQfn279qxYbQz5O1+ckH69Y3GjRhjfJx/Gq76a/MJN8PDdvs7b3\nzyUfp/MPkI9/rr7+qlsXkn+Sz2/SouCGReTjFQM3fbPQkI8Pf9p6yOsrycdz\n12597pZvyMclma+AfLylwCOVi/5APn79il+uXLiefLz8vse2jd1K/r/WfTv8\n/lXlhHz8F/MbkI/n6CcGX7yLfLyF9T/Jx6/veari2L/Ix+l8COSnn39L161F\n/iUfV6l/6MsF/5F/is9nvcmRNh+n8yVYK5zOl2Ad4carelYocqF1jNP5E6w1\nvuWSfptHF7c2OJ0/wTrB6fqL1sF/fP7Al1vdW5Z83Jj5FcjH+d8dWG50BfLx\nMuZbIB/fwnwL5OMDx4ZsurA6+bjdFa/NbVaLfFyC+RjID4qc9sY7Rrw06i7y\n8SjmZyAfN+wwquXau8nHPZmvgXxhjf9k/gby8ayN4zeMfJB83HbPpcsqtCH/\nDOvip96YsyYiX1jhUVdP7n9Be/JxvvpTW9zzJPnCGqfzQZCPe3aedsPILuTj\nP0e/Gax5jvw8bB/zQ5CP2y5+a33hXuTjH39+e3bTmHzhGKfrC5KPG+Sd3W/E\ny+TjpWXmNF/9Kvk4nV+C/DOtb24yt0zhEeTjvY+UKzJvFPl4Zrd5p5qMJR9f\n9sb8H4a/Qb6wxun8FOTjBqxnSD7Oe/r2ef5b5Odl+5i/gnzcvcDiZk1mk49v\nZj4L8vFM5rMgX1jj6L5PTn63gHx8GfNdkI9fY74L8s+yrqc/m9n4U/JxHua/\nIB/nfPF5r9eWk4+fZ/4L8nH5PV80/e4r8vEfzIdBPm7DfBjk47XMh0F+Puuh\nD676ftgm8nE6Pwb5OE//72Z8+zP5OJ0vg3z8/MzVPc77jXyczpdBPk7nxyAf\ntzm47uphf5J/tnU6Xwb5eG3RDcdXHSIfp/NlkI/T+TLIx+n8GKNsPk7nw7A2\nePqcbQ1X5bdOcNG1268qWMg6yO87xHcxP4a1wkuYD8M6wt3u2KW/ucI6xjcx\nPwb5eHrPJ6N3riEfn966BneXJh+vnv/nlUNuJP8c61eZP4N8fOqPZ7Z1rEw+\n7sp8GuTj35lPg3zcivk0yBc2eNDof64o0Ih8fAfza5BfwHoR60GSj7v+/N+X\ng+8nH6fzb5CP0/k3yMffNc5Xt/7j5ON0Pg7yhRN88pXB+co8Tf65vkO8cEKB\ngyufIR+n61GSLxzj6z8tuCL/C+TjdP4P8vGU3wpNrNebfHxhgQu6DOpPfkHf\nIU7nByEfL2R+EPLx9ax/ST6ewnwh5OOWX1w+4cuJ5ONVf1zR+exp5ONX/p3S\n8u03yT/P+gTzi5CPF1QuWWzgO+TjX556a0P7D8jHhWeWHnfXx+Tjr5lvhHx8\nO/ONkI+PHyhba8UX5Kefz/wj5BeyTucfIV9Y4UmN56/fsZZ83OKRiubl9eTj\ndH4S8vHtc27teFZCPk7nKyEfX3usWpGX/yD/fOt0vhLycTo/Cfm40B1qad4j\n5OOVzT+bNeMY+fjo0DodBvxHPp7PfCWjbT7uNP+uGsvzWifCQWG2h/lMrEOc\nbKh3Yd4C1goXYj4T6whXr9dk5OeXWsf4KPOZWGvckflMyMelRt9brXYp8vH4\nRfcVfqkM+RdYF/z5/h3LbiJfWOEVzHdCPo7PbLUkTyXycTr/Cfm4Y+M27V68\nnXz887NR1WW1ycfNJrQtlKc++ReSx/wn5OMVS9v9Wqsx+cIRjtfs+HZ7U/Lx\n3HOeGPZZS/JxOl8K+bhkuSfbntGGfPx686durfUo+RdZF+j5dMH+HcjH6Xwq\n5ON0PhXy8ZwNh7V+jnzc4Y/nhqju5AsbXJL5V8jHW87vHsV9yC9i3bRyz8rm\nRfLx8la9CwSDyMd9mZ+FfFwl7rut5jDy8V+j/vtq23Dy8Zy34gX9RpGPw29e\nHPzpOPLxT8znQv7F1mMODGjz3yTyceMzTz/RTSUf5y86sGLN6eTjZcz3Qj6+\npXGBQyVmky9s8GzmgyEft39l2PxT75NflO1jfhjyhRUew/q35ON0/hjyhTXu\nfc7FxdssJx/fUvz1fKdWkI9n1xq/ucYq8i+xTuebIR+PGjrp5U9+JB/nmz+l\n1b+byReOcc8NulyN7eTjdH4a8vGs80vtL76bfFyC+WrIL+Y7xKOYv4Z83PCp\n/71U/Sj5OB/z2ZCPe75VtnbxU+QLG/wn6/2Osfl41tb38pw8yzq41Lr4mfM3\nVDvXOsQ/Mh+OtcIjSi+Y06uwdYQbVKs87vKLrGOct/HC/h9fbK3xzcyXY23w\n3vFLbqgWko+jpTlBr2vIv4x85s8hH//469L1S64nHzc457PZJ8qRLxzjpTd9\n3u+2yuTj7qxPTD5O598hH6fz75B/ue8Qp/PxkI9fW/7ND1UbkI/z/PHtrB5N\nyMc5JxuPvrQZ+fj581f3WdycfJzO30M+/qPS2mZ/P0B+ces2rdZdV/Vh8vFl\nzOdDPl7X78eT3duRj/Mwnw/5OOfrn2Ye70w+fp75fcjH5Q9s6VWlG/l4xsXb\nmnbvQf4V5DP/D/nCCq9lvWby8dDo1xPHXiIf3/Vsux3jXiEfL2G+IPKFE3wT\n8weRX8J3iFsf3dP42HjyhSPhGBdlfiHyhY34+0Q4uNJ6OvMVkY93rd7d46PR\n5F/pb1+Eu72zc8YLr5F/pf/9NA5e2fH9rYPJv9LfP8mV/v473eCfdrFq269Z\n1Jf8UOz/0D+eUSiOf+ifHzr0zzcT+udrgmf2+LLMkprkX8X1y3xV5F/lX68K\nL2U+LPKv8tuPGLcr+damnD20Pzidr4v25yrR/uLGa0a27ptD+1eS9rra4Pz9\n3qb9KynuPyX9+1lU0r9fxiX9+6vGW2rtbTgtIh+754MEj39l+9Vt7yL/amv3\nPBPiZt/8eKJkWfLxvKfuaX/mleTjlSUb5bxUhHzsnt80ds+DBrvnywTb16lr\nNvL8Wcr6l2oV9ty5mufP1LnP2wqrwmHtujN5/sSZ5//033PfFzReVfz0HWQA\n+di9zyTYvQ8F11i3KpO36zltycfufUvhU4v+/at+M/LTf6937NlX7yA//ffc\n90WNdz3+x3PnXk0+du+vCU7ngyT/Wv79kc3TG57i/RvfVX3TtwX/5v0bu/f1\nCP/xzdrGjXbz/o1d/4DGrv/ApP+/639I/z63fyO4jvY9tz8kxK4/RWHXHxOl\nf//pglnfTyUfu/4ijV1/k8GuPyvBmf6v0tz/XP8bdv13Crv+wQhn+h+x67/U\n2PWHGuz6UxN8+nUz//pj9L+Wsa7S6/EF63+h/xc3Lf9ogRYb6f/F8RutFrb4\nnP5f7PqvY5zOx0v/L37x1B3Dxw+m/xe7/vwEu98Lguu5HmqUGf1GA/JTM38x\n+Tid75h8nM6XTD52v99oPC8+Z8uSX/j9J/283N+TEryA+aD5/ecG6wE//7K9\nxgB+/8Hu9zOFM7+/4UVzlrWPK/P7E3a/92nsfi802P2emKR/n/t7ZFCWv+85\nfc+y3/n9E7vfOxV2v49G2P2eGuPTr4O1l+fw+yd2v88a7H6/TbD7fTe4kTz3\n+y92vxcr7H5PjnDm92fsfq/WwgZnfv/Ge+94dvJdz5J/k3U6nzr52P2er7D7\nvT9K/z53fEGM3XgEjd34BoPdeIgEu/ETQTmuF+abZ/wFnvPBVf+teofxF7jg\noML3f9ef8RfYjTeJsRvPonHhptvzNyvE+Auslmxc0Oxvxt/gdD59xt+U5/xo\nu7DdfW8x/ge78UUKu/FIEV5thnfceBfjf9J/T17s9MB1jP/B5cf2XbapOON/\n8DrWHyEfZ8ZfVeD+nzteK8Tp+heM/8JuPFmE3Xi0GLvxahq78WwGH5hW5+4S\nwxl/ht34uOBmazeeLsSZ8XfYjeeLsBvvF+OwS6nVkSIfu/GEBmfGH2I3fjGo\naJ0Z/4ir7zuwod0yxj/idP0gxj/idH0hxj9iN35TYzfe06R/nzseNMFuvGhQ\nifYod3xpiN14VoXdeNcIu/GyMXbjazXOjD9PP8+NP8eZ+oPKnE+54+tDnBn/\njd14/Qi78dlx+v+7+hPs6lUMdvVQCc7UX93C+Zo7PjvErp5N4Uz9G3b1cTFO\n1/MiH7t6OoNdvV0iHNxqPevSZncerEG+sMKVWE+MfOzq+2Kcqf/Drj7QCCc4\nalO3+Pyrya/C9ufWF4Y4U3+I8/6pJv91Efk4Xf+MfOzqF7WwwZn6R+zqI4Oq\nvkPc8LxKU589TP2lcIRdPWaMXX2nxq4e1OBM/Wn697n1rMFt1k3X573nWEw+\ndvWyCrv62givbLP/VPeG5OPkoj3N/65Ffvr3ufW8BqfrAZKPXb1wUI3rL7de\nOsSuvlphV58d4dL/zM1/ai71z9jVg2vs6tcNztTf46HjOl/40gXUP1fnfpk7\n30aI3XwsCrv5WyLs5o+JcWb+L+zmgzLYzWeTCAc1OD/c/DfCSjjCmfnHsJsP\nR2M3342p4W9vgt38NsHtnN+589uE2M1fo7CbDyzCmfm3sJuvRmM3X40RTnBm\n/pWafH7ufChhTf94KJyZ/6Smf/xi7OYz0Thd/5PjjzPzT2A3f0SgrDPzb2A3\nn4NS/vkT4cz8Czgz/wJ28ysY4QS7+ROCWuTnzpcQCivs5kOIsJsPIcaZ+Q+E\nDXbzISS45WMzF5yaQP4dvkOs5s1u03cG+djNlxDhdH1R8u/wr0+N3fwJBh8f\n8VHrfz8nH3dZuLhCja/Ir00+65GSX1tc/7X99iHCpcetKJezi3zs5lfQ2M2n\nYLCbDyGpLdqfOtZufoJQWOF0fVPaP+EYu/kMtLDBpSr+3KJnSdq/On57GNzp\n/3sorO7029NIOMYF+/4SnChLvrARTrCbXyG4y/rwyt9n97iVfGGFO/25q9/i\n6uQLx8Ja2AgnwkFd36GwqutvT1TX/z5xXX9/6br+/jV1/eOdYDdfR1DPPz/D\neuL8x10um16g33DOv3r+9RvX89sPXU+0P9jN15TU89uzoL7fHoa4O+uB0/7h\nYj82L/ryWtrf+n57G9f371da/LsR/56Ifw8a+A6FVQN/eyKcmf+qgd9e6wb+\n9zMNxPdv4LfXwd3+/gpxZv6pu/32O7rb398xdvPz6Lv99tvcLe7/d/vtd9DQ\nd9jQb88VdvPnRMJxQ79918IGu+eRpKFo/xv5DhuJ9r+RaP8bifYfZ55/Gon2\nv5F//ibYzYcTNPbP91BYNRbtv3AsrIWNcCIcNPEdNhH5wlET/34VNxHfH7v5\nhUwTf38mTfzjETT1j1fY1D8fVFP/fIua+udj3NQ/n3VT/3w3ODP/HnbPQ8E9\n/vUZYvc8prB7fouwe36M03/PnW9R48z829jN75vgzPzDzWgf3fzT2M0Xr/Cq\n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\nP75GOBEOlnM/NDsHXlCC/OX++aKwYv008nHpaYdfHlGDfGGNC7N+Gvn4+C3/\nbhrejHyczldF/hfsH9ZHI/8L/3xWOF3vjHycrm9GPk7XNyNf2OB0Pi3y8UbW\nMyN/he8Qz2I+LvLxiDdqrC5wgPwV/vUY43q9Gnw3+HxrjdP1w6wNTucPs07S\nzx/YodvZD1gHX/rXe4jT9be4/nE63xnXP97F/Gnk49Wsd0U+7sL6U+R/6bcv\nSfp5/d9f2v9c2p+V3I9X2fng6P9Z6bdPCqfzy9H/IxzjdD46+n9wy40/FOr3\nMO0fTtdzov1b6beHwVe+Q5yu30Q+Xsl6TeR/5bevMc70f2HXP2VwOPPc90/s\nJF84+JrzM7e/LcRdWF+J9l84wul6SrT/2PVv6a/9+4MRTvCk+hNn9yrN/ecb\n3yFO108iH7v+skg4xgnrJZEvbHBz1k8iXzhY5TsUVtj1x0XC8Sr//qiFDXb9\nnQl2/XnBt75DYSUcCcfY9Qdq7PpbjXAiHHznO8Tp+k3kY/c8EOF0vSbyxb9r\n8e9GOMHp+k7kf8/+cc8fwgq7/soIp+s7kY9d/6XGrj/SYNcfmeDM889qa9ff\nGOKQ9ZvIx2NYr4l84Ri7/kmN3fOWwZl6Q5yp91vD9ubWK4bY1f8p7PovI+zq\n/2Lsnvc0dvV/Brv6tgS7/s5gLe1zbn9niN3zpMKu/i3C3VnfiHzs+js1ds+n\nBrv+zgS7/s7gB2vXvxli9/uEwq6/M8KZejvsnpc1dv2ZRjjBrj8zWGft+jND\nPIP5ZsnHrj8zEo6x68/U2D3fG+z6LxPs6vmC9eTn9l+G2L0/Kpx5/8TufTXG\n7v1R49afRrd2OtfaYPe+m2DXHxn8aO3eX0Ls3pcVdv2REXb1fTF2/ZEau/cl\ng937eJLm5b6vBht8h9i9jynhCLv32Ri791mN3fuewe79NMHufTHYyP3JvX/i\nTL0bztS7Ydc/GeNM/xt2/RcGZ/rfsOuvDDaxPbn9cSHO9D/iTL03zsz3gF1/\nisau/szgTP8Ldv15wU++Q2GFXX9OhF1/T4xdf5AWNjgz34VwsNk60/+HM/1P\nwhHO9P8Ja+z6Aw12/VuJcLCF9tf1/wkrnOn/w5n6B2GNM/1v2P1enAgHW32H\nwgpnfn8WjrH7fVsLG+x+D0+w+/08+Nl3iF19hcKufiLCmflOsKuH0DhTf4Yz\n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\npyWd/5ZU/7fU9U1sqctPaqnLV26p6xOzky6PdiddP7iddPn1O+nyHXai8r+T\nvl7STnT9wcX95866vbZkt7Nu7z0s9wMBLu4/4OL5Gy6ef+Di+a9V5eL5k+zg\n4vmXHOj3Izm10nmZbHbR22d30dvvyH4Xvb+BHMmJnMlmV/3/LdmRPTmQ4656\nfxI570r7v5u2Jbvd9PH05LCbPh+RnMiZbHbXtmRH9uRAjrvT+Sfn3Wn/96D9\n30MfL0f25ECO5ETOZLMnlT+y21NvnyeHPan8kxM5k81edP3tRcef7MmBHGH5\nHpvIGS7m321duZh/l+zIHi6+/5IjOZEz2bTRtm0on+zb6O0Pbej4t9HnJ7Wh\n67+Nrj9NW9T/8vzfVtffrq2u331b3R4EuJh/q61ub1Jb3R7ltrr9Mu0qF88f\n7XR758ieHMiR/l8i53aU317bkl173b56ciBHciJnstlb25Id2ZMDOe5N7T85\nk80+2pbsyJ4cyHEf2n9yJpt96fiT3b76/Pl96fyTIzmRM9l00LZkR/Yd9PaE\nDnp7Ywfaf3LuQMd/P1xvdc+Dluz209eTh4v+T3Dx/AcXz3/kDBf9v/bX17fd\nn65/uOh/sr+uLwJcfH/ZX9cvCS6+f+xP7c8B1P4dQPU/2R9A9R85ktMBuv7M\nB1D9eyDVv2QHF/1/yIEcyYmcyeYgbUt2ZE8O5EhO5Ew2/6B8siN7ciBHciJn\nsjmY8smO7MmBHMmJnOGi/6/TtnDR/5vsyQEu+n+TEznDRf/vQ9B+S/9ruJh/\nn+zhov8fOcJF/z+46H9MPzeHVpb+dRaW/niO7OGi/x85wtLfNpEz2XTUf2/J\njuzJgRzJqaPe/kw2nWj/O+nj4zrp4+c70fEnx076fKVO+vzmTnT+O+vyYcmu\nM5U/cuhM5b+zrr8SOXfW9aE5TNseputPB8v9syeHw3T9HMmJnMnmcBwfuf8n\nO7InB3IkJ3Immy6UT3ZddPvkyYF+P5ITOZNNV8rvqo+v66rPh++qz2foqstD\n7Er1T1cqf111+TTddPm13XR5d2TfTV8fgRzJiZzJpru2JbvulE8O3en6I6fu\nen9zd308TA+qf3vo69ORfQ99fAM59tDnI5Ez2RxB7Q/ZkT05kOMR1P6RM9kc\nSe0v2R2py5snB3IkJ3I+kuqfo6j+ITuyP0pfD4EcyYmcj9LXl+mpbcmO7MmB\n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\n/ZEd2ZPDFCr/5ETOU6j8T6X9n6qPj5uqy7Ofqo9nmKqPdySnqfr8ZLKZps+n\nJTuyn6bLQyBHciLnabp8menaluzInhzIcbouz4mcyeZGKv9kR/bkQI7kRM5k\ncxPlkx3ZkwM53qSPRyLnm/T5MDPo/JPdDF2e/Awqf+RITuRMNjO1LdnNpPyZ\nuvyGmVT+ZtL+z6T6Dy6+P92M663ue56F5XuWg4vvX3Cx/jI5wrK+SYKL9d/J\n5hacP1n/mezInhxgWU86wsX603C9rXc7p/VY5MOynou5VdvCxfovcLH+NTnA\nsl52JCdY1pvJcLH+dqws69VYWNazcWQPF+t/w7I+ToRlvfBEzrCst2Nuw/bd\ntEHnH/dEPtnBKwbVG3j/LsgnB3KEZb2fRM5kc3tlWQ/dkh0s6wl5ciBHciJn\nsrlD28KynpEje7hY/4gcyYn+PpPNLG1LdmQ/i/afHGfp45fIeRYd/ztR/mT9\n+Tt1+XB36vLmYVlvPsCyHlO8U5fXdCeV/zv19WNm6+vNwrK+kputr18Py3pL\ngRxn6/ogkfNsXX+Yu3R9ZO/S9Ze7S9dvnhzIEZb1mxI5k80cbTtH/z9H9nP0\n9oY5tP9z9PFKc3R9lOfo+sbM1efPztXn182l8w/L+lxhrq5f4lxdftJcXZ9k\nsplH5W+eLp+O7MmBHOfp+iiR8zyq/+7Wtnfr+tTdrY+Pv1uX73C3Pp7xbl3e\n0926fcl36/Jt5uvzZefr8urm6/Pt5+vyGebr9jnCRf+T+dT+w8X91z34f3X3\nDxaW+wsHF+t/wUX/C7j4/g4Xzx9w8fwPF/2/FlQu+n/B8j3bwcX607B8zw6w\n9M+L5ETOcPH9+15tS3ZkTw73Uj453au3N5PNQr1/luxg6Y/myYEcF+rjl8iZ\nbBZp20X6fDiyJ4dF+nxGcoKL/o+LdHkw92nb+3R5cmR/ny6PAS6e/2C5f0/3\nUfmH5X7X3I//V3e/a+/X9bG7n+rf++n6u19fn5GcyPl+an8Wa1uyI3tyWEz5\n5ETOZPMAtX9kR/bkQI7k9IDe3kw2D9L+P0j1H9mTAzmSEzlTnnmI8h+i/Sd7\nciBHciLnh3T5MUu0LdmRPTmQIzkt0eU5L9HthXlYtxeW7B7W14snB3IkJ3Km\n/28eoevvEb197hG6/h6h/X9En78Iy/1QguV5MD9C7e+jun22cPH8BxfPf+QA\nF89/sDzfpdr/q7tfyrXfl/uPxyoXzz+w3M87uFh/Fe7Q9ccXFv8P67+SI/zs\njj/8Z9DvWP+VnGFZ39U8rm3JDpb1YT05wLKebCQnciabJyrL+rSW7MieHMiR\nnJ6g/Cf09psn9fG1T9LxJ3u4eP4lR1juHxMs988ZlvtJk1Be6+4nbdLlx8Fy\nP+nJIenyGJMuv4mcky7v5ikq/2RH9uTwlP7/kZye0tuXn9LXi3la7499mvaf\n7On3A1zcf5MTOZPNM5RPds/o7fXP0PX/DO3/M/r4pGd0fZNhud83z2rbZ3V9\n5cieHMiRnJ7V9WEmm+e07XPU/j6n61f/HNW/z+n6OT6n25v0nK7f83O6PTDP\n4//L+1+4eP8NF+/f4eL9J1y8f4Xl+STBRf9juPj+8ULl4v4TLtYfhovxH3Bx\n/w3L/XqEi/t/uPj+Xcur629rllaW/rYWlvWIHVz0v4WL/rfkCI89/a8TeDby\nyZlsXtS2ZEf25ECO5PSi3r78ot4f85K2fYn2n+zJgf4+khM5k83LlP+y3l5H\n9i/T/sNF/2dY+kMkcoalf7RZVlnGu1lY+ks7WPpLe1jG1wVY1luKsPSfTrCM\nB8y1/1/Xn8O8gv8v6z/DMj7RwdJf2sOyXlKAi/WHYOk/kmDpP53J5tXKxfhL\nsiN7ciBHcnqV8snmNW1LdmRPDq9RPizrGSVY+odnuBh/uryy9Be3sIxXdXCx\n/jNcrP8My3pFEZb+4gku1h+Cf/rli9u3Px75ryNP1h+CZTyug4v+37CsFxTg\nov83LOv7JLjofwQX4+/fQHss49/hYvw7XKy/DMt49wBL//BITuRMNm9if+r6\nk1uyI3tygIv+5+QES3/0TDZvaVu4GH9P9uRAjuREzmTztrYlO7InB3IkJ3Im\nm3con+zInhzI8R19PBM5k827dPzJDpbx7Z4c3qXzT07k/K4uP2YFlb8Vunw6\nsl+hr4ewQl8vcYW+ntIKuv5W6OvXvKfrA/ueri/ce7q+8e/p+im8p+u3+B7V\nv7CMp8nv6fbEvK/bG/u+bo/c+7r98u/r9i68r9vDCMv48vS+bp/z+7o9Nx+g\nPa57H2vh4v0nXPS/gov+H7B8T49wcf8Ly/1xhuX+2nxYubj/h4vvX3Dx/gGW\n55FQ+/u67zURlvcNCZbvKxmW9wXmI5x/ef6GO9zzQfzlOTx/wz37vvvL4Efx\n/A0v3Of5I4dcj+dvOMfHfx8yHM/fcGj90KUPD8DzN9wiLVz7Wx88f8MHXjz/\nmGHHIP/fOJ+Tb+31R1vkw61a3Pj2ATsiH7azN1n0+xdXVPnwwpU/LF47p3KA\n85Ff+v9Oqhxht+OKJX+eXTnBvVe82fCK0ypnsvm48sAJr/X7X6/KluzInhw+\n1v8vwq3O/7Dv5YOQDzd6ODf483Lkw0tv/Hbjy25Bftb7Y+GejdY75Y83kE/2\ncIeTN9zw0o+Qn/XxieREzmTzibYlO7Inh0/09kRy+kRvf4b7P/fnfZcuRf6n\nKC/Dfq+/9nHkk92n+vj4T/XxC5/S+f+Ujv+ndP7hsYe+/MgV3ZD/WeX46/ON\njEM+vHqrRxqPsMiHzbIH+q+zFfJh9/Wcc6785fIqH+4dZ6V1v6kc4YHH/fVE\n8UnlBI/deOaA9d6tnMlmpbYlOzg+Oe3pq5ZV9uRAvx9XUj45r9Tba1bp/bFw\nq33uabLuOth/uOmIRU+M2AT7v0ofnwAvP/2Jx8xuOP7wkvlPnxn2xvFfpY9v\nJpvP9fmwn9P197k+f54cPtfXeyQnciabL7Qt2ZE9OZDjF3r70he0/1/o42NW\n6/JlV9PxX63Pj1+tz18gx9V0/sl5tS4/5kttC6/+9zXP1rsH5Q/ucv/QZhtc\nhXzY97/4otFDkA8P2fbCpRucj3xyImey+Urbkh3c+s/Lnh81AfmwmTx6m1G3\nI/8rvb3xK309pK9o/7+i8v+1Lt/2a30+3Ne6fHty+Fqfz/i1Pt/pa12+89fU\n/nyjbb/R9ZeD16y36sHLrkb+N7q+C9/o+jHC0/f65dTh9yP/G13f5m90/Wy+\npfofXnNAk/V/X4t8eGX/a+evrY/2H152/w3HD98C7T/s3pu822NN0f7Di/+c\natZui/Yfntl1xrxLW6H9/1a39+b/Kg/4+I4/hx2E9h/O9Wa/+cihaP/hXrvO\nmfP74ciH5f4hwAtvWrDzIycgH5b7jQRPX3Xf6/v1RT4s9yfmO20Lrznu4Z6/\nXYh8eMClj7bc7xLkw3K/E+ClXz81a81o5JMTfODmzw7tMB75cIs+S3dcMhX5\n32tbePqIl9b8OgP5cIO7lr2y723IJwdyhMOyV2+/ZDby4Z9+WH7JQ3cjn2x+\nqPzhgW9vv++DyCc7uLj/g+X+MMDz3/jo4n1eRj5s13zcbfBy5JMzPHnbT7d7\n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\nB+vj6wbT/pPDYH38IjmRM9lcQscfXr35HV9sNRj5ZA+bF245aNq5yCdHciJn\nshmC+nv4TZO2Ph35ZAe3bjP1y2nHI58cyBHu8vn1BzftgXxyhnvPmDBl+iHI\nH4rz0fPqr5vui3x47PqjDrlxd+STPRwfCdP+tgPy4SUXDP/2xq2RDy9vMaTj\nNpsiH1793r9uvGld5MNm4gXfbbPm0ip/GPa307mdZ3xb2ZId2ZMDOZITOZPN\npXp77KV6e92len88OZDjpfp4JHK+VB8/M1zbkt1wOv7kMFyfvzhcn980nM4/\n2VymbcmO7MmBHC/T5TGRM9lcTuX/cn19OLK/XF+PgRwvp+v/cl1f5Mt1/WKu\noPrnCqr/yf4Kqv/IEW519nP7NnkJ+Vfo9iaTTai85s9Xxm3xMfKDbq8cLM8j\nPuj2LcDyfBJhd/z3HzRqh/Yv6PYx1/Lqnk/MCN2eWlieV9wIan9H6PY5jNDt\neYTleSXBcn+QYbnfMFdWlvsRCxf3P7DcP3m4uP+C5X4twvJ8kODi/o9srsL2\nyP0nLPenDpb7XQ/L80KAi/nP4OL7P1zcf8PF/f9IlO+6+3kLy/d+B8v3fg8X\nz99wMf8fXMz/Bsv3/Ew2o1BeZP4/WL7nO7KHi/n/yBGW9wcJLuY/I5vR2B6Z\n/4zs4GL+PVi+1wdyhOX7fILl+3yGi+/vY3A9yfd3soOL7+9w0f8KLua/JCe4\nmH+TbMZWLr6/w8X3d7KHpX9YIEdyguV7fSabq7Ut2ZE9XMz/Ro7kRM5kc422\nvYbyyf4a2n9Y3nfFa/TxTNfo85Wv0efXjNPlw8LF/HvjdHn0sPRPCeOo/Nf+\nvu59WRqnr888Tl/PZryuD+x4XV+48bp+8eN1fRTG6/oqwsX7j/FU/43X9aOZ\noG0n6PrUkT05TND1cSQnWJ6HM9lcq22v1fW9I3tyuFa3F5GcyJlsJmpbsptI\n+eRAjhP1/iRynqiPj7lO25Id2ZMDOZITOZPN9ZRPdmRPDuRITuR8PZ3/G+j8\nkx3Zk8MNdPxvoPNPzvT3ZhLlkx3ZkwM5khM5k81kyic7sicHciQnciabKZRP\ndmRPDuRITuRMNlMpfypd/1P1+fNw8f4ZlvvJSE5w8f6bbKahfpTvD7C8r3Jk\nD8v9bSBHWO6HEzmTzXS0R/L+i+xgud/2sNyPB1ju1yMs9/MJlvv9DMv3E3Mj\n2qu65wMLy/cNR/awPG8EWJ5HIjmRMyzfY8xN2pbs4OL5B5bnowDnrm/sPelL\nPH+REyzPVxmW5zMzo3Lx/ovsyB6W91mBHGF5XkywPF9muHj+nFlZnk8tLM+v\njuzh4vkXLt7/wMX7H1jeD2RY3h+Ym/H/6t53WFjehzjYn3Hq4c1exfsXOO17\nxK3bzsL7F7j+Ce62W0bi/Uvt93fb67dbT8L7F/i6KTvdGTvj/Uvt97f764Zk\nc7x/uQXl6cf/zdvxi2FVPhzm/GFmfVjZwQsb/zh/1guVPZyHf9X7zvsqB7jV\nzI9O2mlS5Qj33uDtDXa+vHKq/b+By+7b+ezKufb/3n/m1Fa9KptbtS2cOz26\n8S4HIx9e89uDfm575MON7r3vwV12RT7cqt+CBvO2Qz45we5v8/ruuiXyySZq\nW7j3q3cumbcx8smeHMgRHnjVbQ13M8gnZ/p9c5v+ub2N8unnnhzgsR1u7nf3\nz0OrfHIiZzh+O/2R3b6ubG7XtvCS2yc3mp8rO7KHl59w3Zm7v1M5wKsbjH9s\n/svIJydyJps7UN6fHtN4j6eQT3ZkTw7kCDe95Kr+9zyIfHImm1naluzInhzI\nEW69+xVP7DEf+eQMd/lkWJMFtyH/Tm0L+6mDz9lzGvLJnhzIkZzgId0vSgvG\nI59sZqN8mPO32utK5JMd2cOzHjh7wL2XIJ8cyYmcyeYubUt28GPn/PPpvc5D\nPjnAb213etOFfZFPTvA3b/U5v3Vv5MP1run97MIjkD8H5+/gXtu06Yh8uPVP\nRw1c1AH5cJe53Z9vsyfyYf9XdXzfjsgnR3IiZ7KZq23JDh6yRceL2v4N+fTz\nQI7kRM5kM0//f0t2ZA9ft/QfS+9riHx4zmX7N29XD/nkBKe2+wy6/7chVT7Z\n3K1t4RVftHmp3XeVHdmTAzmSE/z9zD3s4pXIJ5v52pbsyJ4cyBGuf8wug9u/\nj3xyhptt2HLZ4teQf4+2hds/ZnfY+znkkz05wD0ubDbkgUeQT07kTDYLtC3c\nb6emr+69EPlkTw7kCA//YIsWD96JfHImm3u1LTz5us2G7TMD+WRPDuRITuQM\nz++8yfIHr0P+Qm1LdmRPDuS4kPLJmWwWaVuyI3tyIEdyWqS3L5PNfbT/8LO/\nb7DTvqORT/bkQI7wh/euO/yhS5FPzvBP/f58fd8LkX+/tiU7socbbPP7zkvO\nRD45wva1ny/r0Af55Ew2i7Ut3GHkD28uORr5ZE8O5Aj33O/bXfY7HPn080w/\nNw9oW7Ije3IgR3IiZ7J5kPLJjuzJgRzh/v+3+oqHD0Q+OZPNQ5XDHSvf3q8t\n8uHpvfNuj+yMfLInB3IkJ3jhph+O2H9b5JPNEv37luzInhzIkZzIeQnlP6xt\nyQ5e+vS77z7SGPnkQI7kBOdL3tzjgPrIJ5tHKq/Z/bWrHv3vJVU+2ZE93OjT\nl9474MfKgRzhFtOe3+ux1ZUTfGCPp0cd+O/KmWwerdxrnSc+eOxN5JMdPODB\nh9sc9CLyyQEeee4DYx5/AvnkRM5k85i2JTt4pl300UGLkU8O5EhO5Ew2j2vb\nxymffu7JgRzp7xM5k80TtP9kR/bkQI7kRM5k8yTlP6nPr3tSlwf/pC4/4Uld\n3iI5PanLZyabROU/6evDkT05JLr+yClR/UM2T1H9Q3ZkTw5P6fozPkX1LzmT\nzdPaluzI/mmq/8mRnJ6m9o9sntG2z+j22JH9M9T+w3J/EOHi/gOW+5NMNs9W\nLu5/yA4u7r9guV8NcHH/Cxf33+RMNs9Vlvt5S3ZkD8vzQiBHcoKL5w+yeV7b\nwsXzD9mTAzmSEyzPY5lsXtC2ZEf25ECO5AQXz59ks1Tbkh3ZkwNcPP+SEzmT\nzYvaluzInhzIkZzImWxeonyyI3tyIEdyeomOP9m8TMef7MieHF6m809O5Pyy\nLp9mmbZdpq8HR/bkQI7L6PojZ7J5RduS3SuUTw7kSE7kTDav0vVPdmRPDq9S\n/UNOr+r6K5PNa7r+tGT3mq5vPTm8puvnSE7kTDbLtS3ZkT05kCM5kTPZvK73\nx5Ld6/p4eHJ4XbcnkX6eyJls3qB8siN7cniD9v8N3X4mciabN6n9fVO3z47s\nyYEcyYmcKc+8RflkR/Zv0fl/Sx+PSE7kTDZvU/knO7InB3IkJ3Imm3d0+bFk\n946+Xj05kCM5kTPZvKttyY7syeFdKv/k9C7tP9msoOO/gso/2a+g80+O5LSC\nyj/ZvEflj+zeo/JPDuRITuRMNu9r2/cpn+zJ4X3af3Ii5/ep/H9A9Q/ZkT05\nkCM5fUD5ZPMhHX+y+5COPznA8rwRyQmW55MMy/OL+ahy8f4RLt4/wsX7N3KA\ni+c/WJ4vEyzPoxku3v/8u3Lx/Et2sDwve3KAi+dvcoKL9z9k83Hl4v0P2cHF\n+x9yIEdyIme4eP+QtS3ZkT05ZMonJ3Imm0+07Se0/2RPDuRITuRMNp/S8f9U\nnx9H9uTwKZ1/ciJnsvlM25Id2ZMDOX6mty+RM9ms1LZkR/YrKZ8cV+rrI63U\n11Neqa9Hs0pfvxYu3r+s0vWBX6Xri7CK6p9VVP+vovpvFbV/n1P7DxfPH3Bx\n/w8Xz9+wfA+OsHwvTnDx/RmW7+vmi8rF93eyg+X7vYfl+36ApT9AhIv+B7D0\nX8iw9I8wqysX/S/gov8HLP1VPDnA0h8mwtJfJsHSvybD0h/HfKltYenf4+Ci\n/xEs/ZUCXPR/gqV/VCJnWPpTma+0LdnB0h/LkwO8dOKTi+d0RT45kTNc9P/6\nWtvC01surT/nVOSTPTnA0r8skhM88NHlfe76F/Jh6Z9mvsHxPPq9hbPHIh+W\n/mwObvTFJ/Vm34x8eE2bzxe0nIN8coSlf1yCpf9cJptvcb1L/zu45z/qHXfH\nD8iHpb+eh78/e8v/3vZ39P+DVyz+213b74T+f7D090vwkLzrUbYn+v/BHZ7a\n94hbL0D/v/9DfdLgwF+bD8P4S1j6Ezq4ml7s5huRDxf9D+EhTU+6eeYzyCcn\nuMuCvj/MWIF8uBh/+h2uJ+n/CMt4TQfLeEwPS3/KAMt4ywgX/S9hGd+YyeZ7\nbE/d+EYLF+OP4aL/J1yMP4eL8d9wMf6anGHpz2p+QHmr6w9rYRmf6Mgelv60\nAS7638LSPzfBxfwrZPMfXC91/YMtLP2LHdnDxfwrsIx3jLD0Z06w9HfOcDH+\n8Udsv4x/hIvxj3Ax/hEuxj/C0l87wsX4R7iY/wCW/ubmJ5T3uv7oFpb+7Q4u\n5n+GpT98gIvxD+QEF+Mv4GL+i5/RHsr4H7KDi/mX4WL+DXKEZTxSgmU+kEw2\nv2B/6sYzWbiYfxkuxj/BxfwrcDH/NyzjqRI5wzLe0vyqbWEZn+VgGb/lyQGW\n8ZYRLuY/h2V8ZYZlPKVZg/y6+ZItLOPJHCzjKT1cjD+DZX7kCMv4ygTL/MgZ\nlvFs5jdcL3Xj3SzZwcX8x+QAy3jLCMt4ukTOcDH/1O+4nurGY1q4GH8JF+Mv\n4WL8JSzjKSM5wTIeMMMyXtD8geNTN77SwsX8+2QPF/MfkyNcjH8kZ7JZi/JR\nNx+yJTtY5kf25ADLfGARlvmREyzzh2VY5mMz/8XxkPnf4GL+NVjmc/RwMf8a\n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\n6vJryW4h1b8L9fURFur6Mi7U7U1aqNujvFBfv2aRbt/sIrr+F+n6wS/S9UdY\nRO0vOcHF/Edkc5+uv+x9VP/BMh+Uhx9b+/9d3Xv8V0Wdx/FxQyQvRGmISDWr\npGhZtGlqyjrlJTRUJEK8kJO6ikWEiobXBpW0NVPXSkt3m7bdarfah214SUsH\nMTOzQkEFb4yX8oarblp0szrv83gw5/P68/n44fd9zsx8z9Xv53PIFdvMUL7c\n6llludXDKnKrn1Xly367TzlyF+V/v3Orx+XhILd6XhFOcIYLXGG3FPlwWGq3\nN8qtXliS151wwD7jpyh/KfZfbvXAKuyus+Pn4QBHOF1n5yPDBa6wux7519vt\nC3C83u5fgjNcrrfjU2F3g10f/gY7vuEGjP8Ndn6S3OrFZXlQf67//A3162r/\neUdO+vI1v1H9uxu1HjbUy/Nyq6cX5FZvL8rTvvqmBXPWqP6e3OrzZbnV8ytw\nhd0POrd6gB4OcIQTnOECV9jdhPyb7PYFOMIJznC5yY5Phd3N1h4ON9vxjnCC\n8812vgpcYfdDO98eDnCE0w/t52W4wBV2P7Lb73+E/f8Rxl8++7VvnPCR25Uv\nD+pPyq0+ZZFbfcsqt3qY7hblbaiv6eEgt3qcEU5whgs+r8qD+pu3Wvtb7fYG\nOMIJzvi8Irf6oPVWuz2uYP+L3f4ARzjBGS5whd0ya78M47/Mbn9cZvcvLcP+\nL7ProSyz66Uuw/HnNnz/brPrM9xmj49RbvVD0232eJrlVj+0yK1eaL3NHp/d\ncmsvt3qgYbk9vsflOP8vt+eHvNyeP8pynH+W2/OTu92e3/ztOP/ebs+XUW71\nOJM8qL8pD+4/4Sq3+0P3Y2svD+pPwhFO8uD6Dy5whd0d1h4OcIQTnOECV9j9\nBPny4PkXHOEEZ7jI7fq5wu5OzeeG620vD54/wRFOcruez3CRW73MKg/qX/5U\n27vh/tzLg+dPcru/iPLg/kNuz3Oy3O7Xi9zuZ6rc7s/dXZ3b/ZCX2/1SkNv9\nVZTb/VmCszy4/4Wr3O4f3c+0fe39nzy4/5Tb8+oIJ7m9T8jy4Pm3PHj+Lg/e\nv95t7eVB/Ul5UH9Sbu8Pkzx4/wEXeVB/EnY/t/Zyq0cZ4AgnOMvt/WWBq9ze\n37hfWHt58P5bHrz/kQf1J+XB+095UP9NHtRfkwf1T35p7eVB/RM4yu19aJIH\n9dfkQf01efD+Ux68/1zReVB/Tx7UX5MH9dfkQf01ub1fy3J7P1rgKrf3c+4e\naw+He+x/H+F0D/Lhco/d3nqP3R93r7W/145HgOO9dvySPHj/DBd58P+f3Gvn\ny6208+nlwfvvlZj/lXa9JDivtOutrLTrsa6069utwvpfZb+/QW7//0CU2/u0\nJLfnV1kePH9cZY/HdZU9nrv7cPy/z54vgtye78b77Pklye35UYbLffZ8VWF3\nv7WHAxzhBOf77fm0wBV2D9jzsYfDAzj/w0keXH/I7fqoyO36qsqD5/+rrb08\nqH8ut+u7CCc4wwWusFtj7eGwxm5PXGO3N8mD9w9rsP9r7PjUNXb83IMYfzjA\n8UE7fwnOD9r1UPD3is9zDyEfDnB8CPMPZ7g8hP2H3cP233s4PIx8OMEZLnB9\nGOv/EWv/CL5/cITTI/j+wwWusHvU2sMBjnCC86OY/0ex/49i/a2130+/1q7v\nsBbfP7ndryW5PT/Mcns+WOTB81950H+idm79K7zc7leDPOh/Ibf72yQP7n/h\nAld50H/jMWsPBzjCCc5weQz5sHvc7o9/3O5vgOPjdnwSnOECV9g9Ye2fsPMR\n4AgnOMMFn19h9yTy4fAk9h9OT9rxy09i/uX2/KTK7fmh+1XnwfM/efD8D47y\n4PmrPHj+Kw+e/8jteWCF3a87D/rfyO35UpDb88IIJzjL7XlVgSvsnrL2cHgK\n+XCC81N2+8tTdv8q7J7u3Pr9+Kft+AW5PT+LT9vxTnCGC1yftvPnnrHz6+EA\nRzjBGS7P2PVV5cHz52etPRyetes1wulZu77zszj+PIvjz7P2++Kew/HnORx/\n4AgnOD+H4w9cYbcO3384rEM+nNbh+L/OjkdZZ8errsP4P4/5fx7r73m7PuPz\n9vuR5EH/LXnQ/0tu/cSq3PqTuf/r3PqZeXnQ/0xu/dKi3PqpJTjLg/5rctrt\nF9/Yfmvl95+/oZ+be6Hz+ltunPmfj3f2cusfF+RB/zu59RtMcutnmOXWD7HI\nrd9llVs/R/ei/n3r/ygffWvcfd5mypfHjZg1epeX1P9Ubv1Sk9z6u2a59Yst\ncutHW+XVYyZcefJx6r/6ktbbhn64Xm79coM84qwt9z3lEOXLg/67cJZbv94C\nV7n193X/r+3b0B/Yy9O+MnL/37xD+XLrLxzlUWv/uO3SrZQvf2f+K9e8PEL5\n8sPdD8pfUP9jufVLrnLrp+x+o+Prhn7LXh6175Mvv/Kg+i/DUW79mhOcZb9+\n7UGnr1C+3PpBV7n1j3Yva/u2Xjntd9cqX75q8V3rf3e18uXWvzrKrd91kls/\n7Cy3ftlFbv21a//5v/rfe/Y8Vvmv6PM29Pf28qD/t9z6iUd50H9cHvQ/l1u/\n9SLvcdQmm5z1iPqvy62/u/uttqf1f5dbP/kAR3nMD+rmr56r/u9y61ef4QJX\n2P3O2sNBDtuvvvHVk5QPJ3n26pWjP32M8uUFl/zy+L/MVL580ft/dtOnD1K+\nfON3bjsh7ab89Z3d3dfN3Wis8uVxi793y+LNlC8v+PDfjiCPndvlyxdtes28\n1zzQOckrdrp0/gU3dM79533hM+OX/Hvn0n/egect2PiqzlWe/Oo5dyy5pLP7\nfeep3z9jwsjzO3s4wBFOcIbL721ehd0frD0c4AgnOMPlD3Z7Kuz+iP2Hgxzn\nnnbKZxYpH05wlhe96eQ7R85XPlzly+6d9+YLj1P+n6w9HORvXTh34SZHKB9O\ncJbL3sffdeEhyocr7P6s88FLx/hR+ykfDvKL3zjq9Iv2VD6c4AwXedTRh989\n6p3Kh92r1h4Osn/9h7b77ETlw0me/LfD42vHK1+Okw+YuOnGyoerfNlXpqzY\n9MVzuvy/aPwO3XOHi3/V2ctlxG5nb/ZQ5yCv/sHkey9e0TnKL85/+6TN7+ic\n5FETJ537uZs7Z7jIe3z+LTtf8o3OFXZunLGXp++7bdriGuXDUZ67fuz9l1yu\nfDl99w1vH32h8uECV9htZD/PwwGOcNoI+XCBK+z+ztrDQb7q2NHnff5s5cMJ\nzvK1W2+6evQpyocr7F7T+c67N37HpScqX66LN7rgdXOUD0d5/Xv+vObSGcqH\nM1zgCrsR1n4E8kfY7Ysj7PanERj/EXZ+ygi7fuoIu97cxlh/sl+z/arNv6d8\nOMIJznCBK+xGWvuRdnvCSKz/kXZ/00g7HnmkHb8yEuMvj1m3/p1jpip/k86T\nvvbyksumKF8Os158aMy7lS9P32zduy6fpHw5nfbEI5dvqXw4y9euffCz//Lq\n2V2+fOcX7l/7hpc7V7keeO9uVzzT2Y3S9r3684u3XNvZy2OW/vSxK1Z1DnCE\nkzzppB/vvtVdnTNc4CqHNy+75Au3Kv+11l6evfKHT2x1nfLhKC+46MY9v/jf\nypcvmrL00jdm5cs3fvPbe429WPnyiqO/efmXkvLlp1//9afGnq78TTu7n/zb\nlCs/rnx53NlfuWLrjyofjvLkd33pmStnKR/OcJGn/vryfcZNUz7sNrP28uyr\nL/niVe9TPhzhBGe4wBV2m1t7ecH0zz43bnflwxFOcMbnFbjCbgvkw2ELOz4R\nTnDeAuMPV9iNtvajMf9whBOc4QJX2L0O6w8OcIQTnOECV9iNQf4Y7D8cx2D9\nwxkuY7D+x9j14l7fOd+UrtxmO+XLKyYu2nf8FsqX3aWffGH8+rO6fHncfh/f\n/+rnOyd58u9PuHrbJzpneer/HPvS1as7F7mvV9e5yn29uM7uDZ37+m2dvbyH\n6o11DnJUPTHly5ep3qPy5aJ6YMqXV6semPL7z1c9MOXLo1Q/U/lb6vyj+mDK\nhwMc4QRnuMAVdlvZ7fFwgCOc4LyV3d8CV9i90drDAY5wgjNc4Aq7scgfi/0f\ni/GX+/ptZ3b5cl+/rXOW+/qynYvc17ftXOW+Hm9nt7XOp6oH3NnLff3hzkGe\nrXrFnaOcVB9Z+XJVfWfl95+n+tDK7/971adWvnzRHv96/LdfOaPLH6fvn+pj\nd/ZyXz+7c4AjnOAMF7iOQ/422l/Vx9b+y5NUD1v7L69XPWvtv3yt6lFr/7ex\n45G3seNX4Np//jWPHLnDFRr/8dYeDnCE03j7+Xm8na8iL1A9auXLV6k+tvK3\ntfvj5TsvvXXptw5U/rZ2fiOctrXjk+GyrV0PFXYT7Hh7ecH5Xxv9Nqf8CXa+\n4gTMv9zXY9f8y329ds0/XGH3JmsPBzjCCc5wgSvs3ox8OMARTnCGi9zXt1e+\n3NfDV/5bdP5S/Xzlw0Hu6+0rX16k+v7Kh7Pc9ydQvtz3M1C+3NdnVL7X9qjf\ngvLlyerXoHx5qvo7KB9Oct8fQvlwgSvs/t7awwGOcIIzXOAKu+2Qv53dvwBH\nOMEZLnDdzo6v297awwGO2yMfznCBK+wmWns4wBFOE+325Yl2PRW4yn2/DuW/\n1drDAY5wgvNbkQ9X2O2A9b8Dxh+OcIIzXOC6A8Z/R4w/HHa02xfhBOcd7XgU\nuO6I7/8ke3zwcIAjnOAMF7jCbie7PR4OO2H+4QTnnTD/cN0J37+d8f3bGeMP\nx51x/IGz3PfTUT5c5b7erfLfZu3hAEe579+jfDjLff+fRV0+XOW+vm5n9/bO\nfX+hzh4Oct+/qHOUJ6j+bucEZ7jAFXa7WHs4wBFOcIYLXGH3js67ql6w8uEg\nT1P9X+XDCc5wgavc1w9W/jutPRzgCCe5rx+sfLjAVe7r+yp/srWHg9zX+1U+\nnOS+3q/y4QJXua+Xq/x3de7r5Spf7vvLKR+OcIKz7FVPV/lwhd0/WHs4wBFO\ncIYLXGH3buTLe6i/n/LhCCc4wwWusNvV2sMBjvJ01R9WPpzx7wtcYbcb8uGw\nm/38CCc4wwWu8lz1Y1T+e6w9HOS+nrLy4QRnuMAVdrtbezjAcXe7fWl37D9c\ndsf4w24PjD8c4AgnOMMFrrDbE/lwgCOc4AyXPTH/sHuvtYcDHOH0XjsfGS5w\nhd1eWH9wgCOc4AyXvbD+YLc31h8c4Agnue+Pqny4wFXu648rf4q1hwMc4QRn\nuMh9P1jlw+4frb1cP7Vyl71GKR+Oct+f9lNdPpzlvr9t5wJX2O3TeaLqqXf2\n8t7Tbluy96OdAxzlmaq3rnw4w0Wep36/yoddsPZwgCOc4AwXuMLufciHAxzl\nvr+x8uW+3rzy4QJX2L3f2stL7/vOu2/5L+XDEU5whgtckef2RT4c4AgnOMMF\nrrDbz26fhwMc5b5/tfLhLPf9rpUPV9jt3/lPL391t33+WflwkPv+28qHE5zl\nSernrXy4ykH9wJV/gLWHgzxb/cWVDyc4ywvUr1z5cIXdB6w9HD6AfPw94e8Z\nfy9whd3Uzn3/deVPRT7+HuW+P4Py5b7/u/Llvl+88uW+v4Hy5YUHHPXF/R4/\nvcs/sHPfb6Czl9f9cv997/hu5yDHIya/9IEzOke5r//bOcl9vfrOWT5ev//t\nXOT+98+ndfly//vbzu6gzv3vZzt7uf/9bOcg97/v7hzl6bve/+ovrumc5Ln6\nPW3nDBc56fe1yofdB609HOAIpw8iHy5w/aDdfjfN2sMBjtPseCQ4T7PjV6bZ\n8a1y//tm5R9s7Q+28xPgKPe/r1b+wXZ+88GYf3mafk/eucp9/W2tv0Os/SF2\nfQU4wgnOcIEr7A5F/qF2PQc4Hmr3Jx1q9zfLZ+v37Br/Q+141UMx/tPtfHk4\nTMf8T7frKcEZLnCF3WHWHg5wPAzfv8Ow/g7D+jsM6+8wfP9n2PHxcv97f+XP\nsOMZZ9jxTjPsfOQZdj6L3Ndn1/zLff1zzf+HOvf9TTT/ct8PRfMvL1K/FM3/\nh+zxMMlT/2PXq39yvvLlCe+d8sIdVykfrvKIJe/78gFfV/5Me7z18qrxBz2/\n/43Kn2mPz1H+3B9nPXf7A8qfaY/nWT768mP2uX2d8uEKuw933k/9bJQPBzh+\n2J5PEpzlcafMm7Lv5jr/wBV2s6w9HOAIJzjPsttb4DoL+3+4HT9/uB3fcDjG\nX+778Wj8D7fzl+FyuJ3vCrvZdn342XY9hdk4/8626zHBebZdvwWusDvC2sPh\nCKx/OB1hty/DBa5H2P1zR1p7OMARTkciHy5whd1R1h4OcITTUfj+wwWusDsa\n+w8HOMIJznCB69F2/twcaz/HHg/DHHu8jHPs8TTNscfbPAfn/zk4/83B+e8j\nOP/IfT0lHf/lvh6Tjv9yXy96YZcv9/WsOme5ry/buch9/YrOVe7rr3V2x+j7\nrvptnT0c4AgnOMNFXqj6AMqX+/ptyo+d+/oZypf7+hDKlxeoHovy5b5ei/Ll\nvl6X8qMdnyL39bmUD7uPdu7rwygfDnJfv0v5cIIzXOAKu2OtPRzkvj6Y8uEE\nZ7jAVb5G9cS0/o6z9vIFqiem9QdHeZ7qien6B87yTNUX0/XPcXb9Vtgd37mv\nJ6b847H+4Sj39cKUD2e5rxemfLmvJ6R8eXD/80+dB/cfcJAH919yu75LcIaL\nPLj+g90J1v4Ee3wIcJTb9WOCM1xOwPEHdid2btebXm7XmwGOJ9rjW5IH159y\nu18oJ9rjY4XdXGsPBzjCaa7Ny3CBK+xOQj4cTrL/Pp5k9zfBGS4n2fGqsPuY\ntYfDxzD+cIIzXOAKu49bezjAEU5whgtcYTcP+fOw/3CEE5zhAlfYfQLjDwc4\nwgnOn8D8wxV28639fLvewnysfzjBWR7c/8t9vy7lw+6T1h4OcIQTnOHySbs9\nFXYLrD0c4AinBdh/uMB1Ab7/J1v7k+18hJMx/3A6GesfLnA92R5v3Sk4/sIB\njnCSB8+f4HIKjv+wO9Xaw+FUez6Jp9rzUYLzqfZ8VuAKu4X2fOkX2vNtWGjP\nx3GhPX8n+SrV31T+Qnu+L3K7Hqhyu15wp3Xu65MqXx5cf8BRbtcvSR5c/8jt\neqrIg+sv2J3eeXD9Bwe5XY9GOMntejbDBa5yuz52n+rcrp89HOR2fxHhBGe4\nyO36vcJukbWXL1J9ReXDEU5whgtcYXcG8uEAxzOw/3CGC1zldv/izrT2cDjT\nzkeEE5zhcqad7wq7s+z68HCAI5zgDBe4nmXXrzvb2sMBjnCCM1zgCrtz8P2D\nAxzhdI79Pme4wBV253Zu91f+XHs8CXCU2/1VPdcej9ynrT0c4Agnud2PZbjA\nFXbJ2sMBjnCCM1ySPR5X2C3G8RwOi+3xP8IJzovt+aPAFXbnWXs4wPE8e75K\ncIYLXGF3vj0fejjAEU5whgtcYXeBPT97OMARTnCGC1xhtwT5cIAjnOC8ZLh/\nfwWlcHJm\n      "
                  ]
                 ]
                }
               },
               {{}, {}}
              },
              AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
              Axes -> {False, False},
              AxesLabel -> {None, None},
              AxesOrigin -> {3.87609994*^9, 0},
              DisplayFunction -> Identity,
              Frame -> {{True, True}, {True, True}},
              FrameLabel -> {{None, None}, {None, None}},
              FrameTicks ->
               FrontEndValueCache[
                {
                 {Automatic, Automatic},
                 {
                  Charting`DateTicksFunction[
                   Automatic,
                   DateTicksFormat -> {Automatic}
                  ],
                  Charting`DateTicksFunction[
                   Automatic,
                   DateTicksFormat -> {Automatic},
                   "TickLabels" -> None
                  ]
                 }
                },
                {
                 {Automatic, Automatic},
                 {
                  {
                   {
                    3.8760984*^9,
                    FormBox[
                     StyleBox[
                      "\"06:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.876102*^9,
                    FormBox[
                     StyleBox[
                      "\"07:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761056*^9,
                    FormBox[
                     StyleBox[
                      "\"08:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761092*^9,
                    FormBox[
                     StyleBox[
                      "\"09:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761128*^9,
                    FormBox[
                     StyleBox[
                      "\"10:00\"",
                      Directive[],
                      { },
                      StripOnInput -> False
                     ],
                     TraditionalForm
                    ],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8760984*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876099*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8760996*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761002*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761008*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761014*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876102*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876102*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761026*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761032*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761038*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761044*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876105*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761056*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761056*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761062*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761068*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761074*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876108*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761086*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761092*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761092*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761098*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761104*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876111*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761116*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761122*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761128*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   }
                  },
                  {
                   {
                    3.8760984*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.876102*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761056*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761092*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8761128*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {Rational[1, 72], 0},
                    Directive[]
                   },
                   {
                    3.8760984*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876099*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8760996*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761002*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761008*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761014*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876102*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876102*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761026*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761032*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761038*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761044*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876105*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761056*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761056*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761062*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761068*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761074*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876108*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761086*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761092*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761092*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761098*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761104*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.876111*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761116*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761122*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   },
                   {
                    3.8761128*^9,
                    FormBox[TemplateBox[{0, 0}, "Spacer2"], TraditionalForm],
                    {0.009722222222222222, 0.},
                    Directive[]
                   }
                  }
                 }
                }
               ],
              GridLines -> {None, None},
              GridLinesStyle -> Directive[GrayLevel[0.5, 0.4]],
              Method -> {
               "NoShowPlotTheme" -> Automatic,
               "AxisPadding" -> Scaled[0.02],
               "DefaultBoundaryStyle" -> Automatic,
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2,
                "TrackMousePosition" -> {True, False},
                "Effects" -> {
                 "Highlight" -> {"ratio" -> 2},
                 "HighlightPoint" -> {"ratio" -> 2},
                 "Droplines" -> {
                  "freeformCursorMode" -> True,
                  "placement" -> {"x" -> "All", "y" -> "None"}
                 }
                }
               },
               "DefaultMeshStyle" -> AbsolutePointSize[6],
               "DefaultPlotStyle" -> {
                Directive[
                 RGBColor[0.368417, 0.506779, 0.709798],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.880722, 0.611041, 0.142051],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.560181, 0.691569, 0.194885],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.922526, 0.385626, 0.209179],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.528488, 0.470624, 0.701351],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.772079, 0.431554, 0.102387],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.363898, 0.618501, 0.782349],
                 AbsoluteThickness[1.6]
                ],
                Directive[RGBColor[1, 0.75, 0], AbsoluteThickness[1.6]],
                Directive[
                 RGBColor[0.647624, 0.37816, 0.614037],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.571589, 0.586483, 0.],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.915, 0.3325, 0.2125],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.40082222609352647, 0.5220066643438841, 0.85],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[
                  0.9728288904374106,
                  0.621644452187053,
                  0.07336199581899142
                 ],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.736782672705901, 0.358, 0.5030266573755369],
                 AbsoluteThickness[1.6]
                ],
                Directive[
                 RGBColor[0.28026441037696703, 0.715, 0.4292089322474965],
                 AbsoluteThickness[1.6]
                ]
               },
               "DomainPadding" -> Scaled[0.02],
               "PointSizeFunction" -> "SmallPointSize",
               "RangePadding" -> Scaled[0.05],
               "AllowMicroRanges" -> {True, False},
               "OptimizePlotMarkers" -> True,
               "OptimizePlotMarkers" -> True,
               "CoordinatesToolOptions" -> {
                "DisplayFunction" ->
                 ({Identity[Part[#1, 1]], Identity[Part[#1, 2]]} &),
                "CopiedValueFunction" ->
                 ({Identity[Part[#1, 1]], Identity[Part[#1, 2]]} &)
               }
              },
              PlotRange -> {{3.87609994*^9, 3.876111405*^9}, {0, 1318.8976799999996}},
              PlotRangeClipping -> True,
              PlotRangePadding -> {
               {Scaled[0.02], Scaled[0.02]},
               {Scaled[0.02], Scaled[0.05]}
              },
              Ticks -> {{}, Automatic}
             ]
            ],
            "Output",
            CellLabel -> "Out[11]=",
            CellID -> 352323955
           ]
          },
          Open
         ]
        ]
       },
       Open
      ]
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Properties & Relations", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 564785354
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Possible Issues", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 8951578
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Interactive Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 214968841
     ],
     Cell[
      BoxData[
       InterpretationBox[
        Cell["Neat Examples", "ExampleSection"],
        $Line = 0;
       ]
      ],
      "ExampleSection",
      CellID -> 1278749
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell["Metadata", "MetadataSection", CellID -> 760829568],
     Cell[
      TextData[
       {
        "New in: ",
        Cell["XX", "HistoryData", CellTags -> "New"],
        " | Modified in: ",
        Cell[" ", "HistoryData", CellTags -> "Modified"],
        " | Obsolete in: ",
        Cell[" ", "HistoryData", CellTags -> "Obsolete"]
       }
      ],
      "History",
      CellID -> 109253632
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         TextData[
          {
           "Categorization",
           Cell[
            BoxData[
             TemplateBox[
              {
               "Metadata",
               Cell[
                BoxData[
                 FrameBox[
                  Cell[
                   "Metadata such as page URI, context, and type of documentation page.",
                   "MoreInfoText"
                  ],
                  BaseStyle -> "IFrameBox"
                 ]
                ],
                "MoreInfoTextOuter"
               ]
              },
              "MoreInfoOpenerButtonTemplate"
             ]
            ]
           ]
          }
         ],
         "CategorizationSection",
         CellID -> 119615929
        ],
        Cell[
         "Symbol",
         "Categorization",
         CellLabel -> "Entity Type",
         CellID -> 46105042
        ],
        Cell[
         "RH/ComputationalFitness",
         "Categorization",
         CellLabel -> "Paclet Name",
         CellID -> 293643651
        ],
        Cell[
         "RH`ComputationalFitness`",
         "Categorization",
         CellLabel -> "Context",
         CellID -> 396291743
        ],
        Cell[
         "RH/ComputationalFitness/ref/$FITMessageDefinitions",
         "Categorization",
         CellLabel -> "URI",
         CellID -> 111195688
        ]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell["Keywords", "KeywordsSection", CellID -> 612704151],
        Cell["XXXX", "Keywords", CellID -> 41896083]
       },
       Closed
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         "Syntax Templates",
         "TemplatesSection",
         CellID -> 853809474
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Additional Function Template",
         CellID -> 884254962
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Arguments Pattern",
         CellID -> 640025511
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Local Variables",
         CellID -> 839397426
        ],
        Cell[
         BoxData[""],
         "Template",
         CellLabel -> "Color Equal Signs",
         CellID -> 423566799
        ]
       },
       Closed
      ]
     ]
    },
    Open
   ]
  ]
 },
 WindowStatusArea -> Automatic,
 TaggingRules -> <|
  "InformationPopupMenuItemAdded" -> True,
  "Paclet" -> "RH/ComputationalFitness",
  "NotebookIndexQ" -> True,
  "NotebookLastIndexed" ->
   DateObject[
    {2022, 12, 19, 10, 37, 13.5814289},
    "Instant",
    "Gregorian",
    -5.
   ],
  "NotebookUUID" -> "b9d5b487-2fad-427b-a649-a09b3405f17c"
 |>,
 FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
 StyleDefinitions ->
  FrontEnd`FileName[
   {"Wolfram"},
   "FunctionPageStylesExt.nb",
   CharacterEncoding -> "UTF-8"
  ],
 ExpressionUUID -> "b9d5b487-2fad-427b-a649-a09b3405f17c"
]